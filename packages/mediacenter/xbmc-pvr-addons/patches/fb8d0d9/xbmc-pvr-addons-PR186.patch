From 2493f0f5104a262362d0ab0d50c773d925fa3c2e Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Sun, 18 Nov 2012 14:43:42 +0100
Subject: [PATCH 01/63] vnsi: vdr osd

---
 addons/pvr.vdr.vnsi/Makefile.am                    |   1 +
 .../addon/resources/language/English/strings.po    |  16 +
 .../skins/Confluence/720p/ChannelScan.xml          | 733 -------------------
 .../resources/skins/skin.confluence/720p/Admin.xml | 158 +++++
 .../skins/skin.confluence/720p/ChannelScan.xml     | 733 +++++++++++++++++++
 addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp              | 787 +++++++++++++++++++++
 addons/pvr.vdr.vnsi/src/VNSIAdmin.h                |  74 ++
 addons/pvr.vdr.vnsi/src/VNSIData.h                 |   4 +-
 addons/pvr.vdr.vnsi/src/VNSISession.cpp            |  30 +-
 addons/pvr.vdr.vnsi/src/client.cpp                 |  22 +-
 addons/pvr.vdr.vnsi/src/responsepacket.cpp         |  39 +-
 addons/pvr.vdr.vnsi/src/responsepacket.h           |   8 +
 addons/pvr.vdr.vnsi/src/vnsicommand.h              |  19 +-
 13 files changed, 1882 insertions(+), 742 deletions(-)
 delete mode 100644 addons/pvr.vdr.vnsi/addon/resources/skins/Confluence/720p/ChannelScan.xml
 create mode 100644 addons/pvr.vdr.vnsi/addon/resources/skins/skin.confluence/720p/Admin.xml
 create mode 100644 addons/pvr.vdr.vnsi/addon/resources/skins/skin.confluence/720p/ChannelScan.xml
 create mode 100644 addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
 create mode 100644 addons/pvr.vdr.vnsi/src/VNSIAdmin.h

diff --git a/addons/pvr.vdr.vnsi/Makefile.am b/addons/pvr.vdr.vnsi/Makefile.am
index b0c8a62..5a426b5 100644
--- a/addons/pvr.vdr.vnsi/Makefile.am
+++ b/addons/pvr.vdr.vnsi/Makefile.am
@@ -18,6 +18,7 @@ libvdrvnsi_addon_la_SOURCES = src/client.cpp \
                               src/VNSIDemux.cpp \
                               src/VNSIRecording.cpp \
                               src/VNSISession.cpp \
+                              src/VNSIAdmin.cpp \
                               src/requestpacket.cpp \
                               src/responsepacket.cpp \
                               src/tools.cpp
diff --git a/addons/pvr.vdr.vnsi/addon/resources/language/English/strings.po b/addons/pvr.vdr.vnsi/addon/resources/language/English/strings.po
index 8309e6a..3ee034c 100644
--- a/addons/pvr.vdr.vnsi/addon/resources/language/English/strings.po
+++ b/addons/pvr.vdr.vnsi/addon/resources/language/English/strings.po
@@ -206,3 +206,19 @@ msgstr ""
 msgctxt "#30046"
 msgid "Create channel groups automatically on the server"
 msgstr ""
+
+msgctxt "#30100"
+msgid "VDR OSD"
+msgstr ""
+
+msgctxt "#30101"
+msgid "Timeshift"
+msgstr ""
+
+msgctxt "#30102"
+msgid "Controlling OSD - press info to exit"
+msgstr ""
+
+msgctxt "#30103"
+msgid "Select to control OSD"
+msgstr ""
diff --git a/addons/pvr.vdr.vnsi/addon/resources/skins/Confluence/720p/ChannelScan.xml b/addons/pvr.vdr.vnsi/addon/resources/skins/Confluence/720p/ChannelScan.xml
deleted file mode 100644
index e4f6338..0000000
--- a/addons/pvr.vdr.vnsi/addon/resources/skins/Confluence/720p/ChannelScan.xml
+++ /dev/null
@@ -1,733 +0,0 @@
-<window>
-  <defaultcontrol always="true">5</defaultcontrol>
-  <allowoverlay>no</allowoverlay>
-  <views>2</views>
-  <controls>
-    <include>CommonSettingsBackground</include>
-    <include>CommonMediaPlayingBackground</include>
-    <control type="group">
-      <posx>90</posx>
-      <posy>50</posy>
-      <animation type="WindowOpen" reversible="false">
-        <effect type="zoom" start="80" end="100" center="640,360" easing="out" tween="back" time="300" />
-        <effect type="fade" start="0" end="100" time="300" />
-      </animation>
-      <animation type="WindowClose" reversible="false">
-        <effect type="zoom" start="100" end="80" center="640,360" easing="in" tween="back" time="300" />
-        <effect type="fade" start="100" end="0" time="300" />
-      </animation>
-      <control type="image">
-        <posx>0</posx>
-        <posy>0</posy>
-        <width>1100</width>
-        <height>640</height>
-        <texture border="20">DialogBack.png</texture>
-      </control>
-      <control type="image">
-        <description>LOGO</description>
-        <posx>30</posx>
-        <posy>15</posy>
-        <width>220</width>
-        <height>80</height>
-        <aspectratio>keep</aspectratio>
-        <texture>Confluence_Logo.png</texture>
-      </control>
-      <control type="image">
-        <posx>268</posx>
-        <posy>10</posy>
-        <width>790</width>
-        <height>618</height>
-        <texture border="5">black-back2.png</texture>
-      </control>
-      <control type="image">
-        <posx>268</posx>
-        <posy>10</posy>
-        <width>804</width>
-        <height>70</height>
-        <aspectratio>stretch</aspectratio>
-        <texture>GlassTitleBar.png</texture>
-      </control>
-      <control type="label" id ="8">
-        <description>header label</description>
-        <posx>300</posx>
-        <posy>20</posy>
-        <width>740</width>
-        <height>30</height>
-        <font>font16caps</font>
-        <label>$ADDON[pvr.vdr.vnsi 30009]</label>
-        <align>left</align>
-        <aligny>center</aligny>
-        <textcolor>white</textcolor>
-        <shadowcolor>black</shadowcolor>
-      </control>
-      <control type="button" id ="5">
-        <description>Start/Stop Channel search</description>
-        <posx>10</posx>
-        <posy>90</posy>
-        <width>260</width>
-        <height>60</height>
-        <textoffsety>13</textoffsety>
-        <label>$ADDON[pvr.vdr.vnsi 30010]</label>
-        <font>font13_title</font>
-        <align>right</align>
-        <aligny>center</aligny>
-        <texturenofocus border="5">MenuItemNF.png</texturenofocus>
-        <texturefocus border="5">MenuItemFO.png</texturefocus>
-        <onleft>2</onleft>
-        <onright>10</onright>
-        <onup>6</onup>
-        <ondown>6</ondown>
-      </control>
-      <control type="button" id ="6">
-        <description>Cancel</description>
-        <posx>10</posx>
-        <posy>150</posy>
-        <width>260</width>
-        <height>60</height>
-        <textoffsety>13</textoffsety>
-        <label>$ADDON[pvr.vdr.vnsi 30024]</label>
-        <font>font13_title</font>
-        <align>right</align>
-        <aligny>center</aligny>
-        <texturenofocus border="5">MenuItemNF.png</texturenofocus>
-        <texturefocus border="5">MenuItemFO.png</texturefocus>
-        <onleft>10</onleft>
-        <onright>10</onright>
-        <onup>5</onup>
-        <ondown>5</ondown>
-        <visible>IsEmpty(Window.Property(Scanning))</visible>
-      </control>
-      <control type="group">
-        <visible>IsEmpty(Window.Property(Scanning))</visible>
-        <control type="spincontrolex" id="10">
-          <description>Source Type</description>
-          <posx>268</posx>
-          <posy>80</posy>
-          <width>790</width>
-          <height>40</height>
-          <font>font13</font>
-          <textcolor>grey2</textcolor>
-          <focusedcolor>white</focusedcolor>
-          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
-          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
-          <aligny>center</aligny>
-          <label>$ADDON[pvr.vdr.vnsi 30011]</label>
-          <onright>5</onright>
-          <onleft>5</onleft>
-          <onup>22</onup>
-          <ondown>11</ondown>
-        </control>
-        <control type="radiobutton" id="11">
-          <description>Default RadioButton</description>
-          <posx>268</posx>
-          <posy>120</posy>
-          <width>790</width>
-          <height>40</height>
-          <font>font13</font>
-          <textcolor>grey2</textcolor>
-          <focusedcolor>white</focusedcolor>
-          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
-          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
-          <label>$ADDON[pvr.vdr.vnsi 30012]</label>
-          <onright>5</onright>
-          <onleft>5</onleft>
-          <onup>10</onup>
-          <ondown>12</ondown>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
-        </control>
-        <control type="radiobutton" id="12">
-          <description>Default RadioButton</description>
-          <posx>268</posx>
-          <posy>160</posy>
-          <width>790</width>
-          <height>40</height>
-          <font>font13</font>
-          <textcolor>grey2</textcolor>
-          <focusedcolor>white</focusedcolor>
-          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
-          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
-          <label>$ADDON[pvr.vdr.vnsi 30013]</label>
-          <onright>5</onright>
-          <onleft>5</onleft>
-          <onup>11</onup>
-          <ondown>13</ondown>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
-        </control>
-        <control type="radiobutton" id="13">
-          <description>Default RadioButton</description>
-          <posx>268</posx>
-          <posy>200</posy>
-          <width>790</width>
-          <height>40</height>
-          <font>font13</font>
-          <textcolor>grey2</textcolor>
-          <focusedcolor>white</focusedcolor>
-          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
-          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
-          <label>$ADDON[pvr.vdr.vnsi 30014]</label>
-          <onright>5</onright>
-          <onleft>5</onleft>
-          <onup>12</onup>
-          <ondown>14</ondown>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(12)">Conditional</animation>
-        </control>
-        <control type="radiobutton" id="14">
-          <description>Default RadioButton</description>
-          <posx>268</posx>
-          <posy>240</posy>
-          <width>790</width>
-          <height>40</height>
-          <font>font13</font>
-          <textcolor>grey2</textcolor>
-          <focusedcolor>white</focusedcolor>
-          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
-          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
-          <label>$ADDON[pvr.vdr.vnsi 30015]</label>
-          <onright>5</onright>
-          <onleft>5</onleft>
-          <onup>13</onup>
-          <ondown>15</ondown>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(12)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(13)">Conditional</animation>
-        </control>
-        <control type="radiobutton" id="15">
-          <description>Default RadioButton</description>
-          <posx>268</posx>
-          <posy>280</posy>
-          <width>790</width>
-          <height>40</height>
-          <font>font13</font>
-          <textcolor>grey2</textcolor>
-          <focusedcolor>white</focusedcolor>
-          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
-          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
-          <label>$ADDON[pvr.vdr.vnsi 30016]</label>
-          <onright>5</onright>
-          <onleft>5</onleft>
-          <onup>14</onup>
-          <ondown>16</ondown>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(12)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(13)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(14)">Conditional</animation>
-        </control>
-        <control type="spincontrolex" id="16">
-          <description>Country selection</description>
-          <posx>268</posx>
-          <posy>320</posy>
-          <width>790</width>
-          <height>40</height>
-          <font>font13</font>
-          <textcolor>grey2</textcolor>
-          <focusedcolor>white</focusedcolor>
-          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
-          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
-          <aligny>center</aligny>
-          <label>$ADDON[pvr.vdr.vnsi 30017]</label>
-          <onright>5</onright>
-          <onleft>5</onleft>
-          <onup>15</onup>
-          <ondown>17</ondown>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(12)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(13)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(14)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(15)">Conditional</animation>
-        </control>
-        <control type="spincontrolex" id="17">
-          <description>Satellite selection</description>
-          <posx>268</posx>
-          <posy>360</posy>
-          <width>790</width>
-          <height>40</height>
-          <font>font13</font>
-          <textcolor>grey2</textcolor>
-          <focusedcolor>white</focusedcolor>
-          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
-          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
-          <aligny>center</aligny>
-          <label>$ADDON[pvr.vdr.vnsi 30022]</label>
-          <onright>5</onright>
-          <onleft>5</onleft>
-          <onup>16</onup>
-          <ondown>18</ondown>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(12)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(13)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(14)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(15)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(16)">Conditional</animation>
-        </control>
-        <control type="spincontrolex" id="18">
-          <description>DVB-C Inversion</description>
-          <posx>268</posx>
-          <posy>400</posy>
-          <width>790</width>
-          <height>40</height>
-          <font>font13</font>
-          <textcolor>grey2</textcolor>
-          <focusedcolor>white</focusedcolor>
-          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
-          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
-          <aligny>center</aligny>
-          <label>$ADDON[pvr.vdr.vnsi 30018]</label>
-          <onright>5</onright>
-          <onleft>5</onleft>
-          <onup>17</onup>
-          <ondown>29</ondown>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(12)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(13)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(14)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(15)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(16)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(17)">Conditional</animation>
-        </control>
-        <control type="spincontrolex" id="29">
-          <description>DVB-C Symbolrate</description>
-          <posx>268</posx>
-          <posy>440</posy>
-          <width>790</width>
-          <height>40</height>
-          <font>font13</font>
-          <textcolor>grey2</textcolor>
-          <focusedcolor>white</focusedcolor>
-          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
-          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
-          <aligny>center</aligny>
-          <label>$ADDON[pvr.vdr.vnsi 30019]</label>
-          <onright>5</onright>
-          <onleft>5</onleft>
-          <onup>18</onup>
-          <ondown>20</ondown>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(12)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(13)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(14)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(15)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(16)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(17)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(18)">Conditional</animation>
-        </control>
-        <control type="spincontrolex" id="20">
-          <description>DVB-C QAM</description>
-          <posx>268</posx>
-          <posy>480</posy>
-          <width>790</width>
-          <height>40</height>
-          <font>font13</font>
-          <textcolor>grey2</textcolor>
-          <focusedcolor>white</focusedcolor>
-          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
-          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
-          <aligny>center</aligny>
-          <label>$ADDON[pvr.vdr.vnsi 30020]</label>
-          <onright>5</onright>
-          <onleft>5</onleft>
-          <onup>29</onup>
-          <ondown>21</ondown>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(12)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(13)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(14)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(15)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(16)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(17)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(18)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(29)">Conditional</animation>
-        </control>
-        <control type="spincontrolex" id="21">
-          <description>DVB-T Inversion</description>
-          <posx>268</posx>
-          <posy>520</posy>
-          <width>790</width>
-          <height>40</height>
-          <font>font13</font>
-          <textcolor>grey2</textcolor>
-          <focusedcolor>white</focusedcolor>
-          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
-          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
-          <aligny>center</aligny>
-          <label>$ADDON[pvr.vdr.vnsi 30021]</label>
-          <onright>5</onright>
-          <onleft>5</onleft>
-          <onup>20</onup>
-          <ondown>22</ondown>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(12)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(13)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(14)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(15)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(16)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(17)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(18)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(29)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(20)">Conditional</animation>
-        </control>
-        <control type="spincontrolex" id="22">
-          <description>ATSC Type</description>
-          <posx>268</posx>
-          <posy>560</posy>
-          <width>790</width>
-          <height>40</height>
-          <font>font13</font>
-          <textcolor>grey2</textcolor>
-          <focusedcolor>white</focusedcolor>
-          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
-          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
-          <aligny>center</aligny>
-          <label>$ADDON[pvr.vdr.vnsi 30023]</label>
-          <onright>5</onright>
-          <onleft>5</onleft>
-          <onup>21</onup>
-          <ondown>10</ondown>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(12)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(13)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(14)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(15)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(16)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(17)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(18)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(29)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(20)">Conditional</animation>
-          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(21)">Conditional</animation>
-        </control>
-      </control>
-      <control type="group">
-        <visible>!IsEmpty(Window.Property(Scanning))</visible>
-        <control type="progress" id ="32">
-          <description>Progressbar</description>
-          <posx>275</posx>
-          <posy>60</posy>
-          <width>780</width>
-          <height>14</height>
-        </control>
-        <control type="label">
-          <description>type label</description>
-          <posx>275</posx>
-          <posy>85</posy>
-          <width>250</width>
-          <height>30</height>
-          <font>font13</font>
-          <label>$ADDON[pvr.vdr.vnsi 30026]</label>
-          <align>left</align>
-          <aligny>center</aligny>
-          <textcolor>grey</textcolor>
-          <shadowcolor>black</shadowcolor>
-        </control>
-        <control type="label" id ="30">
-          <description>type value</description>
-          <posx>1040</posx>
-          <posy>85</posy>
-          <width>500</width>
-          <height>30</height>
-          <font>font13</font>
-          <label>-</label>
-          <align>right</align>
-          <aligny>center</aligny>
-          <textcolor>white</textcolor>
-          <shadowcolor>black</shadowcolor>
-        </control>
-        <control type="label">
-          <description>device label</description>
-          <posx>275</posx>
-          <posy>115</posy>
-          <width>250</width>
-          <height>30</height>
-          <font>font13</font>
-          <label>$ADDON[pvr.vdr.vnsi 30027]</label>
-          <align>left</align>
-          <aligny>center</aligny>
-          <textcolor>white</textcolor>
-          <shadowcolor>black</shadowcolor>
-        </control>
-        <control type="label" id ="31">
-          <description>device value</description>
-          <posx>1040</posx>
-          <posy>115</posy>
-          <width>500</width>
-          <height>30</height>
-          <font>font13</font>
-          <label>-</label>
-          <align>right</align>
-          <aligny>center</aligny>
-          <textcolor>white</textcolor>
-          <shadowcolor>black</shadowcolor>
-        </control>
-        <control type="label">
-          <description>transponder label</description>
-          <posx>275</posx>
-          <posy>145</posy>
-          <width>250</width>
-          <height>30</height>
-          <font>font13</font>
-          <label>$ADDON[pvr.vdr.vnsi 30034]</label>
-          <align>left</align>
-          <aligny>center</aligny>
-          <textcolor>white</textcolor>
-          <shadowcolor>black</shadowcolor>
-        </control>
-        <control type="label" id ="33">
-          <description>transponder value</description>
-          <posx>1040</posx>
-          <posy>145</posy>
-          <width>500</width>
-          <height>30</height>
-          <font>font13</font>
-          <label>-</label>
-          <align>right</align>
-          <aligny>center</aligny>
-          <textcolor>white</textcolor>
-          <shadowcolor>black</shadowcolor>
-        </control>
-        <control type="progress" id ="35">
-          <description>Progressbar</description>
-          <posx>30</posx>
-          <posy>160</posy>
-          <width>220</width>
-          <height>50</height>
-        </control>
-        <control type="label" id ="34">
-          <description>Signal label</description>
-          <posx>40</posx>
-          <posy>168</posy>
-          <width>250</width>
-          <height>30</height>
-          <font>font13</font>
-          <label>-</label>
-          <align>left</align>
-          <aligny>center</aligny>
-          <textcolor>white</textcolor>
-          <shadowcolor>black</shadowcolor>
-        </control>
-        <control type="image">
-          <posx>215</posx>
-          <posy>170</posy>
-          <width>30</width>
-          <height>30</height>
-          <aspectratio>stretch</aspectratio>
-          <texture>amt-overlay-watched.png</texture>
-          <visible>!IsEmpty(Window.Property(Locked))</visible>
-        </control>
-        <control type="list" id="2">
-          <posx>290</posx>
-          <posy>180</posy>
-          <width>750</width>
-          <height>400</height>
-          <onup>2</onup>
-          <ondown>2</ondown>
-          <onleft>10</onleft>
-          <onright>60</onright>
-          <pagecontrol>60</pagecontrol>
-          <scrolltime>200</scrolltime>
-          <itemlayout height="40" width="750">
-            <control type="image">
-              <posx>0</posx>
-              <posy>0</posy>
-              <width>750</width>
-              <height>40</height>
-              <aspectratio>stretch</aspectratio>
-              <texture border="5">MenuItemNF.png</texture>
-            </control>
-            <control type="image">
-              <posx>710</posx>
-              <posy>5</posy>
-              <width>40</width>
-              <height>30</height>
-              <aspectratio>stretch</aspectratio>
-              <texture>OverlayLocked.png</texture>
-              <visible>!IsEmpty(ListItem.Property(IsEncrypted))</visible>
-            </control>
-            <control type="image">
-              <posx>690</posx>
-              <posy>7</posy>
-              <width>60</width>
-              <height>25</height>
-              <aspectratio>stretch</aspectratio>
-              <texture>OverlayHD.png</texture>
-              <animation effect="slide" start="0,0" end="-45,0" time="100" condition="!IsEmpty(ListItem.Property(IsEncrypted))">Conditional</animation>
-              <visible>!IsEmpty(ListItem.Property(IsHD))</visible>
-            </control>
-            <control type="image">
-              <posx>0</posx>
-              <posy>2</posy>
-              <width>36</width>
-              <height>36</height>
-              <aspectratio>stretch</aspectratio>
-              <texture>DefaultVideoCover.png</texture>
-              <visible>IsEmpty(ListItem.Property(IsRadio))</visible>
-            </control>
-            <control type="image">
-              <posx>0</posx>
-              <posy>2</posy>
-              <width>36</width>
-              <height>36</height>
-              <aspectratio>stretch</aspectratio>
-              <texture>DefaultAlbumCover.png</texture>
-              <visible>!IsEmpty(ListItem.Property(IsRadio))</visible>
-            </control>
-            <control type="label">
-              <posx>45</posx>
-              <posy>0</posy>
-              <width>500</width>
-              <height>40</height>
-              <font>font14</font>
-              <align>left</align>
-              <aligny>center</aligny>
-              <textcolor>grey2</textcolor>
-              <selectedcolor>selected</selectedcolor>
-              <info>ListItem.Label</info>
-            </control>
-          </itemlayout>
-          <focusedlayout height="40" width="750">
-            <control type="image">
-              <posx>0</posx>
-              <posy>0</posy>
-              <width>750</width>
-              <height>40</height>
-              <aspectratio>stretch</aspectratio>
-              <texture border="5">MenuItemNF.png</texture>
-              <visible>!Control.HasFocus(2)</visible>
-              <include>VisibleFadeEffect</include>
-            </control>
-            <control type="image">
-              <posx>0</posx>
-              <posy>0</posy>
-              <width>750</width>
-              <height>40</height>
-              <aspectratio>stretch</aspectratio>
-              <texture border="5">MenuItemFO.png</texture>
-              <visible>Control.HasFocus(2)</visible>
-              <include>VisibleFadeEffect</include>
-            </control>
-            <control type="image">
-              <posx>710</posx>
-              <posy>5</posy>
-              <width>40</width>
-              <height>30</height>
-              <aspectratio>stretch</aspectratio>
-              <texture>OverlayLocked.png</texture>
-              <visible>!IsEmpty(ListItem.Property(IsEncrypted))</visible>
-            </control>
-            <control type="image">
-              <posx>690</posx>
-              <posy>7</posy>
-              <width>60</width>
-              <height>25</height>
-              <aspectratio>stretch</aspectratio>
-              <texture>OverlayHD.png</texture>
-              <animation effect="slide" start="0,0" end="-45,0" time="100" condition="!IsEmpty(ListItem.Property(IsEncrypted))">Conditional</animation>
-              <visible>!IsEmpty(ListItem.Property(IsHD))</visible>
-            </control>
-            <control type="image">
-              <posx>0</posx>
-              <posy>2</posy>
-              <width>36</width>
-              <height>36</height>
-              <aspectratio>stretch</aspectratio>
-              <texture>DefaultVideoCover.png</texture>
-              <visible>IsEmpty(ListItem.Property(IsRadio))</visible>
-            </control>
-            <control type="image">
-              <posx>0</posx>
-              <posy>2</posy>
-              <width>36</width>
-              <height>36</height>
-              <aspectratio>stretch</aspectratio>
-              <texture>DefaultAlbumCover.png</texture>
-              <visible>!IsEmpty(ListItem.Property(IsRadio))</visible>
-            </control>
-            <control type="label">
-              <posx>45</posx>
-              <posy>0</posy>
-              <width>500</width>
-              <height>40</height>
-              <font>font14</font>
-              <align>left</align>
-              <aligny>center</aligny>
-              <textcolor>grey2</textcolor>
-              <selectedcolor>selected</selectedcolor>
-              <info>ListItem.Label</info>
-            </control>
-          </focusedlayout>
-        </control>
-        <control type="scrollbar" id="60">
-          <posx>1060</posx>
-          <posy>180</posy>
-          <width>25</width>
-          <height>410</height>
-          <texturesliderbackground border="0,14,0,14">ScrollBarV.png</texturesliderbackground>
-          <texturesliderbar border="0,14,0,14">ScrollBarV_bar.png</texturesliderbar>
-          <texturesliderbarfocus border="0,14,0,14">ScrollBarV_bar_focus.png</texturesliderbarfocus>
-          <textureslidernib>ScrollBarNib.png</textureslidernib>
-          <textureslidernibfocus>ScrollBarNib.png</textureslidernibfocus>
-          <onleft>2</onleft>
-          <onright>10</onright>
-          <showonepage>true</showonepage>
-          <orientation>vertical</orientation>
-        </control>
-        <control type="label">
-          <description>Page Count Label</description>
-          <posx>1040</posx>
-          <posy>600</posy>
-          <width>500</width>
-          <height>20</height>
-          <font>font12</font>
-          <textcolor>grey</textcolor>
-          <scroll>false</scroll>
-          <align>right</align>
-          <aligny>center</aligny>
-          <label>([COLOR=blue]$INFO[Container(2).NumItems][/COLOR]) $LOCALIZE[19019] - $LOCALIZE[31024] ([COLOR=blue]$INFO[Container(2).CurrentPage]/$INFO[Container(2).NumPages][/COLOR])</label>
-        </control>
-        <control type="label" id="36">
-          <description>Status Label</description>
-          <posx>275</posx>
-          <posy>590</posy>
-          <width>500</width>
-          <height>20</height>
-          <font>font14</font>
-          <textcolor>yellow</textcolor>
-          <scroll>false</scroll>
-          <align>left</align>
-          <aligny>center</aligny>
-          <label>-</label>
-        </control>
-      </control>
-    </control>
-    <include>BehindDialogFadeOut</include>
-    <control type="group">
-      <posx>60</posx>
-      <posy>0</posy>
-      <animation effect="slide" end="-310,0" time="400" tween="quadratic" easing="out">WindowClose</animation>
-      <animation effect="slide" start="-310,0" time="400" tween="quadratic" easing="out">WindowOpen</animation>
-      <control type="image">
-        <posx>0</posx>
-        <posy>0</posy>
-        <width>250</width>
-        <height>35</height>
-        <texture border="0,0,32,0">header.png</texture>
-      </control>
-      <control type="label">
-        <include>WindowTitleCommons</include>
-        <posx>220</posx>
-        <label>$ADDON[pvr.vdr.vnsi 30008]</label>
-      </control>
-    </control>
-    <include>WindowTitleHomeButton</include>
-    <include>Clock</include>
-  </controls>
-</window>
diff --git a/addons/pvr.vdr.vnsi/addon/resources/skins/skin.confluence/720p/Admin.xml b/addons/pvr.vdr.vnsi/addon/resources/skins/skin.confluence/720p/Admin.xml
new file mode 100644
index 0000000..3e76deb
--- /dev/null
+++ b/addons/pvr.vdr.vnsi/addon/resources/skins/skin.confluence/720p/Admin.xml
@@ -0,0 +1,158 @@
+<window>
+  <defaultcontrol always="true">10</defaultcontrol>
+  <onload>SetProperty(menu,osd)</onload>
+  <allowoverlay>no</allowoverlay>
+  <controls>
+    <control type="group">
+      <defaultcontrol always="true">10</defaultcontrol>
+      <posx>90</posx>
+      <posy>30</posy>
+      <animation type="WindowOpen" reversible="false">
+        <effect type="zoom" start="80" end="100" center="640,360" easing="out" tween="back" time="300" />
+        <effect type="fade" start="0" end="100" time="300" />
+      </animation>
+      <animation type="WindowClose" reversible="false">
+        <effect type="zoom" start="100" end="80" center="640,360" easing="in" tween="back" time="300" />
+        <effect type="fade" start="100" end="0" time="300" />
+      </animation>
+      <control type="image">
+        <description>Background</description>
+        <posx>0</posx>
+        <posy>0</posy>
+        <width>1100</width>
+        <height>640</height>
+        <texture border="20">DialogBack.png</texture>
+      </control>
+      <control type="image">
+        <description>LOGO</description>
+        <posx>30</posx>
+        <posy>15</posy>
+        <width>220</width>
+        <height>80</height>
+        <aspectratio>keep</aspectratio>
+        <texture>Confluence_Logo.png</texture>
+      </control>
+      <control type="list" id="10">
+        <defaultcontrol always="true">1</defaultcontrol>
+		<posx>10</posx>
+		<posy>82</posy>
+		<width>260</width>
+		<height>541</height>
+		<onleft>10</onleft>
+		<onright>11</onright>
+		<onup>10</onup>
+		<ondown>9000</ondown>
+		<pagecontrol>-</pagecontrol>
+		<scrolltime>300</scrolltime>
+		<itemlayout height="54" width="260">
+		  <control type="image">
+		    <posx>0</posx>
+		    <posy>0</posy>
+		    <width>260</width>
+		    <height>55</height>
+		    <texture border="5">MenuItemNF.png</texture>
+		  </control>
+		  <control type="label">
+		    <posx>250</posx>
+		    <posy>0</posy>
+		    <width>380</width>
+		    <height>55</height>
+		    <font>font24_title</font>
+		    <textcolor>grey3</textcolor>
+		    <align>right</align>
+		    <aligny>center</aligny>
+		    <label>$INFO[ListItem.Label]</label>
+		  </control>
+		</itemlayout>
+		<focusedlayout height="54" width="260">
+		  <control type="image">
+			<posx>0</posx>
+			<posy>0</posy>
+			<width>260</width>
+			<height>55</height>
+			<texture border="5">MenuItemFO.png</texture>
+		  </control>
+		  <control type="label">
+			<posx>250</posx>
+			<posy>0</posy>
+			<width>380</width>
+			<height>55</height>
+			<font>font24_title</font>
+			<textcolor>white</textcolor>
+			<align>right</align>
+			<aligny>center</aligny>
+			<label>$INFO[ListItem.Label]</label>
+		  </control>
+		</focusedlayout>
+		<content>
+         <item id="1">
+		   <label>$ADDON[pvr.vdr.vnsi 30100]</label>
+		   <onclick>SetProperty(menu,osd)</onclick>
+		 </item>
+		 <item id="2">
+		   <label>$ADDON[pvr.vdr.vnsi 30101]</label>
+		   <onclick>SetProperty(menu,timeshift)</onclick>
+		 </item>
+        </content>
+      </control>
+      <control type="group" id="11">
+        <posx>290</posx>
+        <posy>30</posy>
+        <control type="image">
+          <description>Background</description>
+          <posx>0</posx>
+          <posy>0</posy>
+          <width>790</width>
+          <height>570</height>
+          <texture border="5">black-back2.png</texture>
+        </control>
+        <control type="image">
+          <description>Background Title</description>
+          <posx>0</posx>
+          <posy>0</posy>
+          <width>790</width>
+          <height>50</height>
+          <aspectratio>stretch</aspectratio>
+          <texture>GlassTitleBar.png</texture>
+        </control>
+	    <control type="group" id="12">
+	      <visible>StringCompare(Window.Property(menu),osd)</visible>
+		  <control type="button" id="13">
+            <description>osd control label</description>
+            <posx>25</posx>
+            <posy>10</posy>
+            <width>765</width>
+            <height>30</height>
+            <texturefocus border="5">MenuItemFO.png</texturefocus>
+            <texturenofocus border="5">MenuItemNF.png</texturenofocus>
+            <label>$ADDON[pvr.vdr.vnsi 30103]</label>
+            <font>font16caps</font>
+            <textcolor>white</textcolor>
+		    <onleft>10</onleft>
+          </control>
+		  <control type="label">
+            <description>not focused label</description>
+            <visible>Control.HasFocus(11)</visible>
+            <posx>300</posx>
+            <posy>20</posy>
+            <width>740</width>
+            <height>30</height>
+            <font>font16caps</font>
+            <label>$ADDON[pvr.vdr.vnsi 30103]</label>
+            <align>left</align>
+            <aligny>center</aligny>
+            <textcolor>white</textcolor>
+            <shadowcolor>black</shadowcolor>
+          </control>
+          <control type="renderaddon" id ="9">
+            <posx>5</posx>
+            <posy>50</posy>
+            <width>780</width>
+            <height>515</height>
+          </control>
+	    </control>
+      </control>
+	</control>
+    <include>Clock</include>
+  </controls>
+</window>
diff --git a/addons/pvr.vdr.vnsi/addon/resources/skins/skin.confluence/720p/ChannelScan.xml b/addons/pvr.vdr.vnsi/addon/resources/skins/skin.confluence/720p/ChannelScan.xml
new file mode 100644
index 0000000..e4f6338
--- /dev/null
+++ b/addons/pvr.vdr.vnsi/addon/resources/skins/skin.confluence/720p/ChannelScan.xml
@@ -0,0 +1,733 @@
+<window>
+  <defaultcontrol always="true">5</defaultcontrol>
+  <allowoverlay>no</allowoverlay>
+  <views>2</views>
+  <controls>
+    <include>CommonSettingsBackground</include>
+    <include>CommonMediaPlayingBackground</include>
+    <control type="group">
+      <posx>90</posx>
+      <posy>50</posy>
+      <animation type="WindowOpen" reversible="false">
+        <effect type="zoom" start="80" end="100" center="640,360" easing="out" tween="back" time="300" />
+        <effect type="fade" start="0" end="100" time="300" />
+      </animation>
+      <animation type="WindowClose" reversible="false">
+        <effect type="zoom" start="100" end="80" center="640,360" easing="in" tween="back" time="300" />
+        <effect type="fade" start="100" end="0" time="300" />
+      </animation>
+      <control type="image">
+        <posx>0</posx>
+        <posy>0</posy>
+        <width>1100</width>
+        <height>640</height>
+        <texture border="20">DialogBack.png</texture>
+      </control>
+      <control type="image">
+        <description>LOGO</description>
+        <posx>30</posx>
+        <posy>15</posy>
+        <width>220</width>
+        <height>80</height>
+        <aspectratio>keep</aspectratio>
+        <texture>Confluence_Logo.png</texture>
+      </control>
+      <control type="image">
+        <posx>268</posx>
+        <posy>10</posy>
+        <width>790</width>
+        <height>618</height>
+        <texture border="5">black-back2.png</texture>
+      </control>
+      <control type="image">
+        <posx>268</posx>
+        <posy>10</posy>
+        <width>804</width>
+        <height>70</height>
+        <aspectratio>stretch</aspectratio>
+        <texture>GlassTitleBar.png</texture>
+      </control>
+      <control type="label" id ="8">
+        <description>header label</description>
+        <posx>300</posx>
+        <posy>20</posy>
+        <width>740</width>
+        <height>30</height>
+        <font>font16caps</font>
+        <label>$ADDON[pvr.vdr.vnsi 30009]</label>
+        <align>left</align>
+        <aligny>center</aligny>
+        <textcolor>white</textcolor>
+        <shadowcolor>black</shadowcolor>
+      </control>
+      <control type="button" id ="5">
+        <description>Start/Stop Channel search</description>
+        <posx>10</posx>
+        <posy>90</posy>
+        <width>260</width>
+        <height>60</height>
+        <textoffsety>13</textoffsety>
+        <label>$ADDON[pvr.vdr.vnsi 30010]</label>
+        <font>font13_title</font>
+        <align>right</align>
+        <aligny>center</aligny>
+        <texturenofocus border="5">MenuItemNF.png</texturenofocus>
+        <texturefocus border="5">MenuItemFO.png</texturefocus>
+        <onleft>2</onleft>
+        <onright>10</onright>
+        <onup>6</onup>
+        <ondown>6</ondown>
+      </control>
+      <control type="button" id ="6">
+        <description>Cancel</description>
+        <posx>10</posx>
+        <posy>150</posy>
+        <width>260</width>
+        <height>60</height>
+        <textoffsety>13</textoffsety>
+        <label>$ADDON[pvr.vdr.vnsi 30024]</label>
+        <font>font13_title</font>
+        <align>right</align>
+        <aligny>center</aligny>
+        <texturenofocus border="5">MenuItemNF.png</texturenofocus>
+        <texturefocus border="5">MenuItemFO.png</texturefocus>
+        <onleft>10</onleft>
+        <onright>10</onright>
+        <onup>5</onup>
+        <ondown>5</ondown>
+        <visible>IsEmpty(Window.Property(Scanning))</visible>
+      </control>
+      <control type="group">
+        <visible>IsEmpty(Window.Property(Scanning))</visible>
+        <control type="spincontrolex" id="10">
+          <description>Source Type</description>
+          <posx>268</posx>
+          <posy>80</posy>
+          <width>790</width>
+          <height>40</height>
+          <font>font13</font>
+          <textcolor>grey2</textcolor>
+          <focusedcolor>white</focusedcolor>
+          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
+          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
+          <aligny>center</aligny>
+          <label>$ADDON[pvr.vdr.vnsi 30011]</label>
+          <onright>5</onright>
+          <onleft>5</onleft>
+          <onup>22</onup>
+          <ondown>11</ondown>
+        </control>
+        <control type="radiobutton" id="11">
+          <description>Default RadioButton</description>
+          <posx>268</posx>
+          <posy>120</posy>
+          <width>790</width>
+          <height>40</height>
+          <font>font13</font>
+          <textcolor>grey2</textcolor>
+          <focusedcolor>white</focusedcolor>
+          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
+          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
+          <label>$ADDON[pvr.vdr.vnsi 30012]</label>
+          <onright>5</onright>
+          <onleft>5</onleft>
+          <onup>10</onup>
+          <ondown>12</ondown>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
+        </control>
+        <control type="radiobutton" id="12">
+          <description>Default RadioButton</description>
+          <posx>268</posx>
+          <posy>160</posy>
+          <width>790</width>
+          <height>40</height>
+          <font>font13</font>
+          <textcolor>grey2</textcolor>
+          <focusedcolor>white</focusedcolor>
+          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
+          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
+          <label>$ADDON[pvr.vdr.vnsi 30013]</label>
+          <onright>5</onright>
+          <onleft>5</onleft>
+          <onup>11</onup>
+          <ondown>13</ondown>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
+        </control>
+        <control type="radiobutton" id="13">
+          <description>Default RadioButton</description>
+          <posx>268</posx>
+          <posy>200</posy>
+          <width>790</width>
+          <height>40</height>
+          <font>font13</font>
+          <textcolor>grey2</textcolor>
+          <focusedcolor>white</focusedcolor>
+          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
+          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
+          <label>$ADDON[pvr.vdr.vnsi 30014]</label>
+          <onright>5</onright>
+          <onleft>5</onleft>
+          <onup>12</onup>
+          <ondown>14</ondown>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(12)">Conditional</animation>
+        </control>
+        <control type="radiobutton" id="14">
+          <description>Default RadioButton</description>
+          <posx>268</posx>
+          <posy>240</posy>
+          <width>790</width>
+          <height>40</height>
+          <font>font13</font>
+          <textcolor>grey2</textcolor>
+          <focusedcolor>white</focusedcolor>
+          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
+          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
+          <label>$ADDON[pvr.vdr.vnsi 30015]</label>
+          <onright>5</onright>
+          <onleft>5</onleft>
+          <onup>13</onup>
+          <ondown>15</ondown>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(12)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(13)">Conditional</animation>
+        </control>
+        <control type="radiobutton" id="15">
+          <description>Default RadioButton</description>
+          <posx>268</posx>
+          <posy>280</posy>
+          <width>790</width>
+          <height>40</height>
+          <font>font13</font>
+          <textcolor>grey2</textcolor>
+          <focusedcolor>white</focusedcolor>
+          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
+          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
+          <label>$ADDON[pvr.vdr.vnsi 30016]</label>
+          <onright>5</onright>
+          <onleft>5</onleft>
+          <onup>14</onup>
+          <ondown>16</ondown>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(12)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(13)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(14)">Conditional</animation>
+        </control>
+        <control type="spincontrolex" id="16">
+          <description>Country selection</description>
+          <posx>268</posx>
+          <posy>320</posy>
+          <width>790</width>
+          <height>40</height>
+          <font>font13</font>
+          <textcolor>grey2</textcolor>
+          <focusedcolor>white</focusedcolor>
+          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
+          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
+          <aligny>center</aligny>
+          <label>$ADDON[pvr.vdr.vnsi 30017]</label>
+          <onright>5</onright>
+          <onleft>5</onleft>
+          <onup>15</onup>
+          <ondown>17</ondown>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(12)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(13)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(14)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(15)">Conditional</animation>
+        </control>
+        <control type="spincontrolex" id="17">
+          <description>Satellite selection</description>
+          <posx>268</posx>
+          <posy>360</posy>
+          <width>790</width>
+          <height>40</height>
+          <font>font13</font>
+          <textcolor>grey2</textcolor>
+          <focusedcolor>white</focusedcolor>
+          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
+          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
+          <aligny>center</aligny>
+          <label>$ADDON[pvr.vdr.vnsi 30022]</label>
+          <onright>5</onright>
+          <onleft>5</onleft>
+          <onup>16</onup>
+          <ondown>18</ondown>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(12)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(13)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(14)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(15)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(16)">Conditional</animation>
+        </control>
+        <control type="spincontrolex" id="18">
+          <description>DVB-C Inversion</description>
+          <posx>268</posx>
+          <posy>400</posy>
+          <width>790</width>
+          <height>40</height>
+          <font>font13</font>
+          <textcolor>grey2</textcolor>
+          <focusedcolor>white</focusedcolor>
+          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
+          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
+          <aligny>center</aligny>
+          <label>$ADDON[pvr.vdr.vnsi 30018]</label>
+          <onright>5</onright>
+          <onleft>5</onleft>
+          <onup>17</onup>
+          <ondown>29</ondown>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(12)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(13)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(14)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(15)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(16)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(17)">Conditional</animation>
+        </control>
+        <control type="spincontrolex" id="29">
+          <description>DVB-C Symbolrate</description>
+          <posx>268</posx>
+          <posy>440</posy>
+          <width>790</width>
+          <height>40</height>
+          <font>font13</font>
+          <textcolor>grey2</textcolor>
+          <focusedcolor>white</focusedcolor>
+          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
+          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
+          <aligny>center</aligny>
+          <label>$ADDON[pvr.vdr.vnsi 30019]</label>
+          <onright>5</onright>
+          <onleft>5</onleft>
+          <onup>18</onup>
+          <ondown>20</ondown>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(12)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(13)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(14)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(15)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(16)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(17)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(18)">Conditional</animation>
+        </control>
+        <control type="spincontrolex" id="20">
+          <description>DVB-C QAM</description>
+          <posx>268</posx>
+          <posy>480</posy>
+          <width>790</width>
+          <height>40</height>
+          <font>font13</font>
+          <textcolor>grey2</textcolor>
+          <focusedcolor>white</focusedcolor>
+          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
+          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
+          <aligny>center</aligny>
+          <label>$ADDON[pvr.vdr.vnsi 30020]</label>
+          <onright>5</onright>
+          <onleft>5</onleft>
+          <onup>29</onup>
+          <ondown>21</ondown>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(12)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(13)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(14)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(15)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(16)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(17)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(18)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(29)">Conditional</animation>
+        </control>
+        <control type="spincontrolex" id="21">
+          <description>DVB-T Inversion</description>
+          <posx>268</posx>
+          <posy>520</posy>
+          <width>790</width>
+          <height>40</height>
+          <font>font13</font>
+          <textcolor>grey2</textcolor>
+          <focusedcolor>white</focusedcolor>
+          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
+          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
+          <aligny>center</aligny>
+          <label>$ADDON[pvr.vdr.vnsi 30021]</label>
+          <onright>5</onright>
+          <onleft>5</onleft>
+          <onup>20</onup>
+          <ondown>22</ondown>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(12)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(13)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(14)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(15)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(16)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(17)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(18)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(29)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(20)">Conditional</animation>
+        </control>
+        <control type="spincontrolex" id="22">
+          <description>ATSC Type</description>
+          <posx>268</posx>
+          <posy>560</posy>
+          <width>790</width>
+          <height>40</height>
+          <font>font13</font>
+          <textcolor>grey2</textcolor>
+          <focusedcolor>white</focusedcolor>
+          <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
+          <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
+          <aligny>center</aligny>
+          <label>$ADDON[pvr.vdr.vnsi 30023]</label>
+          <onright>5</onright>
+          <onleft>5</onleft>
+          <onup>21</onup>
+          <ondown>10</ondown>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(10)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(11)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(12)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(13)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(14)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(15)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(16)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(17)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(18)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(29)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(20)">Conditional</animation>
+          <animation effect="slide" start="0,0" end="0,-40" time="100" condition="!Control.IsVisible(21)">Conditional</animation>
+        </control>
+      </control>
+      <control type="group">
+        <visible>!IsEmpty(Window.Property(Scanning))</visible>
+        <control type="progress" id ="32">
+          <description>Progressbar</description>
+          <posx>275</posx>
+          <posy>60</posy>
+          <width>780</width>
+          <height>14</height>
+        </control>
+        <control type="label">
+          <description>type label</description>
+          <posx>275</posx>
+          <posy>85</posy>
+          <width>250</width>
+          <height>30</height>
+          <font>font13</font>
+          <label>$ADDON[pvr.vdr.vnsi 30026]</label>
+          <align>left</align>
+          <aligny>center</aligny>
+          <textcolor>grey</textcolor>
+          <shadowcolor>black</shadowcolor>
+        </control>
+        <control type="label" id ="30">
+          <description>type value</description>
+          <posx>1040</posx>
+          <posy>85</posy>
+          <width>500</width>
+          <height>30</height>
+          <font>font13</font>
+          <label>-</label>
+          <align>right</align>
+          <aligny>center</aligny>
+          <textcolor>white</textcolor>
+          <shadowcolor>black</shadowcolor>
+        </control>
+        <control type="label">
+          <description>device label</description>
+          <posx>275</posx>
+          <posy>115</posy>
+          <width>250</width>
+          <height>30</height>
+          <font>font13</font>
+          <label>$ADDON[pvr.vdr.vnsi 30027]</label>
+          <align>left</align>
+          <aligny>center</aligny>
+          <textcolor>white</textcolor>
+          <shadowcolor>black</shadowcolor>
+        </control>
+        <control type="label" id ="31">
+          <description>device value</description>
+          <posx>1040</posx>
+          <posy>115</posy>
+          <width>500</width>
+          <height>30</height>
+          <font>font13</font>
+          <label>-</label>
+          <align>right</align>
+          <aligny>center</aligny>
+          <textcolor>white</textcolor>
+          <shadowcolor>black</shadowcolor>
+        </control>
+        <control type="label">
+          <description>transponder label</description>
+          <posx>275</posx>
+          <posy>145</posy>
+          <width>250</width>
+          <height>30</height>
+          <font>font13</font>
+          <label>$ADDON[pvr.vdr.vnsi 30034]</label>
+          <align>left</align>
+          <aligny>center</aligny>
+          <textcolor>white</textcolor>
+          <shadowcolor>black</shadowcolor>
+        </control>
+        <control type="label" id ="33">
+          <description>transponder value</description>
+          <posx>1040</posx>
+          <posy>145</posy>
+          <width>500</width>
+          <height>30</height>
+          <font>font13</font>
+          <label>-</label>
+          <align>right</align>
+          <aligny>center</aligny>
+          <textcolor>white</textcolor>
+          <shadowcolor>black</shadowcolor>
+        </control>
+        <control type="progress" id ="35">
+          <description>Progressbar</description>
+          <posx>30</posx>
+          <posy>160</posy>
+          <width>220</width>
+          <height>50</height>
+        </control>
+        <control type="label" id ="34">
+          <description>Signal label</description>
+          <posx>40</posx>
+          <posy>168</posy>
+          <width>250</width>
+          <height>30</height>
+          <font>font13</font>
+          <label>-</label>
+          <align>left</align>
+          <aligny>center</aligny>
+          <textcolor>white</textcolor>
+          <shadowcolor>black</shadowcolor>
+        </control>
+        <control type="image">
+          <posx>215</posx>
+          <posy>170</posy>
+          <width>30</width>
+          <height>30</height>
+          <aspectratio>stretch</aspectratio>
+          <texture>amt-overlay-watched.png</texture>
+          <visible>!IsEmpty(Window.Property(Locked))</visible>
+        </control>
+        <control type="list" id="2">
+          <posx>290</posx>
+          <posy>180</posy>
+          <width>750</width>
+          <height>400</height>
+          <onup>2</onup>
+          <ondown>2</ondown>
+          <onleft>10</onleft>
+          <onright>60</onright>
+          <pagecontrol>60</pagecontrol>
+          <scrolltime>200</scrolltime>
+          <itemlayout height="40" width="750">
+            <control type="image">
+              <posx>0</posx>
+              <posy>0</posy>
+              <width>750</width>
+              <height>40</height>
+              <aspectratio>stretch</aspectratio>
+              <texture border="5">MenuItemNF.png</texture>
+            </control>
+            <control type="image">
+              <posx>710</posx>
+              <posy>5</posy>
+              <width>40</width>
+              <height>30</height>
+              <aspectratio>stretch</aspectratio>
+              <texture>OverlayLocked.png</texture>
+              <visible>!IsEmpty(ListItem.Property(IsEncrypted))</visible>
+            </control>
+            <control type="image">
+              <posx>690</posx>
+              <posy>7</posy>
+              <width>60</width>
+              <height>25</height>
+              <aspectratio>stretch</aspectratio>
+              <texture>OverlayHD.png</texture>
+              <animation effect="slide" start="0,0" end="-45,0" time="100" condition="!IsEmpty(ListItem.Property(IsEncrypted))">Conditional</animation>
+              <visible>!IsEmpty(ListItem.Property(IsHD))</visible>
+            </control>
+            <control type="image">
+              <posx>0</posx>
+              <posy>2</posy>
+              <width>36</width>
+              <height>36</height>
+              <aspectratio>stretch</aspectratio>
+              <texture>DefaultVideoCover.png</texture>
+              <visible>IsEmpty(ListItem.Property(IsRadio))</visible>
+            </control>
+            <control type="image">
+              <posx>0</posx>
+              <posy>2</posy>
+              <width>36</width>
+              <height>36</height>
+              <aspectratio>stretch</aspectratio>
+              <texture>DefaultAlbumCover.png</texture>
+              <visible>!IsEmpty(ListItem.Property(IsRadio))</visible>
+            </control>
+            <control type="label">
+              <posx>45</posx>
+              <posy>0</posy>
+              <width>500</width>
+              <height>40</height>
+              <font>font14</font>
+              <align>left</align>
+              <aligny>center</aligny>
+              <textcolor>grey2</textcolor>
+              <selectedcolor>selected</selectedcolor>
+              <info>ListItem.Label</info>
+            </control>
+          </itemlayout>
+          <focusedlayout height="40" width="750">
+            <control type="image">
+              <posx>0</posx>
+              <posy>0</posy>
+              <width>750</width>
+              <height>40</height>
+              <aspectratio>stretch</aspectratio>
+              <texture border="5">MenuItemNF.png</texture>
+              <visible>!Control.HasFocus(2)</visible>
+              <include>VisibleFadeEffect</include>
+            </control>
+            <control type="image">
+              <posx>0</posx>
+              <posy>0</posy>
+              <width>750</width>
+              <height>40</height>
+              <aspectratio>stretch</aspectratio>
+              <texture border="5">MenuItemFO.png</texture>
+              <visible>Control.HasFocus(2)</visible>
+              <include>VisibleFadeEffect</include>
+            </control>
+            <control type="image">
+              <posx>710</posx>
+              <posy>5</posy>
+              <width>40</width>
+              <height>30</height>
+              <aspectratio>stretch</aspectratio>
+              <texture>OverlayLocked.png</texture>
+              <visible>!IsEmpty(ListItem.Property(IsEncrypted))</visible>
+            </control>
+            <control type="image">
+              <posx>690</posx>
+              <posy>7</posy>
+              <width>60</width>
+              <height>25</height>
+              <aspectratio>stretch</aspectratio>
+              <texture>OverlayHD.png</texture>
+              <animation effect="slide" start="0,0" end="-45,0" time="100" condition="!IsEmpty(ListItem.Property(IsEncrypted))">Conditional</animation>
+              <visible>!IsEmpty(ListItem.Property(IsHD))</visible>
+            </control>
+            <control type="image">
+              <posx>0</posx>
+              <posy>2</posy>
+              <width>36</width>
+              <height>36</height>
+              <aspectratio>stretch</aspectratio>
+              <texture>DefaultVideoCover.png</texture>
+              <visible>IsEmpty(ListItem.Property(IsRadio))</visible>
+            </control>
+            <control type="image">
+              <posx>0</posx>
+              <posy>2</posy>
+              <width>36</width>
+              <height>36</height>
+              <aspectratio>stretch</aspectratio>
+              <texture>DefaultAlbumCover.png</texture>
+              <visible>!IsEmpty(ListItem.Property(IsRadio))</visible>
+            </control>
+            <control type="label">
+              <posx>45</posx>
+              <posy>0</posy>
+              <width>500</width>
+              <height>40</height>
+              <font>font14</font>
+              <align>left</align>
+              <aligny>center</aligny>
+              <textcolor>grey2</textcolor>
+              <selectedcolor>selected</selectedcolor>
+              <info>ListItem.Label</info>
+            </control>
+          </focusedlayout>
+        </control>
+        <control type="scrollbar" id="60">
+          <posx>1060</posx>
+          <posy>180</posy>
+          <width>25</width>
+          <height>410</height>
+          <texturesliderbackground border="0,14,0,14">ScrollBarV.png</texturesliderbackground>
+          <texturesliderbar border="0,14,0,14">ScrollBarV_bar.png</texturesliderbar>
+          <texturesliderbarfocus border="0,14,0,14">ScrollBarV_bar_focus.png</texturesliderbarfocus>
+          <textureslidernib>ScrollBarNib.png</textureslidernib>
+          <textureslidernibfocus>ScrollBarNib.png</textureslidernibfocus>
+          <onleft>2</onleft>
+          <onright>10</onright>
+          <showonepage>true</showonepage>
+          <orientation>vertical</orientation>
+        </control>
+        <control type="label">
+          <description>Page Count Label</description>
+          <posx>1040</posx>
+          <posy>600</posy>
+          <width>500</width>
+          <height>20</height>
+          <font>font12</font>
+          <textcolor>grey</textcolor>
+          <scroll>false</scroll>
+          <align>right</align>
+          <aligny>center</aligny>
+          <label>([COLOR=blue]$INFO[Container(2).NumItems][/COLOR]) $LOCALIZE[19019] - $LOCALIZE[31024] ([COLOR=blue]$INFO[Container(2).CurrentPage]/$INFO[Container(2).NumPages][/COLOR])</label>
+        </control>
+        <control type="label" id="36">
+          <description>Status Label</description>
+          <posx>275</posx>
+          <posy>590</posy>
+          <width>500</width>
+          <height>20</height>
+          <font>font14</font>
+          <textcolor>yellow</textcolor>
+          <scroll>false</scroll>
+          <align>left</align>
+          <aligny>center</aligny>
+          <label>-</label>
+        </control>
+      </control>
+    </control>
+    <include>BehindDialogFadeOut</include>
+    <control type="group">
+      <posx>60</posx>
+      <posy>0</posy>
+      <animation effect="slide" end="-310,0" time="400" tween="quadratic" easing="out">WindowClose</animation>
+      <animation effect="slide" start="-310,0" time="400" tween="quadratic" easing="out">WindowOpen</animation>
+      <control type="image">
+        <posx>0</posx>
+        <posy>0</posy>
+        <width>250</width>
+        <height>35</height>
+        <texture border="0,0,32,0">header.png</texture>
+      </control>
+      <control type="label">
+        <include>WindowTitleCommons</include>
+        <posx>220</posx>
+        <label>$ADDON[pvr.vdr.vnsi 30008]</label>
+      </control>
+    </control>
+    <include>WindowTitleHomeButton</include>
+    <include>Clock</include>
+  </controls>
+</window>
diff --git a/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp b/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
new file mode 100644
index 0000000..9afb080
--- /dev/null
+++ b/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
@@ -0,0 +1,787 @@
+/*
+ *      Copyright (C) 2005-2012 Team XBMC
+ *      http://www.xbmc.org
+ *
+ *  This Program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2, or (at your option)
+ *  any later version.
+ *
+ *  This Program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "VNSIAdmin.h"
+#include "responsepacket.h"
+#include "requestpacket.h"
+#include "vnsicommand.h"
+#include <queue>
+#include <stdio.h>
+
+#if defined(HAVE_GL)
+#include <GL/gl.h>
+#endif
+
+#define CONTROL_RENDER_ADDON             9
+#define CONTROL_MENU                    10
+#define CONTROL_OSD_BUTTON              13
+
+#define ACTION_NONE                    0
+#define ACTION_MOVE_LEFT               1
+#define ACTION_MOVE_RIGHT              2
+#define ACTION_MOVE_UP                 3
+#define ACTION_MOVE_DOWN               4
+#define ACTION_SELECT_ITEM             7
+#define ACTION_PREVIOUS_MENU          10
+#define ACTION_SHOW_INFO              11
+
+#define REMOTE_0                    58  // remote keys 0-9. are used by multiple windows
+#define REMOTE_1                    59  // for example in videoFullScreen.xml window id=2005 you can
+#define REMOTE_2                    60  // enter time (mmss) to jump to particular point in the movie
+#define REMOTE_3                    61
+#define REMOTE_4                    62  // with spincontrols you can enter 3digit number to quickly set
+#define REMOTE_5                    63  // spincontrol to desired value
+#define REMOTE_6                    64
+#define REMOTE_7                    65
+#define REMOTE_8                    66
+#define REMOTE_9                    67
+#define ACTION_NAV_BACK             92
+
+#define ACTION_TELETEXT_RED           215 // Teletext Color buttons to control TopText
+#define ACTION_TELETEXT_GREEN         216 //    "       "      "    "     "       "
+#define ACTION_TELETEXT_YELLOW        217 //    "       "      "    "     "       "
+#define ACTION_TELETEXT_BLUE          218 //    "       "      "    "     "       "
+
+
+using namespace ADDON;
+
+
+class cOSDTexture
+{
+public:
+  cOSDTexture(int bpp, int x0, int y0, int x1, int y1);
+  virtual ~cOSDTexture();
+  void SetPalette(int numColors, uint32_t *colors);
+  void SetBlock(int x0, int y0, int x1, int y1, int stride, void *data, int len);
+  void Clear();
+  void GetSize(int &width, int &height);
+  void GetOrigin(int &x0, int &y0) { x0 = m_x0; y0 = m_y0;};
+  bool IsDirty(int &x0, int &y0, int &x1, int &y1);
+  void *GetBuffer() {return (void*)m_buffer;};
+protected:
+  int m_x0, m_x1, m_y0, m_y1;
+  int m_dirtyX0, m_dirtyX1, m_dirtyY0, m_dirtyY1;
+  int m_bpp;
+  int m_numColors;
+  uint32_t m_palette[256];
+  uint8_t *m_buffer;
+  bool m_dirty;
+};
+
+cOSDTexture::cOSDTexture(int bpp, int x0, int y0, int x1, int y1)
+{
+  m_bpp = bpp;
+  m_x0 = x0;
+  m_x1 = x1;
+  m_y0 = y0;
+  m_y1 = y1;
+  m_buffer = new uint8_t[(x1-x0+1)*(y1-y0+1)*sizeof(uint32_t)];
+  memset(m_buffer,0, (x1-x0+1)*(y1-y0+1)*sizeof(uint32_t));
+  m_dirtyX0 = m_dirtyY0 = 0;
+  m_dirtyX1 = x1 - x0;
+  m_dirtyY1 = y1 - y0;
+  m_dirty = false;
+}
+
+cOSDTexture::~cOSDTexture()
+{
+  if (m_buffer)
+  {
+    delete [] m_buffer;
+    m_buffer = 0;
+  }
+}
+
+void cOSDTexture::Clear()
+{
+  memset(m_buffer,0, (m_x1-m_x0+1)*(m_y1-m_y0+1)*sizeof(uint32_t));
+  m_dirtyX0 = m_dirtyY0 = 0;
+  m_dirtyX1 = m_x1 - m_x0;
+  m_dirtyY1 = m_y1 - m_y0;
+  m_dirty = false;
+}
+
+void cOSDTexture::SetBlock(int x0, int y0, int x1, int y1, int stride, void *data, int len)
+{
+  int line = y0;
+  int col;
+  int color;
+  int width = m_x1 - m_x0 + 1;
+  uint8_t *dataPtr = (uint8_t*)data;
+  int pos = 0;
+  uint32_t *buffer = (uint32_t*)m_buffer;
+  while (line <= y1)
+  {
+    int lastPos = pos;
+    col = x0;
+    int offset = line*width;
+    while (col <= x1)
+    {
+      if (pos >= len)
+      {
+        XBMC->Log(LOG_ERROR, "cOSDTexture::SetBlock: reached unexpected end of buffer");
+        return;
+      }
+      color = dataPtr[pos];
+      if (m_bpp == 8)
+      {
+        buffer[offset+col] = m_palette[color];
+      }
+      else if (m_bpp == 4)
+      {
+        buffer[offset+col] = m_palette[color & 0x0F];
+      }
+      else if (m_bpp == 2)
+      {
+        buffer[offset+col] = m_palette[color & 0x03];
+      }
+      else if (m_bpp == 1)
+      {
+        buffer[offset+col] = m_palette[color & 0x01];
+      }
+      pos++;
+      col++;
+    }
+    line++;
+    pos = lastPos + stride;
+  }
+  if (x0 < m_dirtyX0) m_dirtyX0 = x0;
+  if (x1 > m_dirtyX1) m_dirtyX1 = x1;
+  if (y0 < m_dirtyY0) m_dirtyY0 = y0;
+  if (y1 > m_dirtyY1) m_dirtyY1 = y1;
+  m_dirty = true;
+}
+
+void cOSDTexture::SetPalette(int numColors, uint32_t *colors)
+{
+  m_numColors = numColors;
+  for (int i=0; i<m_numColors; i++)
+  {
+    // convert from ARGB to RGBA
+    m_palette[i] = (colors[i] & 0x00FF0000) | (colors[i] & 0x0000FF00) | (colors[i] & 0x000000FF) | (colors[i] & 0xFF000000);
+  }
+}
+
+void cOSDTexture::GetSize(int &width, int &height)
+{
+  width = m_x1 - m_x0 + 1;
+  height = m_y1 - m_y0 + 1;
+}
+
+bool cOSDTexture::IsDirty(int &x0, int &y0, int &x1, int &y1)
+{
+  bool ret = m_dirty;
+  x0 = m_dirtyX0;
+  x1 = m_dirtyX1;
+  y0 = m_dirtyY0;
+  y1 = m_dirtyY1;
+  m_dirty = false;
+  return ret;
+}
+//-----------------------------------------------------------------------------
+#define MAX_TEXTURES 10
+
+class cOSDRender
+{
+public:
+  cOSDRender();
+  virtual ~cOSDRender();
+  void SetOSDSize(int width, int height) {m_osdWidth = width; m_osdHeight = height;};
+  void SetControlSize(int width, int height) {m_controlWidth = width; m_controlHeight = height;};
+  void AddTexture(int wndId, int bpp, int x0, int y0, int x1, int y1, int reset);
+  void SetPalette(int wndId, int numColors, uint32_t *colors);
+  void SetBlock(int wndId, int x0, int y0, int x1, int y1, int stride, void *data, int len);
+  void Clear(int wndId);
+  virtual void DisposeTexture(int wndId);
+  virtual void FreeResources();
+  virtual void Render() {};
+protected:
+  cOSDTexture *m_osdTextures[MAX_TEXTURES];
+  std::queue<cOSDTexture*> m_disposedTextures;
+  int m_osdWidth, m_osdHeight;
+  int m_controlWidth, m_controlHeight;
+};
+
+cOSDRender::cOSDRender()
+{
+  for (int i = 0; i < MAX_TEXTURES; i++)
+    m_osdTextures[i] = 0;
+}
+
+cOSDRender::~cOSDRender()
+{
+  for (int i = 0; i < MAX_TEXTURES; i++)
+  {
+    DisposeTexture(i);
+  }
+  FreeResources();
+}
+
+void cOSDRender::DisposeTexture(int wndId)
+{
+  if (m_osdTextures[wndId])
+  {
+    m_disposedTextures.push(m_osdTextures[wndId]);
+    m_osdTextures[wndId] = 0;
+  }
+}
+
+void cOSDRender::FreeResources()
+{
+  while (!m_disposedTextures.empty())
+  {
+    delete m_disposedTextures.front();
+    m_disposedTextures.pop();
+  }
+}
+
+void cOSDRender::AddTexture(int wndId, int bpp, int x0, int y0, int x1, int y1, int reset)
+{
+  if (reset)
+    DisposeTexture(wndId);
+  if (!m_osdTextures[wndId])
+    m_osdTextures[wndId] = new cOSDTexture(bpp, x0, y0, x1, y1);
+}
+
+void cOSDRender::Clear(int wndId)
+{
+  if (m_osdTextures[wndId])
+    m_osdTextures[wndId]->Clear();
+}
+
+void cOSDRender::SetPalette(int wndId, int numColors, uint32_t *colors)
+{
+  if (m_osdTextures[wndId])
+    m_osdTextures[wndId]->SetPalette(numColors, colors);
+}
+
+void cOSDRender::SetBlock(int wndId, int x0, int y0, int x1, int y1, int stride, void *data, int len)
+{
+  if (m_osdTextures[wndId])
+    m_osdTextures[wndId]->SetBlock(x0, y0, x1, y1, stride, data, len);
+}
+
+#if defined(HAVE_GL)
+class cOSDRenderGL : public cOSDRender
+{
+public:
+  cOSDRenderGL();
+  virtual ~cOSDRenderGL();
+  virtual void DisposeTexture(int wndId);
+  virtual void FreeResources();
+  virtual void Render();
+protected:
+  GLuint m_hwTextures[MAX_TEXTURES];
+  std::queue<GLuint> m_disposedHwTextures;
+};
+
+cOSDRenderGL::cOSDRenderGL()
+{
+  for (int i = 0; i < MAX_TEXTURES; i++)
+    m_hwTextures[i] = 0;
+}
+
+cOSDRenderGL::~cOSDRenderGL()
+{
+  for (int i = 0; i < MAX_TEXTURES; i++)
+  {
+    DisposeTexture(i);
+  }
+  FreeResources();
+}
+
+void cOSDRenderGL::DisposeTexture(int wndId)
+{
+  if (m_hwTextures[wndId])
+  {
+    m_disposedHwTextures.push(m_hwTextures[wndId]);
+    m_hwTextures[wndId] = 0;
+  }
+  cOSDRender::DisposeTexture(wndId);
+}
+
+void cOSDRenderGL::FreeResources()
+{
+  while (!m_disposedHwTextures.empty())
+  {
+    if (glIsTexture(m_disposedHwTextures.front()))
+    {
+      glFinish();
+      glDeleteTextures(1, &m_disposedHwTextures.front());
+      m_disposedHwTextures.pop();
+    }
+  }
+  cOSDRender::FreeResources();
+}
+
+void cOSDRenderGL::Render()
+{
+  glMatrixMode (GL_MODELVIEW);
+  glPushMatrix ();
+  glLoadIdentity ();
+  glMatrixMode (GL_PROJECTION);
+  glPushMatrix ();
+  glLoadIdentity ();
+  glEnable(GL_BLEND);
+  glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+  glColor4f(1.0f, 1.0f, 1.0f, 0.75f);
+
+  for (int i = 0; i < MAX_TEXTURES; i++)
+  {
+    int width, height, offsetX, offsetY;
+    int x0,x1,y0,y1;
+    bool dirty;
+
+    if (m_osdTextures[i] == 0)
+      continue;
+
+    m_osdTextures[i]->GetSize(width, height);
+    m_osdTextures[i]->GetOrigin(offsetX, offsetY);
+    dirty = m_osdTextures[i]->IsDirty(x0,y0,x1,y1);
+
+    // create gl texture
+    if (dirty && !glIsTexture(m_hwTextures[i]))
+    {
+      glPushClientAttrib(GL_CLIENT_PIXEL_STORE_BIT);
+      glEnable(GL_TEXTURE_2D);
+      glGenTextures(1, &m_hwTextures[i]);
+      glBindTexture(GL_TEXTURE_2D, m_hwTextures[i]);
+      glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
+      glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
+      glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);
+      glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);
+      glPixelStorei(GL_UNPACK_ALIGNMENT, 1);
+      glPixelStorei(GL_UNPACK_ROW_LENGTH, width);
+      glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, width, height, 0, GL_RGBA, GL_UNSIGNED_BYTE, m_osdTextures[i]->GetBuffer());
+      glPopClientAttrib();
+    }
+    // update texture
+    else if (dirty)
+    {
+      glPushClientAttrib(GL_CLIENT_PIXEL_STORE_BIT);
+      glEnable(GL_TEXTURE_2D);
+      glBindTexture(GL_TEXTURE_2D, m_hwTextures[i]);
+      glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
+      glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
+      glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);
+      glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);
+      glPixelStorei(GL_UNPACK_ALIGNMENT, 1);
+      glPixelStorei(GL_UNPACK_ROW_LENGTH, width);
+      glPixelStorei(GL_UNPACK_SKIP_PIXELS, x0);
+      glPixelStorei(GL_UNPACK_SKIP_ROWS, y0);
+      glTexSubImage2D(GL_TEXTURE_2D, 0, x0, y0, x1-x0+1, y1-y0+1, GL_RGBA, GL_UNSIGNED_BYTE, m_osdTextures[i]->GetBuffer());
+      glPopClientAttrib();
+    }
+
+    // render texture
+
+    // calculate ndc for OSD texture
+    float destX0 = (float)offsetX*2/m_osdWidth -1;
+    float destX1 = (float)(offsetX+width)*2/m_osdWidth -1;
+    float destY0 = (float)offsetY*2/m_osdHeight -1;
+    float destY1 = (float)(offsetY+height)*2/m_osdHeight -1;
+    float aspectControl = (float)m_controlWidth/m_controlHeight;
+    float aspectOSD = (float)m_osdWidth/m_osdHeight;
+    if (aspectOSD > aspectControl)
+    {
+      destY0 *= aspectControl/aspectOSD;
+      destY1 *= aspectControl/aspectOSD;
+    }
+    else if (aspectOSD < aspectControl)
+    {
+      destX0 *= aspectOSD/aspectControl;
+      destX1 *= aspectOSD/aspectControl;
+    }
+
+    // y inveted
+    destY0 *= -1;
+    destY1 *= -1;
+
+    glEnable(GL_TEXTURE_2D);
+    glActiveTextureARB(GL_TEXTURE0);
+    glBindTexture(GL_TEXTURE_2D, m_hwTextures[i]);
+    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);
+    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);
+    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
+    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
+    glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE);
+    glBegin(GL_QUADS);
+    glTexCoord2f(0.0, 0.0);  glVertex2f(destX0, destY0);
+    glTexCoord2f(1.0, 0.0);  glVertex2f(destX1, destY0);
+    glTexCoord2f(1.0, 1.0);  glVertex2f(destX1, destY1);
+    glTexCoord2f(0.0, 1.0);  glVertex2f(destX0, destY1);
+    glEnd();
+    glBindTexture (GL_TEXTURE_2D, 0);
+    glDisable(GL_TEXTURE_2D);
+  }
+
+  glPopMatrix();
+  glMatrixMode(GL_MODELVIEW);
+  glPopMatrix();
+}
+#endif
+
+//-----------------------------------------------------------------------------
+cVNSIAdmin::cVNSIAdmin()
+{
+}
+
+cVNSIAdmin::~cVNSIAdmin()
+{
+
+}
+
+bool cVNSIAdmin::Open(const std::string& hostname, int port, const char* name)
+{
+
+  if(!cVNSIData::Open(hostname, port, name))
+    return false;
+
+  if(!cVNSIData::Login())
+    return false;
+
+  m_bIsOsdControl = false;
+#if defined(HAVE_GL)
+  m_osdRender = new cOSDRenderGL();
+#else
+  m_osdRender = new cOSDRender();
+#endif
+
+  if (!ConnectOSD())
+    return false;
+
+  // Load the Window as Dialog
+  m_window = GUI->Window_create("Admin.xml", "Confluence", false, true);
+  m_window->m_cbhdl   = this;
+  m_window->CBOnInit  = OnInitCB;
+  m_window->CBOnFocus = OnFocusCB;
+  m_window->CBOnClick = OnClickCB;
+  m_window->CBOnAction= OnActionCB;
+  m_window->DoModal();
+
+  GUI->Control_releaseRendering(m_renderControl);
+  GUI->Window_destroy(m_window);
+  Close();
+
+  return true;
+}
+
+bool cVNSIAdmin::OnClick(int controlId)
+{
+  XBMC->Log(LOG_ERROR,"--------------- id: %d", controlId);
+  return false;
+}
+
+bool cVNSIAdmin::OnFocus(int controlId)
+{
+  if (controlId == CONTROL_OSD_BUTTON)
+  {
+    m_window->SetControlLabel(CONTROL_OSD_BUTTON, XBMC->GetLocalizedString(30102));
+    m_window->MarkDirtyRegion();
+    m_bIsOsdControl = true;
+    return true;
+  }
+  else if (m_bIsOsdControl)
+  {
+    m_window->SetControlLabel(CONTROL_OSD_BUTTON, XBMC->GetLocalizedString(30103));
+    m_window->MarkDirtyRegion();
+    m_bIsOsdControl = false;
+    return true;
+  }
+
+  return false;
+}
+
+bool cVNSIAdmin::OnInit()
+{
+  m_renderControl = GUI->Control_getRendering(m_window, CONTROL_RENDER_ADDON);
+  m_renderControl->m_cbhdl   = this;
+  m_renderControl->CBCreate = CreateCB;
+  m_renderControl->CBRender = RenderCB;
+  m_renderControl->CBStop = StopCB;
+  m_renderControl->CBDirty = DirtyCB;
+  m_renderControl->Init();
+
+  cRequestPacket vrp;
+  if (!vrp.init(VNSI_OSD_HITKEY))
+  {
+    XBMC->Log(LOG_ERROR, "%s - Can't init cRequestPacket", __FUNCTION__);
+    return false;
+  }
+  vrp.add_U32(0);
+  cVNSISession::TransmitMessage(&vrp);
+
+  return true;
+}
+
+bool cVNSIAdmin::OnAction(int actionId)
+{
+  if (m_window->GetFocusId() != CONTROL_OSD_BUTTON && m_bIsOsdControl)
+  {
+    m_bIsOsdControl = false;
+    m_window->SetControlLabel(CONTROL_OSD_BUTTON, XBMC->GetLocalizedString(30103));
+    m_window->MarkDirtyRegion();
+  }
+  else if (m_window->GetFocusId() == CONTROL_OSD_BUTTON)
+  {
+    if (actionId == ACTION_SHOW_INFO)
+    {
+      m_window->SetFocusId(CONTROL_MENU);
+      return true;
+    }
+    else if(IsVdrAction(actionId))
+    {
+      // send all actions to vdr
+      cRequestPacket vrp;
+      if (!vrp.init(VNSI_OSD_HITKEY))
+      {
+        XBMC->Log(LOG_ERROR, "%s - Can't init cRequestPacket", __FUNCTION__);
+        return false;
+      }
+      vrp.add_U32(actionId);
+      cVNSISession::TransmitMessage(&vrp);
+      return true;
+    }
+  }
+
+  if (actionId == ADDON_ACTION_CLOSE_DIALOG ||
+      actionId == ADDON_ACTION_PREVIOUS_MENU ||
+      actionId == ACTION_NAV_BACK)
+  {
+    m_window->Close();
+    return true;
+  }
+
+  if (actionId == ACTION_SELECT_ITEM)
+  {
+    int controlID = m_window->GetFocusId();
+    if (controlID == CONTROL_MENU)
+    {
+      if (strncmp(m_window->GetProperty("menu"), "osd", 3) == 0)
+      {
+        m_window->MarkDirtyRegion();
+      }
+    }
+  }
+
+  return false;
+}
+
+bool cVNSIAdmin::IsVdrAction(int action)
+{
+  if (action == ACTION_MOVE_LEFT ||
+      action == ACTION_MOVE_RIGHT ||
+      action == ACTION_MOVE_UP ||
+      action == ACTION_MOVE_DOWN ||
+      action == ACTION_SELECT_ITEM ||
+      action == ACTION_PREVIOUS_MENU ||
+      action == REMOTE_0 ||
+      action == REMOTE_1 ||
+      action == REMOTE_2 ||
+      action == REMOTE_3 ||
+      action == REMOTE_4 ||
+      action == REMOTE_5 ||
+      action == REMOTE_6 ||
+      action == REMOTE_7 ||
+      action == REMOTE_8 ||
+      action == REMOTE_9 ||
+      action == ACTION_NAV_BACK ||
+      action == ACTION_TELETEXT_RED ||
+      action == ACTION_TELETEXT_GREEN ||
+      action == ACTION_TELETEXT_YELLOW ||
+      action == ACTION_TELETEXT_BLUE)
+    return true;
+  else
+    return false;
+}
+
+bool cVNSIAdmin::Create(int x, int y, int w, int h)
+{
+  if (m_osdRender)
+  {
+    m_osdRender->SetControlSize(w,h);
+  }
+  return true;
+}
+
+void cVNSIAdmin::Render()
+{
+  m_osdMutex.Lock();
+  if (m_osdRender)
+  {
+    m_osdRender->Render();
+    m_osdRender->FreeResources();
+  }
+  m_bIsOsdDirty = false;
+  m_osdMutex.Unlock();
+}
+
+void cVNSIAdmin::Stop()
+{
+  m_osdMutex.Lock();
+  if (m_osdRender)
+  {
+    delete m_osdRender;
+    m_osdRender = NULL;
+  }
+  m_osdMutex.Unlock();
+}
+
+bool cVNSIAdmin::Dirty()
+{
+  return m_bIsOsdDirty;
+}
+
+bool cVNSIAdmin::OnInitCB(GUIHANDLE cbhdl)
+{
+  cVNSIAdmin* osd = static_cast<cVNSIAdmin*>(cbhdl);
+  return osd->OnInit();
+}
+
+bool cVNSIAdmin::OnClickCB(GUIHANDLE cbhdl, int controlId)
+{
+  cVNSIAdmin* osd = static_cast<cVNSIAdmin*>(cbhdl);
+  return osd->OnClick(controlId);
+}
+
+bool cVNSIAdmin::OnFocusCB(GUIHANDLE cbhdl, int controlId)
+{
+  cVNSIAdmin* osd = static_cast<cVNSIAdmin*>(cbhdl);
+  return osd->OnFocus(controlId);
+}
+
+bool cVNSIAdmin::OnActionCB(GUIHANDLE cbhdl, int actionId)
+{
+  cVNSIAdmin* osd = static_cast<cVNSIAdmin*>(cbhdl);
+  return osd->OnAction(actionId);
+}
+
+bool cVNSIAdmin::CreateCB(GUIHANDLE cbhdl, int x, int y, int w, int h, void *device)
+{
+  cVNSIAdmin* osd = static_cast<cVNSIAdmin*>(cbhdl);
+  return osd->Create(x, y, w, h);
+}
+
+void cVNSIAdmin::RenderCB(GUIHANDLE cbhdl)
+{
+  cVNSIAdmin* osd = static_cast<cVNSIAdmin*>(cbhdl);
+  osd->Render();
+}
+
+void cVNSIAdmin::StopCB(GUIHANDLE cbhdl)
+{
+  cVNSIAdmin* osd = static_cast<cVNSIAdmin*>(cbhdl);
+  osd->Stop();
+}
+
+bool cVNSIAdmin::DirtyCB(GUIHANDLE cbhdl)
+{
+  cVNSIAdmin* osd = static_cast<cVNSIAdmin*>(cbhdl);
+  return osd->Dirty();
+}
+
+bool cVNSIAdmin::OnResponsePacket(cResponsePacket* resp)
+{
+  if (resp->getChannelID() == VNSI_CHANNEL_OSD)
+  {
+    uint32_t wnd, color, x0, y0, x1, y1, len;
+    uint8_t *data;
+    resp->getOSDData(wnd, color, x0, y0, x1, y1);
+    if (resp->getOpCodeID() == VNSI_OSD_OPEN)
+    {
+      data = resp->getUserData();
+      len = resp->getUserDataLength();
+      m_osdMutex.Lock();
+      if (m_osdRender)
+        m_osdRender->AddTexture(wnd, color, x0, y0, x1, y1, data[0]);
+      m_osdMutex.Unlock();
+      free(data);
+    }
+    else if (resp->getOpCodeID() == VNSI_OSD_SETPALETTE)
+    {
+      data = resp->getUserData();
+      len = resp->getUserDataLength();
+      m_osdMutex.Lock();
+      if (m_osdRender)
+        m_osdRender->SetPalette(wnd, x0, (uint32_t*)data);
+      m_osdMutex.Unlock();
+      free(data);
+    }
+    else if (resp->getOpCodeID() == VNSI_OSD_SETBLOCK)
+    {
+      data = resp->getUserData();
+      len = resp->getUserDataLength();
+      m_osdMutex.Lock();
+      if (m_osdRender)
+      {
+        m_osdRender->SetBlock(wnd, x0, y0, x1, y1, color, data, len);
+        m_bIsOsdDirty = true;
+      }
+      m_osdMutex.Unlock();
+      free(data);
+    }
+    else if (resp->getOpCodeID() == VNSI_OSD_CLEAR)
+    {
+      m_osdMutex.Lock();
+      if (m_osdRender)
+        m_osdRender->Clear(wnd);
+      m_bIsOsdDirty = true;
+      m_osdMutex.Unlock();
+    }
+    else if (resp->getOpCodeID() == VNSI_OSD_CLOSE)
+    {
+      m_osdMutex.Lock();
+      if (m_osdRender)
+        m_osdRender->DisposeTexture(wnd);
+      m_bIsOsdDirty = true;
+      m_osdMutex.Unlock();
+    }
+    else if (resp->getOpCodeID() == VNSI_OSD_MOVEWINDOW)
+    {
+    }
+    else
+      return false;
+  }
+  else
+    return false;
+
+  return true;
+}
+
+bool cVNSIAdmin::ConnectOSD()
+{
+  cRequestPacket vrp;
+  if (!vrp.init(VNSI_OSD_CONNECT))
+    return false;
+
+  cResponsePacket* vresp = ReadResult(&vrp);
+  if (vresp == NULL || vresp->noResponse())
+  {
+    delete vresp;
+    return false;
+  }
+  uint32_t osdWidth = vresp->extract_U32();
+  uint32_t osdHeight = vresp->extract_U32();
+  if (m_osdRender)
+    m_osdRender->SetOSDSize(osdWidth, osdHeight);
+  delete vresp;
+
+  return true;
+}
diff --git a/addons/pvr.vdr.vnsi/src/VNSIAdmin.h b/addons/pvr.vdr.vnsi/src/VNSIAdmin.h
new file mode 100644
index 0000000..f5b14fa
--- /dev/null
+++ b/addons/pvr.vdr.vnsi/src/VNSIAdmin.h
@@ -0,0 +1,74 @@
+#pragma once
+
+/*
+ *      Copyright (C) 2005-2012 Team XBMC
+ *      http://www.xbmc.org
+ *
+ *  This Program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2, or (at your option)
+ *  any later version.
+ *
+ *  This Program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "VNSIData.h"
+#include "client.h"
+
+class cOSDRender;
+
+class cVNSIAdmin : public cVNSIData
+{
+public:
+
+  cVNSIAdmin();
+  ~cVNSIAdmin();
+
+  bool Open(const std::string& hostname, int port, const char* name = "XBMC osd client");
+
+  bool OnClick(int controlId);
+  bool OnFocus(int controlId);
+  bool OnInit();
+  bool OnAction(int actionId);
+
+  bool Create(int x, int y, int w, int h);
+  void Render();
+  void Stop();
+  bool Dirty();
+
+  static bool OnClickCB(GUIHANDLE cbhdl, int controlId);
+  static bool OnFocusCB(GUIHANDLE cbhdl, int controlId);
+  static bool OnInitCB(GUIHANDLE cbhdl);
+  static bool OnActionCB(GUIHANDLE cbhdl, int actionId);
+
+  static bool CreateCB(GUIHANDLE cbhdl, int x, int y, int w, int h, void *device);
+  static void RenderCB(GUIHANDLE cbhdl);
+  static void StopCB(GUIHANDLE cbhdl);
+  static bool DirtyCB(GUIHANDLE cbhdl);
+
+protected:
+  virtual bool OnResponsePacket(cResponsePacket* resp);
+  virtual void OnDisconnect() {};
+  virtual void OnReconnect() {};
+  bool ConnectOSD();
+  bool IsVdrAction(int action);
+
+private:
+
+  CAddonGUIWindow *m_window;
+  CAddonGUIRenderingControl *m_renderControl;
+  bool m_bIsOsdControl;
+  bool m_bIsOsdDirty;
+  int m_width, m_height;
+  int m_osdWidth, m_osdHeight;
+  cOSDRender *m_osdRender;
+  PLATFORM::CMutex m_osdMutex;
+};
diff --git a/addons/pvr.vdr.vnsi/src/VNSIData.h b/addons/pvr.vdr.vnsi/src/VNSIData.h
index e475bed..e2545e8 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIData.h
+++ b/addons/pvr.vdr.vnsi/src/VNSIData.h
@@ -71,8 +71,8 @@ class cVNSIData : public cVNSISession, public PLATFORM::CThread
   virtual void *Process(void);
   virtual bool OnResponsePacket(cResponsePacket *pkt);
 
-  void OnDisconnect();
-  void OnReconnect();
+  virtual void OnDisconnect();
+  virtual void OnReconnect();
 
 private:
 
diff --git a/addons/pvr.vdr.vnsi/src/VNSISession.cpp b/addons/pvr.vdr.vnsi/src/VNSISession.cpp
index 4a8d806..47a2f13 100644
--- a/addons/pvr.vdr.vnsi/src/VNSISession.cpp
+++ b/addons/pvr.vdr.vnsi/src/VNSISession.cpp
@@ -105,7 +105,7 @@ bool cVNSISession::Login()
   {
     cRequestPacket vrp;
     if (!vrp.init(VNSI_LOGIN))                  throw "Can't init cRequestPacket";
-    if (!vrp.add_U32(VNSIPROTOCOLVERSION))      throw "Can't add protocol version to RequestPacket";
+    if (!vrp.add_U32(VNSI_PROTOCOLVERSION))     throw "Can't add protocol version to RequestPacket";
     if (!vrp.add_U8(false))                     throw "Can't add netlog flag";
     if (!m_name.empty())
     {
@@ -131,7 +131,7 @@ bool cVNSISession::Login()
     m_version   = ServerVersion;
     m_protocol  = (int)protocol;
 
-    if (m_protocol != VNSIPROTOCOLVERSION)     throw "Protocol versions do not match";
+    if (m_protocol != VNSI_PROTOCOLVERSION)     throw "Protocol versions do not match";
 
     if (m_name.empty())
       XBMC->Log(LOG_NOTICE, "Logged in at '%lu+%i' to '%s' Version: '%s' with protocol version '%d'",
@@ -213,6 +213,32 @@ cResponsePacket* cVNSISession::ReadMessage(int iInitialTimeout /*= 10000*/, int
     }
     vresp->setStream(userData, userDataLength);
   }
+  else if (channelID == VNSI_CHANNEL_OSD)
+  {
+    vresp = new cResponsePacket();
+
+    if (!readData(vresp->getHeader(), vresp->getOSDHeaderLength(), iDatapacketTimeout))
+    {
+      return NULL;
+    }
+    vresp->extractOSDHeader();
+    userDataLength = vresp->getUserDataLength();
+
+    if (userDataLength > 5000000) return NULL; // how big can these packets get?
+    userData = NULL;
+    if (userDataLength > 0)
+    {
+      userData = (uint8_t*)malloc(userDataLength);
+      if (!userData) return NULL;
+      if (!readData(userData, userDataLength, iDatapacketTimeout))
+      {
+        free(userData);
+        delete vresp;
+        return NULL;
+      }
+    }
+    vresp->setOSD(userData, userDataLength);
+  }
   else
   {
     vresp = new cResponsePacket();
diff --git a/addons/pvr.vdr.vnsi/src/client.cpp b/addons/pvr.vdr.vnsi/src/client.cpp
index 81dfe4a..bfb9157 100644
--- a/addons/pvr.vdr.vnsi/src/client.cpp
+++ b/addons/pvr.vdr.vnsi/src/client.cpp
@@ -25,6 +25,7 @@
 #include "VNSIRecording.h"
 #include "VNSIData.h"
 #include "VNSIChannelScan.h"
+#include "VNSIAdmin.h"
 #include "platform/util/util.h"
 
 #include <sstream>
@@ -179,6 +180,12 @@ ADDON_STATUS ADDON_Create(void* hdl, void* props)
     return m_CurStatus;
   }
 
+  PVR_MENUHOOK hook;
+  hook.iHookId = 1;
+  hook.category = PVR_MENUHOOK_SETTING;
+  hook.iLocalizedStringId = 30100;
+  PVR->AddMenuHook(&hook);
+
   m_CurStatus = ADDON_STATUS_OK;
   return m_CurStatus;
 }
@@ -646,8 +653,21 @@ long long LengthRecordedStream(void)
   return 0;
 }
 
+/*******************************************/
+/** PVR Menu Hook Functions               **/
+
+PVR_ERROR CallMenuHook(const PVR_MENUHOOK &menuhook)
+{
+  if (menuhook.iHookId == 1)
+  {
+    cVNSIAdmin osd;
+    osd.Open(g_szHostname, g_iPort);
+  }
+  return PVR_ERROR_NO_ERROR;
+}
+
 /** UNUSED API FUNCTIONS */
-PVR_ERROR CallMenuHook(const PVR_MENUHOOK &menuhook) { return PVR_ERROR_NOT_IMPLEMENTED; }
+
 PVR_ERROR DeleteChannel(const PVR_CHANNEL &channel) { return PVR_ERROR_NOT_IMPLEMENTED; }
 PVR_ERROR RenameChannel(const PVR_CHANNEL &channel) { return PVR_ERROR_NOT_IMPLEMENTED; }
 PVR_ERROR MoveChannel(const PVR_CHANNEL &channel) { return PVR_ERROR_NOT_IMPLEMENTED; }
diff --git a/addons/pvr.vdr.vnsi/src/responsepacket.cpp b/addons/pvr.vdr.vnsi/src/responsepacket.cpp
index ba8e5b1..64e7c17 100644
--- a/addons/pvr.vdr.vnsi/src/responsepacket.cpp
+++ b/addons/pvr.vdr.vnsi/src/responsepacket.cpp
@@ -28,7 +28,6 @@
 #include "client.h"
 #include "../../../lib/platform/sockets/tcp.h"
 
-
 cResponsePacket::cResponsePacket()
 {
   userDataLength  = 0;
@@ -53,6 +52,16 @@
   }
 }
 
+void cResponsePacket::getOSDData(uint32_t &wnd, uint32_t &color, uint32_t &x0, uint32_t &y0, uint32_t &x1, uint32_t &y1)
+{
+  wnd = osdWnd;
+  color = osdColor;
+  x0 = osdX0;
+  y0 = osdY0;
+  x1 = osdX1;
+  y1 = osdY1;
+}
+
 void cResponsePacket::setResponse(uint8_t* tuserData, uint32_t tuserDataLength)
 {
   channelID       = VNSI_CHANNEL_REQUEST_RESPONSE;
@@ -78,6 +87,15 @@ void cResponsePacket::setStream(uint8_t* tuserData, uint32_t tuserDataLength)
   packetPos       = 0;
 }
 
+void cResponsePacket::setOSD(uint8_t* tuserData, uint32_t tuserDataLength)
+{
+  channelID       = VNSI_CHANNEL_OSD;
+  // set pointer to user data
+  userData        = tuserData;
+  userDataLength  = tuserDataLength;
+  packetPos       = 0;
+}
+
 void cResponsePacket::extractHeader()
 {
   // set data pointers to header first
@@ -110,6 +128,25 @@ void cResponsePacket::extractStreamHeader()
   userData = NULL;
 }
 
+void cResponsePacket::extractOSDHeader()
+{
+  channelID = VNSI_CHANNEL_OSD;
+
+  // set data pointers to header first
+  userData = header;
+  userDataLength = sizeof(header);
+  packetPos = 0;
+
+  opcodeID = extract_U32();
+  osdWnd   = extract_S32();
+  osdColor = extract_S32();
+  osdX0    = extract_S32();
+  osdY0    = extract_S32();
+  osdX1    = extract_S32();
+  osdY1    = extract_S32();
+  userDataLength = extract_U32();
+}
+
 bool cResponsePacket::end()
 {
   return (packetPos >= userDataLength);
diff --git a/addons/pvr.vdr.vnsi/src/responsepacket.h b/addons/pvr.vdr.vnsi/src/responsepacket.h
index 9b13ee0..f0d5477 100644
--- a/addons/pvr.vdr.vnsi/src/responsepacket.h
+++ b/addons/pvr.vdr.vnsi/src/responsepacket.h
@@ -32,9 +32,11 @@ class cResponsePacket
     void setResponse(uint8_t* packet, uint32_t packetLength);
     void setStatus(uint8_t* packet, uint32_t packetLength);
     void setStream(uint8_t* packet, uint32_t packetLength);
+    void setOSD(uint8_t* packet, uint32_t packetLength);
 
     void extractHeader();
     void extractStreamHeader();
+    void extractOSDHeader();
 
     bool noResponse() { return (userData == NULL); };
     int  serverError();
@@ -47,6 +49,7 @@ class cResponsePacket
     uint32_t  getDuration()       { return duration; }
     int64_t   getDTS()            { return dts; }
     int64_t   getPTS()            { return pts; }
+    void      getOSDData(uint32_t &wnd, uint32_t &color, uint32_t &x0, uint32_t &y0, uint32_t &x1, uint32_t &y1);
 
     uint32_t  getPacketPos()      { return packetPos; }
 
@@ -66,6 +69,7 @@ class cResponsePacket
     uint8_t* getHeader() { return header; };
     unsigned int getStreamHeaderLength() { return 32; };
     unsigned int getHeaderLength() { return 8; };
+    unsigned int getOSDHeaderLength() { return 32; } ;
 
   private:
     uint8_t  header[36];
@@ -82,5 +86,9 @@ class cResponsePacket
     int64_t  dts;
     int64_t  pts;
 
+    int32_t osdWnd;
+    int32_t osdColor;
+    int32_t osdX0,osdY0,osdX1,osdY1;
+
     bool ownBlock;
 };
diff --git a/addons/pvr.vdr.vnsi/src/vnsicommand.h b/addons/pvr.vdr.vnsi/src/vnsicommand.h
index 5b3f2ad..c98c6ee 100644
--- a/addons/pvr.vdr.vnsi/src/vnsicommand.h
+++ b/addons/pvr.vdr.vnsi/src/vnsicommand.h
@@ -23,15 +23,16 @@
 #define VNSI_COMMAND_H
 
 /** Current VNSI Protocol Version number */
-#define VNSIPROTOCOLVERSION      3
-
+#define VNSI_PROTOCOLVERSION 3
 
 /** Packet types */
 #define VNSI_CHANNEL_REQUEST_RESPONSE 1
 #define VNSI_CHANNEL_STREAM           2
+#define VNSI_CHANNEL_KEEPALIVE        3
+#define VNSI_CHANNEL_NETLOG           4
 #define VNSI_CHANNEL_STATUS           5
 #define VNSI_CHANNEL_SCAN             6
-
+#define VNSI_CHANNEL_OSD              7
 
 /** Response packets operation codes */
 
@@ -85,6 +86,10 @@
 #define VNSI_SCAN_START            143
 #define VNSI_SCAN_STOP             144
 
+/* OPCODE 160 - 179: VNSI network functions for channel scanning */
+#define VNSI_OSD_CONNECT           160
+#define VNSI_OSD_DISCONNECT        161
+#define VNSI_OSD_HITKEY            162
 
 /** Stream packet types (server -> client) */
 #define VNSI_STREAM_CHANGE       1
@@ -103,6 +108,14 @@
 #define VNSI_SCANNER_FINISHED    6
 #define VNSI_SCANNER_STATUS      7
 
+/** OSD packet types (server -> client) */
+#define VNSI_OSD_MOVEWINDOW      1
+#define VNSI_OSD_CLEAR           2
+#define VNSI_OSD_OPEN            3
+#define VNSI_OSD_CLOSE           4
+#define VNSI_OSD_SETPALETTE      5
+#define VNSI_OSD_SETBLOCK        6
+
 /** Status packet types (server -> client) */
 #define VNSI_STATUS_TIMERCHANGE      1
 #define VNSI_STATUS_RECORDING        2
-- 
1.8.1.6


From fbadb7e1b9ec9cf0484c20007cd3eee10e7f65d7 Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Fri, 14 Dec 2012 20:47:50 +0100
Subject: [PATCH 02/63] vnsi: trigger epg update

---
 addons/pvr.vdr.vnsi/src/VNSIData.cpp  | 6 ++++++
 addons/pvr.vdr.vnsi/src/vnsicommand.h | 1 +
 2 files changed, 7 insertions(+)

diff --git a/addons/pvr.vdr.vnsi/src/VNSIData.cpp b/addons/pvr.vdr.vnsi/src/VNSIData.cpp
index cd7d8e9..50dee86 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIData.cpp
+++ b/addons/pvr.vdr.vnsi/src/VNSIData.cpp
@@ -872,6 +872,12 @@ void *cVNSIData::Process()
         XBMC->Log(LOG_DEBUG, "Server requested recordings update");
         PVR->TriggerRecordingUpdate();
       }
+      else if (vresp->getRequestID() == VNSI_STATUS_EPGCHANGE)
+      {
+        uint32_t channel     = vresp->extract_U32();
+        XBMC->Log(LOG_DEBUG, "Server requested Epg update for channel: %d", channel);
+        PVR->TriggerEpgUpdate(channel);
+      }
 
       delete vresp;
     }
diff --git a/addons/pvr.vdr.vnsi/src/vnsicommand.h b/addons/pvr.vdr.vnsi/src/vnsicommand.h
index c98c6ee..2ec7f53 100644
--- a/addons/pvr.vdr.vnsi/src/vnsicommand.h
+++ b/addons/pvr.vdr.vnsi/src/vnsicommand.h
@@ -122,6 +122,7 @@
 #define VNSI_STATUS_MESSAGE          3
 #define VNSI_STATUS_CHANNELCHANGE    4
 #define VNSI_STATUS_RECORDINGSCHANGE 5
+#define VNSI_STATUS_EPGCHANGE        6
 
 /** Packet return codes */
 #define VNSI_RET_OK              0
-- 
1.8.1.6


From ebfd3074c5bfebd05c12f06484019c1eb8771e2d Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Sat, 22 Dec 2012 08:52:16 +0100
Subject: [PATCH 03/63] vnsi: osd - check if wndId is out of bounds

---
 addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp b/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
index 9afb080..c31a828 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
+++ b/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
@@ -196,7 +196,7 @@ bool cOSDTexture::IsDirty(int &x0, int &y0, int &x1, int &y1)
   return ret;
 }
 //-----------------------------------------------------------------------------
-#define MAX_TEXTURES 10
+#define MAX_TEXTURES 16
 
 class cOSDRender
 {
@@ -704,6 +704,11 @@ bool cVNSIAdmin::OnResponsePacket(cResponsePacket* resp)
     uint32_t wnd, color, x0, y0, x1, y1, len;
     uint8_t *data;
     resp->getOSDData(wnd, color, x0, y0, x1, y1);
+    if (wnd >= MAX_TEXTURES)
+    {
+      XBMC->Log(LOG_ERROR, "cVNSIAdmin::OnResponsePacket - invalid wndId: %s", wnd);
+      return true;
+    }
     if (resp->getOpCodeID() == VNSI_OSD_OPEN)
     {
       data = resp->getUserData();
-- 
1.8.1.6


From c15e42bea215074e9bdf53f01268e43faa0dcdd4 Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Fri, 28 Dec 2012 08:49:55 +0100
Subject: [PATCH 04/63] vnsi: drop dead code: SendPing

---
 addons/pvr.vdr.vnsi/src/VNSIData.cpp | 33 ---------------------------------
 addons/pvr.vdr.vnsi/src/VNSIData.h   |  2 --
 2 files changed, 35 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/src/VNSIData.cpp b/addons/pvr.vdr.vnsi/src/VNSIData.cpp
index 50dee86..49fb48b 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIData.cpp
+++ b/addons/pvr.vdr.vnsi/src/VNSIData.cpp
@@ -749,27 +749,8 @@ bool cVNSIData::OnResponsePacket(cResponsePacket* pkt)
   return false;
 }
 
-bool cVNSIData::SendPing()
-{
-  XBMC->Log(LOG_DEBUG, "%s", __FUNCTION__);
-
-  cRequestPacket vrp;
-  if (!vrp.init(VNSI_PING))
-  {
-    XBMC->Log(LOG_ERROR, "%s - Can't init cRequestPacket", __FUNCTION__);
-    return false;
-  }
-
-  cResponsePacket* vresp = cVNSISession::ReadResult(&vrp);
-  delete vresp;
-
-  return (vresp != NULL);
-}
-
 void *cVNSIData::Process()
 {
-  uint32_t lastPing = 0;
-
   cResponsePacket* vresp;
 
   while (!IsStopped())
@@ -788,21 +769,7 @@ void *cVNSIData::Process()
       continue;
     }
 
-    // check if the connection is still up
-    if (vresp == NULL)
-    {
-      if(time(NULL) - lastPing > 5)
-      {
-        lastPing = time(NULL);
-
-//        if(!SendPing())
-//          SignalConnectionLost();
-      }
-      continue;
-    }
-
     // CHANNEL_REQUEST_RESPONSE
-
     if (vresp->getChannelID() == VNSI_CHANNEL_REQUEST_RESPONSE)
     {
       CLockObject lock(m_mutex);
diff --git a/addons/pvr.vdr.vnsi/src/VNSIData.h b/addons/pvr.vdr.vnsi/src/VNSIData.h
index e2545e8..8dc5ead 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIData.h
+++ b/addons/pvr.vdr.vnsi/src/VNSIData.h
@@ -76,8 +76,6 @@ class cVNSIData : public cVNSISession, public PLATFORM::CThread
 
 private:
 
-  bool SendPing();
-
   struct SMessage
   {
     PLATFORM::CEvent *event;
-- 
1.8.1.6


From 3b9bd85b96c9dd0553bc3ad089f61cd6dadfa9b4 Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Fri, 28 Dec 2012 19:13:26 +0100
Subject: [PATCH 05/63] vnsi: osd - correct colors

---
 addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp b/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
index c31a828..3caac8f 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
+++ b/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
@@ -175,7 +175,7 @@ void cOSDTexture::SetPalette(int numColors, uint32_t *colors)
   for (int i=0; i<m_numColors; i++)
   {
     // convert from ARGB to RGBA
-    m_palette[i] = (colors[i] & 0x00FF0000) | (colors[i] & 0x0000FF00) | (colors[i] & 0x000000FF) | (colors[i] & 0xFF000000);
+    m_palette[i] = ((colors[i] & 0xFF000000)) | ((colors[i] & 0x00FF0000) >> 16) | ((colors[i] & 0x0000FF00)) | ((colors[i] & 0x000000FF) << 16);
   }
 }
 
-- 
1.8.1.6


From 3cdca077fc2c351f7af3c1a47d8d5dc25c223e6e Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Sun, 30 Dec 2012 14:51:27 +0100
Subject: [PATCH 06/63] vnsi: close connection on packet sync error

---
 addons/pvr.vdr.vnsi/src/VNSISession.cpp | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/addons/pvr.vdr.vnsi/src/VNSISession.cpp b/addons/pvr.vdr.vnsi/src/VNSISession.cpp
index 47a2f13..8ad7f61 100644
--- a/addons/pvr.vdr.vnsi/src/VNSISession.cpp
+++ b/addons/pvr.vdr.vnsi/src/VNSISession.cpp
@@ -180,6 +180,8 @@ cResponsePacket* cVNSISession::ReadMessage(int iInitialTimeout /*= 10000*/, int
     if (!readData(vresp->getHeader(), vresp->getStreamHeaderLength(), iDatapacketTimeout))
     {
       delete vresp;
+      XBMC->Log(LOG_ERROR, "%s - lost sync on channel stream packet", __FUNCTION__);
+      SignalConnectionLost();
       return NULL;
     }
     vresp->extractStreamHeader();
@@ -196,6 +198,8 @@ cResponsePacket* cVNSISession::ReadMessage(int iInitialTimeout /*= 10000*/, int
         {
           PVR->FreeDemuxPacket(p);
           delete vresp;
+          XBMC->Log(LOG_ERROR, "%s - lost sync on channel stream mux packet", __FUNCTION__);
+          SignalConnectionLost();
           return NULL;
         }
       }
@@ -208,6 +212,8 @@ cResponsePacket* cVNSISession::ReadMessage(int iInitialTimeout /*= 10000*/, int
       {
         free(userData);
         delete vresp;
+        XBMC->Log(LOG_ERROR, "%s - lost sync on channel stream (other) packet", __FUNCTION__);
+        SignalConnectionLost();
         return NULL;
       }
     }
@@ -219,6 +225,8 @@ cResponsePacket* cVNSISession::ReadMessage(int iInitialTimeout /*= 10000*/, int
 
     if (!readData(vresp->getHeader(), vresp->getOSDHeaderLength(), iDatapacketTimeout))
     {
+      XBMC->Log(LOG_ERROR, "%s - lost sync on osd packet", __FUNCTION__);
+      SignalConnectionLost();
       return NULL;
     }
     vresp->extractOSDHeader();
@@ -234,6 +242,8 @@ cResponsePacket* cVNSISession::ReadMessage(int iInitialTimeout /*= 10000*/, int
       {
         free(userData);
         delete vresp;
+        XBMC->Log(LOG_ERROR, "%s - lost sync on additional osd packet", __FUNCTION__);
+        SignalConnectionLost();
         return NULL;
       }
     }
@@ -246,6 +256,8 @@ cResponsePacket* cVNSISession::ReadMessage(int iInitialTimeout /*= 10000*/, int
     if (!readData(vresp->getHeader(), vresp->getHeaderLength(), iDatapacketTimeout))
     {
       delete vresp;
+      XBMC->Log(LOG_ERROR, "%s - lost sync on response packet", __FUNCTION__);
+      SignalConnectionLost();
       return NULL;
     }
     vresp->extractHeader();
@@ -261,6 +273,8 @@ cResponsePacket* cVNSISession::ReadMessage(int iInitialTimeout /*= 10000*/, int
       {
         free(userData);
         delete vresp;
+        XBMC->Log(LOG_ERROR, "%s - lost sync on additional response packet", __FUNCTION__);
+        SignalConnectionLost();
         return NULL;
       }
     }
-- 
1.8.1.6


From bd47144d998e36eaa19ba03c0eb12f3e91fd5cb4 Mon Sep 17 00:00:00 2001
From: unknown <fernetmenta@online.de>
Date: Fri, 18 Jan 2013 15:24:19 +0100
Subject: [PATCH 07/63] vnsi: osd - update vs project

---
 addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj   | 1 +
 .../project/VS2010Express/pvrclient_vdr_vnsi.vcxproj.filters           | 3 +++
 2 files changed, 4 insertions(+)

diff --git a/addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj b/addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj
index f8a20bd..203b8f5 100644
--- a/addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj
+++ b/addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj
@@ -84,6 +84,7 @@
     <ClCompile Include="..\..\src\requestpacket.cpp" />
     <ClCompile Include="..\..\src\responsepacket.cpp" />
     <ClCompile Include="..\..\src\tools.cpp" />
+    <ClCompile Include="..\..\src\VNSIAdmin.cpp" />
     <ClCompile Include="..\..\src\VNSIChannelScan.cpp" />
     <ClCompile Include="..\..\src\VNSIData.cpp" />
     <ClCompile Include="..\..\src\VNSIDemux.cpp" />
diff --git a/addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj.filters b/addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj.filters
index 5be514f..ec8b50a 100644
--- a/addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj.filters
+++ b/addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj.filters
@@ -42,6 +42,9 @@
     <ClCompile Include="..\..\src\VNSISession.cpp">
       <Filter>Source Files</Filter>
     </ClCompile>
+    <ClCompile Include="..\..\src\VNSIAdmin.cpp">
+      <Filter>Source Files</Filter>
+    </ClCompile>
   </ItemGroup>
   <ItemGroup>
     <ClInclude Include="..\..\src\client.h">
-- 
1.8.1.6


From 42906e8b5c9bbf1285e0c3df0b02f3bd32a57934 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Sun, 6 Jan 2013 08:52:58 +0100
Subject: [PATCH 08/63] vdr-plugin-vnsiserver: timeshift

---
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c   | 199 +++++++++++++++++-
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h   |   4 +
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c | 127 +++++++++---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h |  13 +-
 .../vdr-plugin-vnsiserver/parser_MPEGVideo.c       |   2 +-
 .../vdr-plugin-vnsiserver/parser_h264.c            |   2 +-
 .../vdr-plugin-vnsiserver/requestpacket.c          |  10 +
 .../vdr-plugin-vnsiserver/requestpacket.h          |   1 +
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c  |  20 ++
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.h  |   5 +-
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c  |   9 +-
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h  |   1 +
 .../vdr-plugin-vnsiserver/videobuffer.c            | 229 ++++++++++++++++++++-
 .../vdr-plugin-vnsiserver/videobuffer.h            |  10 +-
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.c   |  19 ++
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.h   |   5 +
 .../vdr-plugin-vnsiserver/vnsiclient.c             |  68 ++++++
 .../vdr-plugin-vnsiserver/vnsiclient.h             |   3 +
 .../vdr-plugin-vnsiserver/vnsicommand.h            |  11 +-
 19 files changed, 694 insertions(+), 44 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
index e677168..0d245ce 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
@@ -39,6 +39,8 @@
 
 void cVNSIDemuxer::Open(const cChannel &channel, cVideoBuffer *videoBuffer)
 {
+  cMutexLock lock(&m_Mutex);
+
   m_CurrentChannel = channel;
   m_VideoBuffer = videoBuffer;
   m_OldPmtVersion = -1;
@@ -47,10 +49,16 @@ void cVNSIDemuxer::Open(const cChannel &channel, cVideoBuffer *videoBuffer)
     m_WaitIFrame = true;
   else
     m_WaitIFrame = false;
+
+  cParser::m_Wrap = false;
+  cParser::m_NoOfWraps = 0;
+  cParser::m_ConfirmCount = 0;
 }
 
 void cVNSIDemuxer::Close()
 {
+  cMutexLock lock(&m_Mutex);
+
   for (std::list<cTSStream*>::iterator it = m_Streams.begin(); it != m_Streams.end(); ++it)
   {
     DEBUGLOG("Deleting stream parser for pid=%i and type=%i", (*it)->GetPID(), (*it)->Type());
@@ -66,6 +74,8 @@ int cVNSIDemuxer::Read(sStreamPacket *packet)
   int len;
   cTSStream *stream;
 
+  cMutexLock lock(&m_Mutex);
+
   // clear packet
   if (!packet)
     return -1;
@@ -112,18 +122,171 @@ int cVNSIDemuxer::Read(sStreamPacket *packet)
   }
   else if (stream = FindStream(ts_pid))
   {
-    if (stream->ProcessTSPacket(buf, packet, m_WaitIFrame))
+    if (stream->ProcessTSPacket(buf, packet, NULL, m_WaitIFrame))
     {
       m_WaitIFrame = false;
       return 1;
     }
   }
-  else
-    return -1;
 
   return 0;
 }
 
+bool cVNSIDemuxer::SeekTime(int64_t time)
+{
+  size_t pos, pos_min, pos_max, pos_limit, start_pos;
+  int64_t ts, ts_min, ts_max, last_ts;
+  int no_change;
+
+  cMutexLock lock(&m_Mutex);
+
+//  INFOLOG("----- seek to time: %ld", time);
+
+  // rescale to 90khz
+  time = cTSStream::Rescale(time, 90000, DVD_TIME_BASE);
+
+  m_VideoBuffer->GetPositions(&pos, &pos_min, &pos_max);
+
+//  INFOLOG("----- seek to time: %ld", time);
+//  INFOLOG("------pos: %ld, pos min: %ld, pos max: %ld", pos, pos_min, pos_max);
+
+  if (!GetTimeAtPos(&pos_min, &ts_min))
+  {
+    ResetParsers();
+    m_WaitIFrame = true;
+    return false;
+  }
+
+//  INFOLOG("----time at min: %ld", ts_min);
+
+  if (ts_min >= time)
+  {
+    m_VideoBuffer->SetPos(pos_min);
+    ResetParsers();
+    m_WaitIFrame = true;
+    return true;
+  }
+
+  int64_t timecur;
+  GetTimeAtPos(&pos, &timecur);
+
+  // get time at end of buffer
+  unsigned int step= 1024;
+  bool gotTime;
+  do
+  {
+    pos_max -= step;
+    gotTime = GetTimeAtPos(&pos_max, &ts_max);
+    step += step;
+  } while (!gotTime && pos_max >= step);
+
+  if (!gotTime)
+  {
+    ResetParsers();
+    m_WaitIFrame = true;
+    return false;
+  }
+
+  if (ts_max <= time)
+  {
+    ResetParsers();
+    m_WaitIFrame = true;
+    return true;
+  }
+
+//  INFOLOG(" - time in buffer: %ld", cTSStream::Rescale(ts_max-ts_min, DVD_TIME_BASE, 90000)/1000000);
+
+  // bisect seek
+  if(ts_min > ts_max)
+  {
+    ResetParsers();
+    m_WaitIFrame = true;
+    return false;
+  }
+  else if (ts_min == ts_max)
+  {
+    pos_limit = pos_min;
+  }
+  else
+    pos_limit = pos_max;
+
+  no_change = 0;
+  ts = time;
+  last_ts = 0;
+  while (pos_min < pos_limit)
+  {
+    if (no_change==0)
+    {
+      // interpolate position
+      pos = cTSStream::Rescale(time - ts_min, pos_max - pos_min, ts_max - ts_min)
+          + pos_min - (pos_max - pos_limit);
+    }
+    else if (no_change==1)
+    {
+      // bisection, if interpolation failed to change min or max pos last time
+      pos = (pos_min + pos_limit) >> 1;
+    }
+    else
+    {
+      // linear search if bisection failed
+      pos = pos_min;
+    }
+
+    // clamp calculated pos into boundaries
+    if( pos <= pos_min)
+      pos = pos_min + 1;
+    else if (pos > pos_limit)
+      pos = pos_limit;
+    start_pos = pos;
+
+    // get time stamp at pos
+    if (!GetTimeAtPos(&pos, &ts))
+    {
+      ResetParsers();
+      m_WaitIFrame = true;
+      return false;
+    }
+    pos = m_VideoBuffer->GetPosCur();
+
+    // determine method for next calculation of pos
+    if ((last_ts == ts) || (pos >= pos_max))
+      no_change++;
+    else
+      no_change=0;
+
+//    INFOLOG("--- pos: %ld, \t time: %ld, diff time: %ld", pos, ts, time-ts);
+
+    // 0.4 sec is close enough
+    if (abs(time - ts) <= 36000)
+    {
+      break;
+    }
+    // target is to the left
+    else if (time <= ts)
+    {
+      pos_limit = start_pos - 1;
+      pos_max = pos;
+      ts_max = ts;
+    }
+    // target is to the right
+    if (time >= ts)
+    {
+      pos_min = pos;
+      ts_min = ts;
+    }
+    last_ts = ts;
+  }
+
+//  INFOLOG("----pos found: %ld", pos);
+//  INFOLOG("----time at pos: %ld, diff time: %ld", ts, cTSStream::Rescale(timecur-ts, DVD_TIME_BASE, 90000));
+
+  m_VideoBuffer->SetPos(pos);
+
+  ResetParsers();
+  m_WaitIFrame = true;
+  return true;
+}
+
 cTSStream *cVNSIDemuxer::GetFirstStream()
 {
   m_StreamsIterator = m_Streams.begin();
@@ -152,6 +315,14 @@ cTSStream *cVNSIDemuxer::FindStream(int Pid)
   return NULL;
 }
 
+void cVNSIDemuxer::ResetParsers()
+{
+  for (std::list<cTSStream*>::iterator it = m_Streams.begin(); it != m_Streams.end(); ++it)
+  {
+    (*it)->ResetParser();
+  }
+}
+
 void cVNSIDemuxer::AddStreamInfo(sStreamInfo &stream)
 {
   m_StreamInfos.push_back(stream);
@@ -385,3 +556,25 @@ void cVNSIDemuxer::SetChannelPids(cChannel *channel, cPatPmtParser *patPmtParser
                    Spids, SLangs,
                    Tpid);
 }
+
+bool cVNSIDemuxer::GetTimeAtPos(size_t *pos, int64_t *time)
+{
+  uint8_t *buf;
+  int len;
+  cTSStream *stream;
+  int ts_pid;
+
+  m_VideoBuffer->SetPos(*pos);
+  while (len = m_VideoBuffer->Read(&buf, TS_SIZE) == TS_SIZE)
+  {
+    ts_pid = TsPid(buf);
+    if (stream = FindStream(ts_pid))
+    {
+      if (stream->ReadTime(buf, time))
+      {
+        return true;
+      }
+    }
+  }
+  return false;
+}
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
index 8efd0ba..18a1af8 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
@@ -57,13 +57,16 @@ class cVNSIDemuxer
   cTSStream *GetNextStream();
   void Open(const cChannel &channel, cVideoBuffer *videoBuffer);
   void Close();
+  bool SeekTime(int64_t time);
 
 protected:
   bool EnsureParsers();
+  void ResetParsers();
   void SetChannelStreams(const cChannel *channel);
   void SetChannelPids(cChannel *channel, cPatPmtParser *patPmtParser);
   cTSStream *FindStream(int Pid);
   void AddStreamInfo(sStreamInfo &stream);
+  bool GetTimeAtPos(size_t *pos, int64_t *time);
   std::list<cTSStream*> m_Streams;
   std::list<cTSStream*>::iterator m_StreamsIterator;
   std::list<sStreamInfo> m_StreamInfos;
@@ -72,4 +75,5 @@ class cVNSIDemuxer
   int m_OldPmtVersion;
   bool m_WaitIFrame;
   cVideoBuffer *m_VideoBuffer;
+  cMutex m_Mutex;
 };
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
index 55f815e..ca5d8a9 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
@@ -46,14 +46,14 @@
 
 // --- cParser -------------------------------------------------
 
+bool cParser::m_Wrap = false;
+int cParser::m_NoOfWraps = 0;
+int cParser::m_ConfirmCount = 0;
+
 cParser::cParser(int pID, cTSStream *stream)
  : m_pID(pID)
 {
-  m_curPTS    = DVD_NOPTS_VALUE;
-  m_curDTS    = DVD_NOPTS_VALUE;
-  m_prevDTS   = DVD_NOPTS_VALUE;
   m_PesBuffer = NULL;
-  m_IsError = false;
   m_Stream = stream;
   m_IsVideo = false;
   m_PesBufferInitialSize = 1024;
@@ -66,7 +66,19 @@
     free(m_PesBuffer);
 }
 
-
+void cParser::Reset()
+{
+  m_curPTS    = DVD_NOPTS_VALUE;
+  m_curDTS    = DVD_NOPTS_VALUE;
+  m_prevDTS   = DVD_NOPTS_VALUE;
+  m_PesBufferPtr = 0;
+  m_PesParserPtr = 0;
+  m_firstPUSIseen = false;
+  m_PesNextFramePtr = 0;
+  m_FoundFrame = false;
+  m_PesPacketLength = 0;
+  m_IsError = false;
+}
 /*
  * Extract DTS and PTS and update current values in stream
  */
@@ -103,7 +115,37 @@ int cParser::ParsePESHeader(uint8_t *buf, size_t len)
     pts |= ((int64_t)(buf[11] & 0xFE)) << 14 ;
     pts |= ((int64_t) buf[12])         <<  7 ;
     pts |= ((int64_t)(buf[13] & 0xFE)) >>  1 ;
+
+    int64_t bit32and31 = pts >> 31;
+    if ((bit32and31 == 3) && !m_Wrap)
+    {
+      m_ConfirmCount++;
+      if (m_ConfirmCount >= 2)
+      {
+        m_Wrap = true;
+      }
+    }
+    else if ((bit32and31 == 1) && m_Wrap)
+    {
+      m_ConfirmCount++;
+      if (m_ConfirmCount >= 2)
+      {
+        m_Wrap = false;
+        m_NoOfWraps++;
+      }
+    }
+    else
+      m_ConfirmCount = 0;
+
     m_curPTS = pts;
+    if (m_Wrap && !(bit32and31))
+    {
+      m_curPTS += 1LL<<33;
+    }
+    if (m_NoOfWraps)
+    {
+      m_curPTS += ((int64_t)m_NoOfWraps<<33);
+    }
   }
   else
     return hdr_len;
@@ -121,6 +163,14 @@ int cParser::ParsePESHeader(uint8_t *buf, size_t len)
     dts |=  (int64_t)( buf[17]          <<  7 );
     dts |=  (int64_t)((buf[18] & 0xFE)  >>  1 );
     m_curDTS = dts;
+    if (m_Wrap && !(m_curDTS >> 31))
+    {
+      m_curDTS += 1LL<<33;
+    }
+    if (m_NoOfWraps)
+    {
+      m_curDTS += ((int64_t)m_NoOfWraps<<33);
+    }
   }
   else
     m_curDTS = m_curPTS;
@@ -284,16 +334,6 @@ inline bool cParser::IsValidStartCode(uint8_t *buf, int size)
   return false;
 }
 
-void cParser::Reset()
-{
-  m_PesBufferPtr = 0;
-  m_PesParserPtr = 0;
-  m_firstPUSIseen = false;
-  m_PesNextFramePtr = 0;
-  m_FoundFrame = false;
-  m_PesPacketLength = 0;
-}
-
 // --- cTSStream ----------------------------------------------------
 
 cTSStream::cTSStream(eStreamType type, int pid)
@@ -351,7 +391,7 @@ void cParser::Reset()
   }
 }
 
-bool cTSStream::ProcessTSPacket(uint8_t *data, sStreamPacket *pkt, bool iframe)
+bool cTSStream::ProcessTSPacket(uint8_t *data, sStreamPacket *pkt, int64_t *dts, bool iframe)
 {
   if (!data)
     return false;
@@ -364,6 +404,13 @@ bool cTSStream::ProcessTSPacket(uint8_t *data, sStreamPacket *pkt, bool iframe)
     return false;
 
   m_pesParser->AddPESPacket(data+TS_SIZE-payloadSize, payloadSize);
+  if (dts)
+  {
+    if (m_pesParser->m_curDTS == DVD_NOPTS_VALUE)
+      return false;
+    *dts = m_pesParser->m_curDTS;
+    return true;
+  }
   m_pesParser->Parse(pkt);
   if (iframe && !m_pesParser->IsVideo())
     return false;
@@ -377,22 +424,56 @@ bool cTSStream::ProcessTSPacket(uint8_t *data, sStreamPacket *pkt, bool iframe)
       dts = pts;
 
     // Rescale for XBMC
-    pkt->dts      = Rescale(dts);
-    pkt->pts      = Rescale(pts);
-    pkt->duration = Rescale(pkt->duration);
+    pkt->dts      = Rescale(dts, DVD_TIME_BASE, 90000);
+    pkt->pts      = Rescale(pts, DVD_TIME_BASE, 90000);
+    pkt->duration = Rescale(pkt->duration, DVD_TIME_BASE, 90000);
     return true;
   }
 
   return false;
 }
 
-int64_t cTSStream::Rescale(int64_t a)
+bool cTSStream::ReadTime(uint8_t *data, int64_t *dts)
+{
+  if (!data)
+    return false;
+
+  if (!m_pesParser)
+    return false;
+
+  int payloadSize = m_pesParser->ParsePacketHeader(data);
+  if (payloadSize < 0)
+    return false;
+
+  if (m_pesParser->m_IsPusi)
+  {
+    data += TS_SIZE-payloadSize;
+    if (m_pesParser->IsValidStartCode(data, payloadSize))
+    {
+      m_pesParser->m_curDTS = DVD_NOPTS_VALUE;
+      m_pesParser->ParsePESHeader(data, payloadSize);
+      if (m_pesParser->m_curDTS != DVD_NOPTS_VALUE)
+      {
+        *dts = m_pesParser->m_curDTS;
+        return true;
+      }
+    }
+  }
+  return false;
+}
+
+void cTSStream::ResetParser()
+{
+  if (m_pesParser)
+    m_pesParser->Reset();
+}
+
+int64_t cTSStream::Rescale(int64_t a, int64_t b, int64_t c)
 {
-  uint64_t b = DVD_TIME_BASE;
-  uint64_t c = 90000;
   uint64_t r = c/2;
 
-  if (b<=INT_MAX && c<=INT_MAX){
+  if (b<=INT_MAX && c<=INT_MAX)
+  {
     if (a<=INT_MAX)
       return (a * b + r)/c;
     else
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
index f42320f..3e1acbd 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
@@ -208,18 +208,23 @@ struct sStreamPacket
 
 class cParser
 {
+friend class cTSStream;
 public:
   cParser(int pID, cTSStream *stream);
   virtual ~cParser();
 
   bool AddPESPacket(uint8_t *data, int size);
   virtual void Parse(sStreamPacket *pkt) = 0;
-  void ClearFrame() {m_PesBufferPtr = 0;}
+//  void ClearFrame() {m_PesBufferPtr = 0;}
   int ParsePacketHeader(uint8_t *data);
   int ParsePESHeader(uint8_t *buf, size_t len);
   virtual void Reset();
   bool IsVideo() {return m_IsVideo; }
 
+  static bool m_Wrap;
+  static int m_NoOfWraps;
+  static int m_ConfirmCount;
+
 protected:
   virtual bool IsValidStartCode(uint8_t *buf, int size);
 
@@ -280,7 +285,9 @@ class cTSStream
   cTSStream(eStreamType type, int pid);
   virtual ~cTSStream();
 
-  bool ProcessTSPacket(uint8_t *data, sStreamPacket *pkt, bool iframe);
+  bool ProcessTSPacket(uint8_t *data, sStreamPacket *pkt, int64_t *dts, bool iframe);
+  bool ReadTime(uint8_t *data, int64_t *dts);
+  void ResetParser();
 
   void SetLanguage(const char *language);
   const char *GetLanguage() { return m_language; }
@@ -302,7 +309,7 @@ class cTSStream
   uint16_t CompositionPageId() const { return m_compositionPageId; }
   uint16_t AncillaryPageId() const { return m_ancillaryPageId; }
 
-  int64_t Rescale(int64_t a);
+  static int64_t Rescale(int64_t a, int64_t b, int64_t c);
 };
 
 #endif // VNSI_DEMUXER_H
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.c
index 59620f1..ba525b4 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.c
@@ -97,7 +97,7 @@ void cParserMPEG2Video::Parse(sStreamPacket *pkt)
   {
     if (!m_NeedSPS && !m_NeedIFrame)
     {
-      int fpsScale = m_Stream->Rescale(m_FrameDuration);
+      int fpsScale = m_Stream->Rescale(m_FrameDuration, DVD_TIME_BASE, 90000);
       bool streamChange = m_Stream->SetVideoInformation(fpsScale,DVD_TIME_BASE, m_Height, m_Width, m_Dar);
 
       pkt->id       = m_pID;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
index cf96be9..1a17c70 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
@@ -106,7 +106,7 @@ void cParserH264::Parse(sStreamPacket *pkt)
 //      int fpsScale = DVD_TIME_BASE / m_FPS;
       if (m_FpsScale == 0)
       {
-        m_FpsScale = m_Stream->Rescale(m_curDTS - m_prevDTS);
+        m_FpsScale = m_Stream->Rescale(m_curDTS - m_prevDTS, DVD_TIME_BASE, 90000);
       }
       bool streamChange = m_Stream->SetVideoInformation(m_FpsScale,DVD_TIME_BASE, m_Height, m_Width, DAR);
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/requestpacket.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/requestpacket.c
index cb61e6b..312a5b5 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/requestpacket.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/requestpacket.c
@@ -102,6 +102,16 @@ uint64_t cRequestPacket::extract_U64()
   return ull;
 }
 
+int64_t cRequestPacket::extract_S64()
+{
+  if ((packetPos + sizeof(int64_t)) > userDataLength) return 0;
+  int64_t ll;
+  memcpy(&ll, &userData[packetPos], sizeof(int64_t));
+  ll = __be64_to_cpu(ll);
+  packetPos += sizeof(int64_t);
+  return ll;
+}
+
 double cRequestPacket::extract_Double()
 {
   if ((packetPos + sizeof(uint64_t)) > userDataLength) return 0;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/requestpacket.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/requestpacket.h
index 4e3704d..44fab53 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/requestpacket.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/requestpacket.h
@@ -46,6 +46,7 @@ class cRequestPacket
   uint8_t   extract_U8();
   uint32_t  extract_U32();
   uint64_t  extract_U64();
+  int64_t   extract_S64();
   int32_t   extract_S32();
   double    extract_Double();
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c
index c49d300..080840a 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c
@@ -19,13 +19,25 @@
 */
 
 #include "setup.h"
+#include "vnsicommand.h"
 
 int PmtTimeout = 5;
+int TimeshiftMode = 0;
+int TimeshiftBufferSize = 5;
 
 cMenuSetupVNSI::cMenuSetupVNSI(void)
 {
   newPmtTimeout = PmtTimeout;
   Add(new cMenuEditIntItem( tr("PMT Timeout (0-10)"), &newPmtTimeout));
+
+  timeshiftModesTexts[0] = tr("Off");
+  timeshiftModesTexts[1] = tr("RAM");
+  timeshiftModesTexts[2] = tr("File");
+  newTimeshiftMode = TimeshiftMode;
+  Add(new cMenuEditStraItem( tr("Time Shift Mode"), &newTimeshiftMode, 2, timeshiftModesTexts));
+
+  newTimeshiftBufferSize = TimeshiftBufferSize;
+  Add(new cMenuEditIntItem( tr("Time Shift Buffersize (1-20) x 100MB"), &newTimeshiftBufferSize));
 }
 
 void cMenuSetupVNSI::Store(void)
@@ -33,4 +45,12 @@ void cMenuSetupVNSI::Store(void)
   if (newPmtTimeout > 10 || newPmtTimeout < 0)
     newPmtTimeout = 2;
   SetupStore(CONFNAME_PMTTIMEOUT, PmtTimeout = newPmtTimeout);
+
+  SetupStore(CONFNAME_TIMESHIFT, TimeshiftMode = newTimeshiftMode);
+
+  if (newTimeshiftBufferSize > 20)
+    newTimeshiftBufferSize = 20;
+  else if (newTimeshiftBufferSize < 1)
+    newTimeshiftBufferSize = 1;
+  SetupStore(CONFNAME_TIMESHIFTBUFFERSIZE, TimeshiftBufferSize = newTimeshiftBufferSize);
 }
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.h
index 36d0f7c..18c2b98 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.h
@@ -23,12 +23,13 @@
 
 #include <vdr/plugin.h>
 
-#define CONFNAME_PMTTIMEOUT "PmtTimeout"
-
 class cMenuSetupVNSI : public cMenuSetupPage
 {
 private:
   int newPmtTimeout;
+  int newTimeshiftMode;
+  const char *timeshiftModesTexts[3];
+  int newTimeshiftBufferSize;
 protected:
   virtual void Store(void);
 public:
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
index 66ceba0..5f3c875 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
@@ -109,9 +109,10 @@ void cLiveStreamer::Action(void)
         sendSignalInfo();
       }
     }
-    else
+    else if (ret < 0)
     {
       // no data
+      usleep(10000);
       if(m_last_tick.Elapsed() >= (uint64_t)(m_scanTimeout*1000))
       {
         INFOLOG("No Signal");
@@ -481,3 +482,9 @@ void cLiveStreamer::sendStreamStatus()
   m_Socket->write(resp->getPtr(), resp->getLen());
   delete resp;
 }
+
+bool cLiveStreamer::SeekTime(int64_t time)
+{
+  bool ret = m_Demuxer.SeekTime(time);
+  return ret;
+}
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h
index afcd7c6..e4f879d 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h
@@ -90,6 +90,7 @@ class cLiveStreamer : public cThread
   bool IsStarting() { return m_startup; }
   bool IsAudioOnly() { return m_IsAudioOnly; }
   bool IsMPEGPS() { return m_IsMPEGPS; }
+  bool SeekTime(int64_t time);
 };
 
 #endif  // VNSI_RECEIVER_H
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
index 1ee9677..8131d2a 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
@@ -19,6 +19,8 @@
  */
 
 #include "videobuffer.h"
+#include "config.h"
+#include "vnsi.h"
 
 #include <vdr/ringbuffer.h>
 #include <vdr/remux.h>
@@ -27,8 +29,8 @@ class cVideoBufferSimple : public cVideoBuffer
 {
 friend class cVideoBuffer;
 public:
-  virtual void Put(uint8_t *buf, int size);
-  virtual int Read(uint8_t **buf, int size);
+  virtual void Put(uint8_t *buf, unsigned int size);
+  virtual int Read(uint8_t **buf, unsigned int size);
 
 protected:
   cVideoBufferSimple();
@@ -50,12 +52,12 @@ class cVideoBufferSimple : public cVideoBuffer
     delete m_Buffer;
 }
 
-void cVideoBufferSimple::Put(uint8_t *buf, int size)
+void cVideoBufferSimple::Put(uint8_t *buf, unsigned int size)
 {
   m_Buffer->Put(buf, size);
 }
 
-int cVideoBufferSimple::Read(uint8_t **buf, int size)
+int cVideoBufferSimple::Read(uint8_t **buf, unsigned int size)
 {
   int  readBytes;
   if (m_BytesConsumed)
@@ -92,6 +94,203 @@ int cVideoBufferSimple::Read(uint8_t **buf, int size)
 
 //-----------------------------------------------------------------------------
 
+#define MARGIN 40000
+
+class cVideoBufferRAM : public cVideoBuffer
+{
+friend class cVideoBuffer;
+public:
+  virtual void Put(uint8_t *buf, unsigned int size);
+  virtual int Read(uint8_t **buf, unsigned int size);
+  virtual size_t GetPosMin();
+  virtual size_t GetPosMax();
+  virtual size_t GetPosCur();
+  virtual void GetPositions(size_t *cur, size_t *min, size_t *max);
+  virtual void SetPos(size_t pos);
+
+protected:
+  cVideoBufferRAM();
+  virtual ~cVideoBufferRAM();
+  bool Init();
+  size_t Available();
+  uint8_t *m_Buffer;
+  uint8_t *m_BufferPtr;
+  size_t m_BufferSize;
+  size_t m_WritePtr;
+  size_t m_ReadPtr;
+  bool m_BufferFull;
+  unsigned int m_Margin;
+  unsigned int m_BytesConsumed;
+  cMutex m_Mutex;
+};
+
+cVideoBufferRAM::cVideoBufferRAM()
+{
+  m_Buffer = 0;
+  m_Margin = TS_SIZE*2;
+  m_BufferFull = false;
+  m_ReadPtr = 0;
+  m_WritePtr = 0;
+  m_BytesConsumed = 0;
+}
+
+cVideoBufferRAM::~cVideoBufferRAM()
+{
+  if (m_Buffer)
+    free(m_Buffer);
+}
+
+bool cVideoBufferRAM::Init()
+{
+  m_BufferSize = (size_t)TimeshiftBufferSize*100*1000*1000;
+  INFOLOG("allocated timeshift buffer with size: %ld", m_BufferSize);
+  m_Buffer = (uint8_t*)malloc(m_BufferSize + m_Margin);
+  m_BufferPtr = m_Buffer + m_Margin;
+  if (!m_Buffer)
+    return false;
+  else
+    return true;
+}
+
+size_t cVideoBufferRAM::GetPosMin()
+{
+  size_t ret;
+  if (!m_BufferFull)
+    return 0;
+
+  ret = m_WritePtr + MARGIN * 2;
+  if (ret >= m_BufferSize)
+    ret -= m_BufferSize;
+
+  return ret;
+}
+
+size_t cVideoBufferRAM::GetPosMax()
+{
+   size_t ret = m_WritePtr;
+   if (ret < GetPosMin())
+     ret += m_BufferSize;
+   return ret;
+}
+
+size_t cVideoBufferRAM::GetPosCur()
+{
+  size_t ret = m_ReadPtr;
+  if (ret < GetPosMin())
+    ret += m_BufferSize;
+  return ret;
+}
+
+void cVideoBufferRAM::GetPositions(size_t *cur, size_t *min, size_t *max)
+{
+  cMutexLock lock(&m_Mutex);
+
+  *cur = GetPosCur();
+  *min = GetPosMin();
+  *min = (*min > *cur) ? *cur : *min;
+  *max = GetPosMax();
+}
+
+void cVideoBufferRAM::SetPos(size_t pos)
+{
+  cMutexLock lock(&m_Mutex);
+
+  m_ReadPtr = pos;
+  if (m_ReadPtr >= m_BufferSize)
+    m_ReadPtr -= m_BufferSize;
+  m_BytesConsumed = 0;
+}
+
+size_t cVideoBufferRAM::Available()
+{
+  size_t ret;
+  if (m_ReadPtr <= m_WritePtr)
+    ret = m_WritePtr - m_ReadPtr;
+  else
+    ret = m_BufferSize - (m_ReadPtr - m_WritePtr);
+
+  return ret;
+}
+
+void cVideoBufferRAM::Put(uint8_t *buf, unsigned int size)
+{
+  cMutexLock lock(&m_Mutex);
+
+  if (Available() + MARGIN >= m_BufferSize)
+  {
+    ERRORLOG("------------- skipping data");
+    return;
+  }
+
+  if ((m_BufferSize - m_WritePtr) <= size)
+  {
+    int bytes = m_BufferSize - m_WritePtr;
+    memcpy(m_BufferPtr+m_WritePtr, buf, bytes);
+    size -= bytes;
+    m_WritePtr = 0;
+  }
+
+  memcpy(m_BufferPtr+m_WritePtr, buf, size);
+  m_WritePtr += size;
+
+  if (!m_BufferFull)
+  {
+    if ((m_WritePtr + 2*MARGIN) > m_BufferSize)
+      m_BufferFull = true;
+  }
+}
+
+int cVideoBufferRAM::Read(uint8_t **buf, unsigned int size)
+{
+  cMutexLock lock(&m_Mutex);
+
+  // move read pointer
+  if (m_BytesConsumed)
+  {
+    m_ReadPtr += m_BytesConsumed;
+    if (m_ReadPtr >= m_BufferSize)
+      m_ReadPtr -= m_BufferSize;
+  }
+  m_BytesConsumed = 0;
+
+  // check if we have anything to read
+  size_t readBytes = Available();
+  if (readBytes < m_Margin)
+  {
+    return 0;
+  }
+
+  // if we are close to end, copy margin to front
+  if (m_ReadPtr > (m_BufferSize - m_Margin))
+  {
+    int bytesToCopy = m_BufferSize - m_ReadPtr;
+    memmove(m_Buffer + (m_Margin - bytesToCopy), m_Buffer + m_ReadPtr, bytesToCopy);
+    *buf = m_Buffer + (m_Margin - bytesToCopy);
+  }
+  else
+    *buf = m_BufferPtr + m_ReadPtr;
+
+  // Make sure we are looking at a TS packet
+  while (readBytes > TS_SIZE)
+  {
+    if ((*buf)[0] == TS_SYNC_BYTE && (*buf)[TS_SIZE] == TS_SYNC_BYTE)
+      break;
+    m_BytesConsumed++;
+    (*buf)++;
+    readBytes--;
+  }
+
+  if ((*buf)[0] != TS_SYNC_BYTE)
+  {
+    return 0;
+  }
+
+  m_BytesConsumed += TS_SIZE;
+  return TS_SIZE;
+}
+
+//-----------------------------------------------------------------------------
+
 cVideoBuffer::cVideoBuffer()
 {
 }
@@ -102,6 +301,24 @@ int cVideoBufferSimple::Read(uint8_t **buf, int size)
 
 cVideoBuffer* cVideoBuffer::Create()
 {
-  cVideoBuffer *buffer = new cVideoBufferSimple();
-  return buffer;
+  // no time shift
+  if (TimeshiftMode == 0)
+  {
+    cVideoBufferSimple *buffer = new cVideoBufferSimple();
+    return buffer;
+  }
+  // buffer in ram
+  else if (TimeshiftMode == 1)
+  {
+    cVideoBufferRAM *buffer = new cVideoBufferRAM();
+    if (!buffer->Init())
+    {
+      delete buffer;
+      return NULL;
+    }
+    else
+      return buffer;
+  }
+  else
+    return NULL;
 }
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h
index 881c3fc..5f5041e 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h
@@ -21,14 +21,20 @@
 #pragma once
 
 #include <stdint.h>
+#include <stdlib.h>
 
 class cVideoBuffer
 {
 public:
   virtual ~cVideoBuffer();
   static cVideoBuffer* Create();
-  virtual void Put(uint8_t *buf, int size) = 0;
-  virtual int Read(uint8_t **buf, int size) = 0;
+  virtual void Put(uint8_t *buf, unsigned int size) = 0;
+  virtual int Read(uint8_t **buf, unsigned int size) = 0;
+  virtual size_t GetPosMin() { return 0; };
+  virtual size_t GetPosMax() { return 0; };
+  virtual size_t GetPosCur() { return 0; };
+  virtual void GetPositions(size_t *cur, size_t *min,size_t *max) {};
+  virtual void SetPos(size_t pos) {};
 protected:
   cVideoBuffer();
 };
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.c
index 1a62f61..1846406 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.c
@@ -26,11 +26,15 @@
 #include <getopt.h>
 #include <vdr/plugin.h>
 #include "vnsi.h"
+#include "vnsicommand.h"
 #include "setup.h"
 
+cPluginVNSIServer* cPluginVNSIServer::VNSIServer = NULL;
+
 cPluginVNSIServer::cPluginVNSIServer(void)
 {
   Server = NULL;
+  VNSIServer = NULL;
 }
 
 cPluginVNSIServer::~cPluginVNSIServer()
@@ -67,6 +71,8 @@ bool cPluginVNSIServer::Initialize(void)
 {
   // Initialize any background activities the plugin shall perform.
   VNSIServerConfig.ConfigDirectory = ConfigDirectory(PLUGIN_NAME_I18N);
+
+  VNSIServer = this;
   return true;
 }
 
@@ -117,6 +123,10 @@ bool cPluginVNSIServer::SetupParse(const char *Name, const char *Value)
   // Parse your own setup parameters and store their values.
   if (!strcasecmp(Name, CONFNAME_PMTTIMEOUT))
     PmtTimeout = atoi(Value);
+  else if (!strcasecmp(Name, CONFNAME_TIMESHIFT))
+    TimeshiftMode = atoi(Value);
+  else if (!strcasecmp(Name, CONFNAME_TIMESHIFTBUFFERSIZE))
+    TimeshiftBufferSize = atoi(Value);
   else
     return false;
   return true;
@@ -140,4 +150,13 @@ cString cPluginVNSIServer::SVDRPCommand(const char *Command, const char *Option,
   return NULL;
 }
 
+void cPluginVNSIServer::StoreSetup(const char *Name, int Value)
+{
+  if (VNSIServer)
+  {
+    VNSIServer->SetupStore(Name, Value);
+    Setup.Save();
+  }
+}
+
 VDRPLUGINCREATOR(cPluginVNSIServer); // Don't touch this!
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.h
index 94461a4..22664c4 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.h
@@ -31,10 +31,13 @@
 static const char *DESCRIPTION    = "VDR-Network-Streaming-Interface (VNSI) Server";
 
 extern int PmtTimeout;
+extern int TimeshiftMode;
+extern int TimeshiftBufferSize;
 
 class cPluginVNSIServer : public cPlugin {
 private:
   cVNSIServer *Server;
+  static cPluginVNSIServer *VNSIServer;
 
 public:
   cPluginVNSIServer(void);
@@ -57,5 +60,7 @@ class cPluginVNSIServer : public cPlugin {
   virtual bool Service(const char *Id, void *Data = NULL);
   virtual const char **SVDRPHelpPages(void);
   virtual cString SVDRPCommand(const char *Command, const char *Option, int &ReplyCode);
+
+  static void StoreSetup(const char *Name, int Value);
 };
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
index b351ef0..cc80aeb 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
@@ -35,6 +35,7 @@
 #include <vdr/menu.h>
 #include <vdr/device.h>
 
+#include "vnsi.h"
 #include "config.h"
 #include "vnsicommand.h"
 #include "recordingscache.h"
@@ -411,6 +412,13 @@ bool cVNSIClient::processRequest(cRequestPacket* req)
       result = process_Ping();
       break;
 
+    case VNSI_GETSETUP:
+      result = process_GetSetup();
+      break;
+
+    case VNSI_STORESETUP:
+      result = process_StoreSetup();
+      break;
 
     /** OPCODE 20 - 39: VNSI network functions for live streaming */
     case VNSI_CHANNELSTREAM_OPEN:
@@ -421,6 +429,9 @@ bool cVNSIClient::processRequest(cRequestPacket* req)
       result = processChannelStream_Close();
       break;
 
+    case VNSI_CHANNELSTREAM_SEEK:
+      result = processChannelStream_Seek();
+      break;
 
     /** OPCODE 40 - 59: VNSI network functions for recording streaming */
     case VNSI_RECSTREAM_OPEN:
@@ -637,6 +648,46 @@ bool cVNSIClient::process_Ping() /* OPCODE 7 */
   return true;
 }
 
+bool cVNSIClient::process_GetSetup() /* OPCODE 8 */
+{
+  char* name = m_req->extract_String();
+  if (!strcasecmp(name, CONFNAME_PMTTIMEOUT))
+    m_resp->add_U32(PmtTimeout);
+  else if (!strcasecmp(name, CONFNAME_TIMESHIFT))
+    m_resp->add_U32(TimeshiftMode);
+  else if (!strcasecmp(name, CONFNAME_TIMESHIFTBUFFERSIZE))
+    m_resp->add_U32(TimeshiftBufferSize);
+
+  m_resp->finalise();
+  m_socket.write(m_resp->getPtr(), m_resp->getLen());
+  return true;
+}
+
+bool cVNSIClient::process_StoreSetup() /* OPCODE 9 */
+{
+  char* name = m_req->extract_String();
+
+  if (!strcasecmp(name, CONFNAME_PMTTIMEOUT))
+  {
+    int value = m_req->extract_U32();
+    cPluginVNSIServer::StoreSetup(CONFNAME_PMTTIMEOUT, value);
+  }
+  else if (!strcasecmp(name, CONFNAME_TIMESHIFT))
+  {
+    int value = m_req->extract_U32();
+    cPluginVNSIServer::StoreSetup(CONFNAME_TIMESHIFT, value);
+  }
+  else if (!strcasecmp(name, CONFNAME_TIMESHIFTBUFFERSIZE))
+  {
+    int value = m_req->extract_U32();
+    cPluginVNSIServer::StoreSetup(CONFNAME_TIMESHIFTBUFFERSIZE, value);
+  }
+
+  m_resp->add_U32(VNSI_RET_OK);
+  m_resp->finalise();
+  m_socket.write(m_resp->getPtr(), m_resp->getLen());
+  return true;
+}
 
 /** OPCODE 20 - 39: VNSI network functions for live streaming */
 
@@ -694,6 +745,23 @@ bool cVNSIClient::processChannelStream_Close() /* OPCODE 21 */
   return true;
 }
 
+bool cVNSIClient::processChannelStream_Seek() /* OPCODE 22 */
+{
+  if (m_isStreaming && m_Streamer)
+  {
+    int64_t time = m_req->extract_S64();
+    if (m_Streamer->SeekTime(time))
+      m_resp->add_U32(VNSI_RET_OK);
+    else
+      m_resp->add_U32(VNSI_RET_ERROR);
+  }
+  else
+    m_resp->add_U32(VNSI_RET_ERROR);
+
+  m_resp->finalise();
+  m_socket.write(m_resp->getPtr(), m_resp->getLen());
+  return true;
+}
 
 /** OPCODE 40 - 59: VNSI network functions for recording streaming */
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.h
index b23117f..c1611bb 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.h
@@ -111,9 +111,12 @@ class cVNSIClient : public cThread
   bool process_GetTime();
   bool process_EnableStatusInterface();
   bool process_Ping();
+  bool process_GetSetup();
+  bool process_StoreSetup();
 
   bool processChannelStream_Open();
   bool processChannelStream_Close();
+  bool processChannelStream_Seek();
 
   bool processRecStream_Open();
   bool processRecStream_Close();
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h
index a2b8000..b828236 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h
@@ -40,15 +40,22 @@
 
 /** Response packets operation codes */
 
+#define CONFNAME_PMTTIMEOUT "PmtTimeout"
+#define CONFNAME_TIMESHIFT "Timeshift"
+#define CONFNAME_TIMESHIFTBUFFERSIZE "TimeshiftBufferSize"
+
 /* OPCODE 1 - 19: VNSI network functions for general purpose */
 #define VNSI_LOGIN                 1
 #define VNSI_GETTIME               2
 #define VNSI_ENABLESTATUSINTERFACE 3
 #define VNSI_PING                  7
+#define VNSI_GETSETUP              8
+#define VNSI_STORESETUP            9
 
 /* OPCODE 20 - 39: VNSI network functions for live streaming */
-#define VNSI_CHANNELSTREAM_OPEN    20
-#define VNSI_CHANNELSTREAM_CLOSE   21
+#define VNSI_CHANNELSTREAM_OPEN     20
+#define VNSI_CHANNELSTREAM_CLOSE    21
+#define VNSI_CHANNELSTREAM_SEEK     22
 
 /* OPCODE 40 - 59: VNSI network functions for recording streaming */
 #define VNSI_RECSTREAM_OPEN        40
-- 
1.8.1.6


From c8bc726d90bb796a8ce583ac9aecf63e304d239d Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Thu, 17 Jan 2013 18:12:43 +0100
Subject: [PATCH 09/63] vnsi: timeshift support

---
 addons/pvr.vdr.vnsi/src/VNSIDemux.cpp     | 53 +++++++++++++++++++++++++++++--
 addons/pvr.vdr.vnsi/src/VNSIDemux.h       |  3 ++
 addons/pvr.vdr.vnsi/src/client.cpp        | 32 ++++++++++++++++---
 addons/pvr.vdr.vnsi/src/requestpacket.cpp | 14 ++++++++
 addons/pvr.vdr.vnsi/src/requestpacket.h   |  1 +
 addons/pvr.vdr.vnsi/src/vnsicommand.h     | 11 +++++--
 6 files changed, 105 insertions(+), 9 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/src/VNSIDemux.cpp b/addons/pvr.vdr.vnsi/src/VNSIDemux.cpp
index 1cf0316..215e22a 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIDemux.cpp
+++ b/addons/pvr.vdr.vnsi/src/VNSIDemux.cpp
@@ -154,6 +154,7 @@ DemuxPacket* cVNSIDemux::Read()
       p->pts        = (double)resp->getPTS() * DVD_TIME_BASE / 1000000;
       p->iStreamId  = iStreamId;
       delete resp;
+
       return p;
     }
     else
@@ -166,12 +167,60 @@ DemuxPacket* cVNSIDemux::Read()
   return PVR->AllocateDemuxPacket(0);
 }
 
+bool cVNSIDemux::SeekTime(int time, bool backwards, double *startpts)
+{
+  cRequestPacket vrp;
+
+  XBMC->Log(LOG_NOTICE,"----------- seek pts1: %ld", time);
+  int64_t seek_pts = (int64_t)time * 1000;
+  XBMC->Log(LOG_NOTICE,"----------- seek pts: %ld", seek_pts);
+  if (startpts)
+    *startpts = seek_pts;
+
+  if (!vrp.init(VNSI_CHANNELSTREAM_SEEK) ||
+      !vrp.add_S64(seek_pts) ||
+      !vrp.add_U8(backwards))
+  {
+    XBMC->Log(LOG_ERROR, "%s - failed to seek1", __FUNCTION__);
+    return false;
+  }
+  cResponsePacket *resp = ReadResult(&vrp);
+  if (!resp)
+  {
+    XBMC->Log(LOG_ERROR, "%s - failed to seek2", __FUNCTION__);
+    return false;
+  }
+  uint32_t retCode = resp->extract_U32();
+  delete resp;
+
+  if (retCode == VNSI_RET_OK)
+    return true;
+  else
+    return false;
+}
+
 bool cVNSIDemux::SwitchChannel(const PVR_CHANNEL &channelinfo)
 {
   XBMC->Log(LOG_DEBUG, "changing to channel %d", channelinfo.iChannelNumber);
 
-  cRequestPacket vrp;
-  if (!vrp.init(VNSI_CHANNELSTREAM_OPEN) || !vrp.add_U32(channelinfo.iUniqueId) || !ReadSuccess(&vrp))
+  cRequestPacket vrp1;
+
+  if (!vrp1.init(VNSI_GETSETUP) || !vrp1.add_String(CONFNAME_TIMESHIFT))
+  {
+    XBMC->Log(LOG_ERROR, "%s - failed to get timeshift mode", __FUNCTION__);
+    return false;
+  }
+  cResponsePacket *resp = ReadResult(&vrp1);
+  if (!resp)
+  {
+    XBMC->Log(LOG_ERROR, "%s - failed to get timeshift mode", __FUNCTION__);
+    return false;
+  }
+  m_bTimeshift = resp->extract_U32();
+  delete resp;
+
+  cRequestPacket vrp2;
+  if (!vrp2.init(VNSI_CHANNELSTREAM_OPEN) || !vrp2.add_U32(channelinfo.iUniqueId) || !ReadSuccess(&vrp2))
   {
     XBMC->Log(LOG_ERROR, "%s - failed to set channel", __FUNCTION__);
     return false;
diff --git a/addons/pvr.vdr.vnsi/src/VNSIDemux.h b/addons/pvr.vdr.vnsi/src/VNSIDemux.h
index bb80bef..f05ea98 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIDemux.h
+++ b/addons/pvr.vdr.vnsi/src/VNSIDemux.h
@@ -51,6 +51,8 @@ class cVNSIDemux : public cVNSISession
   bool SwitchChannel(const PVR_CHANNEL &channelinfo);
   int CurrentChannel() { return m_channelinfo.iChannelNumber; }
   bool GetSignalStatus(PVR_SIGNAL_STATUS &qualityinfo);
+  bool IsTimeshift() { return m_bTimeshift; }
+  bool SeekTime(int time, bool backwards, double *startpts);
 
 protected:
 
@@ -65,4 +67,5 @@ class cVNSIDemux : public cVNSISession
   PVR_CHANNEL           m_channelinfo;
   SQuality              m_Quality;
   std::map<int, unsigned int> m_StreamIndex;
+  bool m_bTimeshift;
 };
diff --git a/addons/pvr.vdr.vnsi/src/client.cpp b/addons/pvr.vdr.vnsi/src/client.cpp
index bfb9157..1929525 100644
--- a/addons/pvr.vdr.vnsi/src/client.cpp
+++ b/addons/pvr.vdr.vnsi/src/client.cpp
@@ -596,6 +596,32 @@ PVR_ERROR SignalStatus(PVR_SIGNAL_STATUS &signalStatus)
 
 }
 
+bool CanPauseStream(void)
+{
+  bool ret = false;
+  if (VNSIDemuxer)
+    ret = VNSIDemuxer->IsTimeshift();
+  return ret;
+}
+
+bool CanSeekStream(void)
+{
+  bool ret = false;
+  if (VNSIDemuxer)
+    ret = VNSIDemuxer->IsTimeshift();
+  return ret;
+}
+
+bool SeekTime(int time, bool backwards, double *startpts)
+{
+  bool ret = false;
+  if (VNSIDemuxer)
+    ret = VNSIDemuxer->SeekTime(time, backwards, startpts);
+  return ret;
+}
+
+void SetSpeed(int) {};
+void PauseStream(bool bPaused) {}
 
 /*******************************************/
 /** PVR Recording Stream Functions        **/
@@ -685,9 +711,5 @@ void DemuxFlush(void) {}
 int GetRecordingLastPlayedPosition(const PVR_RECORDING &recording) { return -1; }
 PVR_ERROR GetRecordingEdl(const PVR_RECORDING&, PVR_EDL_ENTRY[], int*) { return PVR_ERROR_NOT_IMPLEMENTED; };
 unsigned int GetChannelSwitchDelay(void) { return 0; }
-void PauseStream(bool bPaused) {}
-bool CanPauseStream(void) { return false; }
-bool CanSeekStream(void) { return false; }
-bool SeekTime(int,bool,double*) { return false; }
-void SetSpeed(int) {};
+
 }
diff --git a/addons/pvr.vdr.vnsi/src/requestpacket.cpp b/addons/pvr.vdr.vnsi/src/requestpacket.cpp
index 0f7fb96..b9a0466 100644
--- a/addons/pvr.vdr.vnsi/src/requestpacket.cpp
+++ b/addons/pvr.vdr.vnsi/src/requestpacket.cpp
@@ -153,6 +153,20 @@ bool cRequestPacket::add_U64(uint64_t ull)
   return true;
 }
 
+bool cRequestPacket::add_S64(int64_t ll)
+{
+  if (!checkExtend(sizeof(int64_t))) return false;
+  int64_t tmp = htonll(ll);
+  memcpy(&buffer[bufUsed], &tmp, sizeof(int64_t));
+  bufUsed += sizeof(int64_t);
+  if (!lengthSet)
+  {
+    uint32_t tmp = htonl(bufUsed - headerLength);
+    memcpy(&buffer[userDataLenPos], &tmp, sizeof(uint32_t));
+  }
+  return true;
+}
+
 bool cRequestPacket::checkExtend(uint32_t by)
 {
   if (lengthSet) return true;
diff --git a/addons/pvr.vdr.vnsi/src/requestpacket.h b/addons/pvr.vdr.vnsi/src/requestpacket.h
index e544b20..7d67c11 100644
--- a/addons/pvr.vdr.vnsi/src/requestpacket.h
+++ b/addons/pvr.vdr.vnsi/src/requestpacket.h
@@ -34,6 +34,7 @@ class cRequestPacket
     bool add_U32(uint32_t ul);
     bool add_S32(int32_t l);
     bool add_U64(uint64_t ull);
+    bool add_S64(int64_t ll);
 
     uint8_t* getPtr() { return buffer; }
     uint32_t getLen() { return bufUsed; }
diff --git a/addons/pvr.vdr.vnsi/src/vnsicommand.h b/addons/pvr.vdr.vnsi/src/vnsicommand.h
index 2ec7f53..2d19f20 100644
--- a/addons/pvr.vdr.vnsi/src/vnsicommand.h
+++ b/addons/pvr.vdr.vnsi/src/vnsicommand.h
@@ -36,15 +36,22 @@
 
 /** Response packets operation codes */
 
+#define CONFNAME_PMTTIMEOUT "PmtTimeout"
+#define CONFNAME_TIMESHIFT "Timeshift"
+#define CONFNAME_TIMESHIFTBUFFERSIZE "TimeshiftBufferSize"
+
 /* OPCODE 1 - 19: VNSI network functions for general purpose */
 #define VNSI_LOGIN                 1
 #define VNSI_GETTIME               2
 #define VNSI_ENABLESTATUSINTERFACE 3
 #define VNSI_PING                  7
+#define VNSI_GETSETUP              8
+#define VNSI_STORESETUP            9
 
 /* OPCODE 20 - 39: VNSI network functions for live streaming */
-#define VNSI_CHANNELSTREAM_OPEN    20
-#define VNSI_CHANNELSTREAM_CLOSE   21
+#define VNSI_CHANNELSTREAM_OPEN     20
+#define VNSI_CHANNELSTREAM_CLOSE    21
+#define VNSI_CHANNELSTREAM_SEEK     22
 
 /* OPCODE 40 - 59: VNSI network functions for recording streaming */
 #define VNSI_RECSTREAM_OPEN        40
-- 
1.8.1.6


From 3ccd3f93e35565f6558447fd63a7bfd767273679 Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Fri, 18 Jan 2013 11:44:17 +0100
Subject: [PATCH 10/63] vnsi: add settings page for setup

---
 .../addon/resources/language/English/strings.po    | 10 ++-
 .../resources/skins/skin.confluence/720p/Admin.xml | 38 +++++++++-
 addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp              | 83 +++++++++++++++++++++-
 addons/pvr.vdr.vnsi/src/VNSIAdmin.h                |  2 +
 4 files changed, 130 insertions(+), 3 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/addon/resources/language/English/strings.po b/addons/pvr.vdr.vnsi/addon/resources/language/English/strings.po
index 3ee034c..d1d4389 100644
--- a/addons/pvr.vdr.vnsi/addon/resources/language/English/strings.po
+++ b/addons/pvr.vdr.vnsi/addon/resources/language/English/strings.po
@@ -212,7 +212,7 @@ msgid "VDR OSD"
 msgstr ""
 
 msgctxt "#30101"
-msgid "Timeshift"
+msgid "Setup"
 msgstr ""
 
 msgctxt "#30102"
@@ -222,3 +222,11 @@ msgstr ""
 msgctxt "#30103"
 msgid "Select to control OSD"
 msgstr ""
+
+msgctxt "#30104"
+msgid "Timeshift Mode"
+msgstr ""
+
+msgctxt "#30105"
+msgid "Timeshift Buffer x100 MB"
+msgstr ""
\ No newline at end of file
diff --git a/addons/pvr.vdr.vnsi/addon/resources/skins/skin.confluence/720p/Admin.xml b/addons/pvr.vdr.vnsi/addon/resources/skins/skin.confluence/720p/Admin.xml
index 3e76deb..77a9582 100644
--- a/addons/pvr.vdr.vnsi/addon/resources/skins/skin.confluence/720p/Admin.xml
+++ b/addons/pvr.vdr.vnsi/addon/resources/skins/skin.confluence/720p/Admin.xml
@@ -91,7 +91,7 @@
 		 </item>
 		 <item id="2">
 		   <label>$ADDON[pvr.vdr.vnsi 30101]</label>
-		   <onclick>SetProperty(menu,timeshift)</onclick>
+		   <onclick>SetProperty(menu,setup)</onclick>
 		 </item>
         </content>
       </control>
@@ -151,6 +151,42 @@
             <height>515</height>
           </control>
 	    </control>
+	    <control type="group" id="20">
+	      <visible>StringCompare(Window.Property(menu),setup)</visible>
+		  <defaultcontrol always="true">21</defaultcontrol>
+		  <control type="spincontrolex" id="21">
+            <description>Source Type</description>
+            <posx>10</posx>
+            <posy>50</posy>
+            <width>770</width>
+            <height>40</height>
+            <font>font13</font>
+            <textcolor>grey2</textcolor>
+            <focusedcolor>white</focusedcolor>
+            <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
+            <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
+            <aligny>center</aligny>
+            <label>$ADDON[pvr.vdr.vnsi 30104]</label>
+            <onleft>10</onleft>
+			<ondown>22</ondown>
+        </control>
+	    <control type="spincontrolex" id="22">
+            <description>Source Type</description>
+            <posx>10</posx>
+            <posy>100</posy>
+            <width>770</width>
+            <height>40</height>
+            <font>font13</font>
+            <textcolor>grey2</textcolor>
+            <focusedcolor>white</focusedcolor>
+            <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
+            <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
+            <aligny>center</aligny>
+            <label>$ADDON[pvr.vdr.vnsi 30105]</label>
+            <onleft>10</onleft>
+			<onup>21</onup>
+        </control>
+	    </control>
       </control>
 	</control>
     <include>Clock</include>
diff --git a/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp b/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
index 3caac8f..ba9e000 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
+++ b/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
@@ -32,6 +32,8 @@
 #define CONTROL_RENDER_ADDON             9
 #define CONTROL_MENU                    10
 #define CONTROL_OSD_BUTTON              13
+#define CONTROL_SPIN_TIMESHIFT_MODE     21
+#define CONTROL_SPIN_TIMESHIFT_BUFFER   22
 
 #define ACTION_NONE                    0
 #define ACTION_MOVE_LEFT               1
@@ -477,6 +479,8 @@ bool cVNSIAdmin::Open(const std::string& hostname, int port, const char* name)
   m_window->DoModal();
 
   GUI->Control_releaseRendering(m_renderControl);
+  GUI->Control_releaseSpin(m_spinTimeshiftMode);
+  GUI->Control_releaseSpin(m_spinTimeshiftBuffer);
   GUI->Window_destroy(m_window);
   Close();
 
@@ -485,7 +489,32 @@ bool cVNSIAdmin::Open(const std::string& hostname, int port, const char* name)
 
 bool cVNSIAdmin::OnClick(int controlId)
 {
-  XBMC->Log(LOG_ERROR,"--------------- id: %d", controlId);
+  if (controlId == CONTROL_SPIN_TIMESHIFT_MODE)
+  {
+    int value = m_spinTimeshiftMode->GetValue();
+    cRequestPacket vrp;
+    if (!vrp.init(VNSI_STORESETUP) ||
+        !vrp.add_String(CONFNAME_TIMESHIFT) ||
+        !vrp.add_U32(value) ||
+        ReadSuccess(&vrp))
+    {
+      XBMC->Log(LOG_ERROR, "%s - failed to set timeshift mode", __FUNCTION__);
+    }
+    return true;
+  }
+  if (controlId == CONTROL_SPIN_TIMESHIFT_BUFFER)
+  {
+    int value = m_spinTimeshiftBuffer->GetValue();
+    cRequestPacket vrp;
+    if (!vrp.init(VNSI_STORESETUP) ||
+        !vrp.add_String(CONFNAME_TIMESHIFTBUFFERSIZE) ||
+        !vrp.add_U32(value) ||
+        ReadSuccess(&vrp))
+    {
+      XBMC->Log(LOG_ERROR, "%s - failed to set timeshift buffer", __FUNCTION__);
+    }
+    return true;
+  }
   return false;
 }
 
@@ -528,6 +557,58 @@ bool cVNSIAdmin::OnInit()
   vrp.add_U32(0);
   cVNSISession::TransmitMessage(&vrp);
 
+  // setup parameters
+  m_spinTimeshiftMode = GUI->Control_getSpin(m_window, CONTROL_SPIN_TIMESHIFT_MODE);
+  m_spinTimeshiftMode->Clear();
+  m_spinTimeshiftMode->AddLabel("OFF", 0);
+  m_spinTimeshiftMode->AddLabel("RAM", 1);
+  m_spinTimeshiftMode->AddLabel("FILE", 2);
+
+  {
+    cRequestPacket vrp;
+    if (!vrp.init(VNSI_GETSETUP) || !vrp.add_String(CONFNAME_TIMESHIFT))
+    {
+      XBMC->Log(LOG_ERROR, "%s - failed to get timeshift mode", __FUNCTION__);
+      return false;
+    }
+    cResponsePacket *resp = ReadResult(&vrp);
+    if (!resp)
+    {
+      XBMC->Log(LOG_ERROR, "%s - failed to get timeshift mode", __FUNCTION__);
+      return false;
+    }
+    int mode = resp->extract_U32();
+    m_spinTimeshiftMode->SetValue(mode);
+    delete resp;
+  }
+
+  m_spinTimeshiftBuffer = GUI->Control_getSpin(m_window, CONTROL_SPIN_TIMESHIFT_BUFFER);
+  m_spinTimeshiftBuffer->Clear();
+  char buffer[8];
+  for (int i = 1; i <= 20; i++)
+  {
+    sprintf(buffer, "%d", i);
+    m_spinTimeshiftBuffer->AddLabel(buffer, i);
+  }
+
+  {
+    cRequestPacket vrp;
+    if (!vrp.init(VNSI_GETSETUP) || !vrp.add_String(CONFNAME_TIMESHIFTBUFFERSIZE))
+    {
+      XBMC->Log(LOG_ERROR, "%s - failed to get timeshift buffer size", __FUNCTION__);
+      return false;
+    }
+    cResponsePacket *resp = ReadResult(&vrp);
+    if (!resp)
+    {
+      XBMC->Log(LOG_ERROR, "%s - failed to get timeshift buffer size", __FUNCTION__);
+      return false;
+    }
+    int mode = resp->extract_U32();
+    m_spinTimeshiftBuffer->SetValue(mode);
+    delete resp;
+  }
+
   return true;
 }
 
diff --git a/addons/pvr.vdr.vnsi/src/VNSIAdmin.h b/addons/pvr.vdr.vnsi/src/VNSIAdmin.h
index f5b14fa..4e5a63e 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIAdmin.h
+++ b/addons/pvr.vdr.vnsi/src/VNSIAdmin.h
@@ -65,6 +65,8 @@ class cVNSIAdmin : public cVNSIData
 
   CAddonGUIWindow *m_window;
   CAddonGUIRenderingControl *m_renderControl;
+  CAddonGUISpinControl *m_spinTimeshiftMode;
+  CAddonGUISpinControl *m_spinTimeshiftBuffer;
   bool m_bIsOsdControl;
   bool m_bIsOsdDirty;
   int m_width, m_height;
-- 
1.8.1.6


From 47c710ff75699e292c727e70f755689680d33e36 Mon Sep 17 00:00:00 2001
From: unknown <fernetmenta@online.de>
Date: Sun, 20 Jan 2013 11:55:32 +0100
Subject: [PATCH 11/63] vnsi: add osd rendering for DX

---
 .../VS2010Express/pvrclient_vdr_vnsi.vcxproj       |  10 +-
 .../pvrclient_vdr_vnsi.vcxproj.filters             |   3 +
 addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp              | 213 ++++++++++++++++++++-
 addons/pvr.vdr.vnsi/src/VNSIAdmin.h                |   2 +-
 4 files changed, 223 insertions(+), 5 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj b/addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj
index 203b8f5..2ce0fc4 100644
--- a/addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj
+++ b/addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj
@@ -42,6 +42,8 @@
   </PropertyGroup>
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
     <TargetName>XBMC_VDR_vnsi_win32</TargetName>
+    <IncludePath>$(DXSDK_DIR)Include;$(IncludePath)</IncludePath>
+    <LibraryPath>$(DXSDK_DIR)Lib\x86;$(LibraryPath)</LibraryPath>
   </PropertyGroup>
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
     <OutDir>..\..\addon\</OutDir>
@@ -54,13 +56,16 @@
       <WarningLevel>Level3</WarningLevel>
       <Optimization>Disabled</Optimization>
       <AdditionalIncludeDirectories>..\..\..\..\xbmc;..\..\..\..\lib;..\..\..\..\lib\platform\windows</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_WINDLL;_CRT_SECURE_NO_WARNINGS;_USE_32BIT_TIME_T;_WINSOCKAPI_;USE_DEMUX;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <PreprocessorDefinitions>_WINDLL;_CRT_SECURE_NO_WARNINGS;_USE_32BIT_TIME_T;_WINSOCKAPI_;USE_DEMUX;HAS_DX;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
     </ClCompile>
     <Link>
       <GenerateDebugInformation>true</GenerateDebugInformation>
-      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies>d3dx9.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
     </Link>
+    <PostBuildEvent>
+      <Command>xcopy /E /Y D:\Projects\xbmx\xbmc\pvr-addons\addons\pvr.vdr.vnsi\addon\*  D:\Projects\xbmx\xbmc\addons\pvr.vdr.vnsi</Command>
+    </PostBuildEvent>
   </ItemDefinitionGroup>
   <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
     <ClCompile>
@@ -96,6 +101,7 @@
     <ClInclude Include="..\..\src\requestpacket.h" />
     <ClInclude Include="..\..\src\responsepacket.h" />
     <ClInclude Include="..\..\src\tools.h" />
+    <ClInclude Include="..\..\src\VNSIAdmin.h" />
     <ClInclude Include="..\..\src\VNSIChannelScan.h" />
     <ClInclude Include="..\..\src\vnsicommand.h" />
     <ClInclude Include="..\..\src\VNSIData.h" />
diff --git a/addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj.filters b/addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj.filters
index ec8b50a..9dfd4ab 100644
--- a/addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj.filters
+++ b/addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj.filters
@@ -74,5 +74,8 @@
     <ClInclude Include="..\..\src\VNSISession.h">
       <Filter>Header Files</Filter>
     </ClInclude>
+    <ClInclude Include="..\..\src\VNSIAdmin.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
   </ItemGroup>
 </Project>
\ No newline at end of file
diff --git a/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp b/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
index ba9e000..57a2222 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
+++ b/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
@@ -27,6 +27,9 @@
 
 #if defined(HAVE_GL)
 #include <GL/gl.h>
+#elif defined(HAS_DX)
+#include "D3D9.h"
+#include "D3DX9.h"
 #endif
 
 #define CONTROL_RENDER_ADDON             9
@@ -214,6 +217,7 @@ class cOSDRender
   virtual void DisposeTexture(int wndId);
   virtual void FreeResources();
   virtual void Render() {};
+  virtual void SetDevice(void *device) {};
 protected:
   cOSDTexture *m_osdTextures[MAX_TEXTURES];
   std::queue<cOSDTexture*> m_disposedTextures;
@@ -440,6 +444,208 @@ void cOSDRenderGL::Render()
 }
 #endif
 
+#if defined(HAS_DX)
+class cOSDRenderDX : public cOSDRender
+{
+public:
+  cOSDRenderDX();
+  virtual ~cOSDRenderDX();
+  virtual void DisposeTexture(int wndId);
+  virtual void FreeResources();
+  virtual void Render();
+  virtual void SetDevice(void *device) { m_device = (LPDIRECT3DDEVICE9)device; };
+protected:
+  LPDIRECT3DDEVICE9 m_device;
+  LPDIRECT3DTEXTURE9 m_hwTextures[MAX_TEXTURES];
+  std::queue<LPDIRECT3DTEXTURE9> m_disposedHwTextures;
+};
+
+cOSDRenderDX::cOSDRenderDX()
+{
+  for (int i = 0; i < MAX_TEXTURES; i++)
+    m_hwTextures[i] = 0;
+}
+
+cOSDRenderDX::~cOSDRenderDX()
+{
+  for (int i = 0; i < MAX_TEXTURES; i++)
+  {
+    DisposeTexture(i);
+  }
+  FreeResources();
+}
+
+void cOSDRenderDX::DisposeTexture(int wndId)
+{
+  if (m_hwTextures[wndId])
+  {
+    m_disposedHwTextures.push(m_hwTextures[wndId]);
+    m_hwTextures[wndId] = 0;
+  }
+  cOSDRender::DisposeTexture(wndId);
+}
+
+void cOSDRenderDX::FreeResources()
+{
+  while (!m_disposedHwTextures.empty())
+  {
+    if (m_disposedHwTextures.front())
+    {
+      m_disposedHwTextures.front()->Release();
+      m_disposedHwTextures.pop();
+    }
+  }
+  cOSDRender::FreeResources();
+}
+
+void cOSDRenderDX::Render()
+{
+  m_device->Clear(0, NULL, D3DCLEAR_ZBUFFER, D3DXCOLOR(0.0f, 0.0f, 0.0f, 0.0f), 1.0f, 0);
+
+  D3DXMATRIX matProjection;
+  D3DXMatrixIdentity(&matProjection);
+  m_device->SetTransform(D3DTS_PROJECTION, &matProjection);
+
+  D3DXMATRIX matView;
+  D3DXMatrixIdentity(&matView);
+  m_device->SetTransform(D3DTS_VIEW, &matView);
+
+  D3DXMATRIX matWorld;
+  D3DXMatrixIdentity(&matWorld);
+  m_device->SetTransform(D3DTS_WORLD, &matWorld);
+
+  for (int i = 0; i < MAX_TEXTURES; i++)
+  {
+    int width, height, offsetX, offsetY;
+    int x0,x1,y0,y1;
+    bool dirty;
+
+    if (m_osdTextures[i] == 0)
+      continue;
+
+    m_osdTextures[i]->GetSize(width, height);
+    m_osdTextures[i]->GetOrigin(offsetX, offsetY);
+    dirty = m_osdTextures[i]->IsDirty(x0,y0,x1,y1);
+
+    // create texture
+    if (dirty && !m_hwTextures[i])
+    {
+      HRESULT hr = m_device->CreateTexture(width, height, 1, D3DUSAGE_DYNAMIC, D3DFMT_A8R8G8B8, D3DPOOL_DEFAULT, &m_hwTextures[i], NULL);
+	    if (hr != D3D_OK)
+	    {
+	      XBMC->Log(LOG_ERROR,"%s - failed to create texture", __FUNCTION__);
+        continue;
+      }
+    }
+    // update texture
+    if (dirty)
+    {
+      D3DLOCKED_RECT lockedRect;
+      RECT dirtyRect;
+      dirtyRect.bottom = y1;
+      dirtyRect.left = x0;
+      dirtyRect.top = y0;
+      dirtyRect.right = x1;
+      HRESULT hr = m_hwTextures[i]->LockRect(0, &lockedRect, &dirtyRect, 0);
+      if (hr != D3D_OK)
+	    {
+	      XBMC->Log(LOG_ERROR,"%s - failed to lock texture", __FUNCTION__);
+        continue;
+      }
+      uint8_t *source = (uint8_t*)m_osdTextures[i]->GetBuffer();
+      uint8_t *dest = (uint8_t*)lockedRect.pBits;
+      for(int y=y0; y<=y1; y++)
+      {
+        for(int x=x0; x<=x1; x++)
+        {
+          dest[y*lockedRect.Pitch+x*4] = source[y*width*4+x*4+2];  // blue
+          dest[y*lockedRect.Pitch+x*4+1] = source[y*width*4+x*4+1];  // green
+          dest[y*lockedRect.Pitch+x*4+2] = source[y*width*4+x*4];    // red
+          dest[y*lockedRect.Pitch+x*4+3] = source[y*width*4+x*4+3];  // alpha
+        }
+      }
+      m_hwTextures[i]->UnlockRect(0);
+      if (hr != D3D_OK)
+	    {
+	      XBMC->Log(LOG_ERROR,"%s - failed to unlock texture", __FUNCTION__);
+        continue;
+      }
+    }
+
+    // render texture
+
+    // calculate ndc for OSD texture
+    float destX0 = (float)offsetX*2/m_osdWidth -1;
+    float destX1 = (float)(offsetX+width)*2/m_osdWidth -1;
+    float destY0 = (float)offsetY*2/m_osdHeight -1;
+    float destY1 = (float)(offsetY+height)*2/m_osdHeight -1;
+    float aspectControl = (float)m_controlWidth/m_controlHeight;
+    float aspectOSD = (float)m_osdWidth/m_osdHeight;
+    if (aspectOSD > aspectControl)
+    {
+      destY0 *= aspectControl/aspectOSD;
+      destY1 *= aspectControl/aspectOSD;
+    }
+    else if (aspectOSD < aspectControl)
+    {
+      destX0 *= aspectOSD/aspectControl;
+      destX1 *= aspectOSD/aspectControl;
+    }
+
+    // y inveted
+    destY0 *= -1;
+    destY1 *= -1;
+
+    struct VERTEX
+    {
+      FLOAT x,y,z;
+      DWORD color;
+      FLOAT tu, tv;
+    };
+
+    VERTEX vertex[] =
+    {
+		  { destX0, destY0, 0.0f, 0xffffffff, 0.0f, 0.0f },
+		  { destX0, destY1, 0.0f, 0xffffffff, 0.0f, 1.0f },
+		  { destX1, destY1, 0.0f, 0xffffffff, 1.0f, 1.0f },
+		  { destX1, destY0, 0.0f, 0xffffffff, 1.0f, 0.0f },
+    };
+
+    m_device->SetTexture(0, m_hwTextures[i]);
+    HRESULT hr;
+    hr = m_device->SetTextureStageState( 0, D3DTSS_COLOROP, D3DTOP_SELECTARG1 );
+    hr = m_device->SetTextureStageState( 0, D3DTSS_COLORARG1, D3DTA_TEXTURE );
+    hr = m_device->SetTextureStageState( 0, D3DTSS_ALPHAOP, D3DTOP_SELECTARG1 );
+    hr = m_device->SetTextureStageState( 0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE );
+    hr = m_device->SetTextureStageState( 1, D3DTSS_COLOROP, D3DTOP_DISABLE );
+    hr = m_device->SetTextureStageState( 1, D3DTSS_ALPHAOP, D3DTOP_DISABLE );
+
+    hr = m_device->SetRenderState(D3DRS_CULLMODE, D3DCULL_NONE);
+    hr = m_device->SetRenderState(D3DRS_LIGHTING, FALSE);
+    hr = m_device->SetRenderState(D3DRS_ZENABLE, FALSE);
+    hr = m_device->SetRenderState(D3DRS_STENCILENABLE, FALSE);
+    hr = m_device->SetRenderState(D3DRS_ALPHABLENDENABLE, FALSE);
+    hr = m_device->SetRenderState(D3DRS_ALPHATESTENABLE, FALSE);
+    hr = m_device->SetRenderState(D3DRS_SCISSORTESTENABLE, FALSE);
+    hr = m_device->SetRenderState(D3DRS_COLORWRITEENABLE, D3DCOLORWRITEENABLE_ALPHA|D3DCOLORWRITEENABLE_BLUE|D3DCOLORWRITEENABLE_GREEN|D3DCOLORWRITEENABLE_RED); 
+
+    hr = m_device->SetSamplerState(0, D3DSAMP_ADDRESSU, D3DTADDRESS_CLAMP);
+    hr = m_device->SetSamplerState(0, D3DSAMP_ADDRESSV, D3DTADDRESS_CLAMP);
+
+    hr = m_device->SetPixelShader(NULL);
+
+    hr = m_device->SetFVF(D3DFVF_XYZ | D3DFVF_DIFFUSE | D3DFVF_TEX1);
+    hr = m_device->DrawPrimitiveUP(D3DPT_TRIANGLEFAN, 2, vertex, sizeof(VERTEX));
+    if (hr != D3D_OK)
+	  {
+	    XBMC->Log(LOG_ERROR,"%s - failed to render texture", __FUNCTION__);
+    }
+    m_device->SetTexture(0, NULL);
+  }
+}
+#endif
+
+
 //-----------------------------------------------------------------------------
 cVNSIAdmin::cVNSIAdmin()
 {
@@ -462,6 +668,8 @@ bool cVNSIAdmin::Open(const std::string& hostname, int port, const char* name)
   m_bIsOsdControl = false;
 #if defined(HAVE_GL)
   m_osdRender = new cOSDRenderGL();
+#elif defined(HAS_DX)
+  m_osdRender = new cOSDRenderDX();
 #else
   m_osdRender = new cOSDRender();
 #endif
@@ -693,11 +901,12 @@ bool cVNSIAdmin::IsVdrAction(int action)
     return false;
 }
 
-bool cVNSIAdmin::Create(int x, int y, int w, int h)
+bool cVNSIAdmin::Create(int x, int y, int w, int h, void* device)
 {
   if (m_osdRender)
   {
     m_osdRender->SetControlSize(w,h);
+    m_osdRender->SetDevice(device);
   }
   return true;
 }
@@ -757,7 +966,7 @@ bool cVNSIAdmin::OnActionCB(GUIHANDLE cbhdl, int actionId)
 bool cVNSIAdmin::CreateCB(GUIHANDLE cbhdl, int x, int y, int w, int h, void *device)
 {
   cVNSIAdmin* osd = static_cast<cVNSIAdmin*>(cbhdl);
-  return osd->Create(x, y, w, h);
+  return osd->Create(x, y, w, h, device);
 }
 
 void cVNSIAdmin::RenderCB(GUIHANDLE cbhdl)
diff --git a/addons/pvr.vdr.vnsi/src/VNSIAdmin.h b/addons/pvr.vdr.vnsi/src/VNSIAdmin.h
index 4e5a63e..ce9f6d5 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIAdmin.h
+++ b/addons/pvr.vdr.vnsi/src/VNSIAdmin.h
@@ -39,7 +39,7 @@ class cVNSIAdmin : public cVNSIData
   bool OnInit();
   bool OnAction(int actionId);
 
-  bool Create(int x, int y, int w, int h);
+  bool Create(int x, int y, int w, int h, void* device);
   void Render();
   void Stop();
   bool Dirty();
-- 
1.8.1.6


From 4dc3be03a8abc14bed4fd421fa02b576669ef787 Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Mon, 28 Jan 2013 16:01:58 +0100
Subject: [PATCH 12/63] vnsi: bump protocol version to 4

---
 addons/pvr.vdr.vnsi/src/vnsicommand.h                   | 2 +-
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/src/vnsicommand.h b/addons/pvr.vdr.vnsi/src/vnsicommand.h
index 2d19f20..d49ae46 100644
--- a/addons/pvr.vdr.vnsi/src/vnsicommand.h
+++ b/addons/pvr.vdr.vnsi/src/vnsicommand.h
@@ -23,7 +23,7 @@
 #define VNSI_COMMAND_H
 
 /** Current VNSI Protocol Version number */
-#define VNSI_PROTOCOLVERSION 3
+#define VNSI_PROTOCOLVERSION 4
 
 /** Packet types */
 #define VNSI_CHANNEL_REQUEST_RESPONSE 1
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h
index b828236..796ed58 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h
@@ -27,7 +27,7 @@
 #define VNSI_COMMAND_H
 
 /** Current VNSI Protocol Version number */
-#define VNSI_PROTOCOLVERSION 3
+#define VNSI_PROTOCOLVERSION 4
 
 /** Packet types */
 #define VNSI_CHANNEL_REQUEST_RESPONSE 1
-- 
1.8.1.6


From 1fe11b9f50ee0c2017a2e7348f04bb651d5392f4 Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Mon, 28 Jan 2013 16:02:40 +0100
Subject: [PATCH 13/63] vnsi: timeshift, tag mux packets with a serial

---
 addons/pvr.vdr.vnsi/src/VNSIDemux.cpp      | 12 +++++++++++-
 addons/pvr.vdr.vnsi/src/VNSIDemux.h        |  1 +
 addons/pvr.vdr.vnsi/src/responsepacket.cpp |  2 ++
 addons/pvr.vdr.vnsi/src/responsepacket.h   |  6 ++++--
 4 files changed, 18 insertions(+), 3 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/src/VNSIDemux.cpp b/addons/pvr.vdr.vnsi/src/VNSIDemux.cpp
index 215e22a..c116f43 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIDemux.cpp
+++ b/addons/pvr.vdr.vnsi/src/VNSIDemux.cpp
@@ -145,7 +145,7 @@ DemuxPacket* cVNSIDemux::Read()
       iStreamId = it->second;
 
     // stream found ?
-    if(iStreamId != -1)
+    if(iStreamId != -1 && resp->getMuxSerial() == m_MuxPacketSerial)
     {
       DemuxPacket* p = (DemuxPacket*)resp->getUserData();
       p->iSize      = resp->getUserDataLength();
@@ -157,6 +157,11 @@ DemuxPacket* cVNSIDemux::Read()
 
       return p;
     }
+    else if (iStreamId != -1 && resp->getMuxSerial() != m_MuxPacketSerial)
+    {
+      // ignore silently, may happen after a seek
+      XBMC->Log(LOG_DEBUG, "-------------------- serial: %d", resp->getMuxSerial());
+    }
     else
     {
       XBMC->Log(LOG_DEBUG, "stream id %i not found", resp->getStreamID());
@@ -191,10 +196,14 @@ bool cVNSIDemux::SeekTime(int time, bool backwards, double *startpts)
     return false;
   }
   uint32_t retCode = resp->extract_U32();
+  uint32_t serial = resp->extract_U32();
   delete resp;
 
   if (retCode == VNSI_RET_OK)
+  {
+    m_MuxPacketSerial = serial;
     return true;
+  }
   else
     return false;
 }
@@ -228,6 +237,7 @@ bool cVNSIDemux::SwitchChannel(const PVR_CHANNEL &channelinfo)
 
   m_channelinfo = channelinfo;
   m_Streams.iStreamCount  = 0;
+  m_MuxPacketSerial = 0;
 
   return true;
 }
diff --git a/addons/pvr.vdr.vnsi/src/VNSIDemux.h b/addons/pvr.vdr.vnsi/src/VNSIDemux.h
index f05ea98..3aaf1d2 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIDemux.h
+++ b/addons/pvr.vdr.vnsi/src/VNSIDemux.h
@@ -68,4 +68,5 @@ class cVNSIDemux : public cVNSISession
   SQuality              m_Quality;
   std::map<int, unsigned int> m_StreamIndex;
   bool m_bTimeshift;
+  uint32_t m_MuxPacketSerial;
 };
diff --git a/addons/pvr.vdr.vnsi/src/responsepacket.cpp b/addons/pvr.vdr.vnsi/src/responsepacket.cpp
index 64e7c17..8317661 100644
--- a/addons/pvr.vdr.vnsi/src/responsepacket.cpp
+++ b/addons/pvr.vdr.vnsi/src/responsepacket.cpp
@@ -123,6 +123,8 @@ void cResponsePacket::extractStreamHeader()
   duration = extract_U32();
   pts      = extract_U64();
   dts      = extract_U64();
+  muxSerial= extract_U32();
+
   userDataLength = extract_U32();
 
   userData = NULL;
diff --git a/addons/pvr.vdr.vnsi/src/responsepacket.h b/addons/pvr.vdr.vnsi/src/responsepacket.h
index f0d5477..af014d1 100644
--- a/addons/pvr.vdr.vnsi/src/responsepacket.h
+++ b/addons/pvr.vdr.vnsi/src/responsepacket.h
@@ -49,6 +49,7 @@ class cResponsePacket
     uint32_t  getDuration()       { return duration; }
     int64_t   getDTS()            { return dts; }
     int64_t   getPTS()            { return pts; }
+    uint32_t  getMuxSerial()      { return muxSerial; }
     void      getOSDData(uint32_t &wnd, uint32_t &color, uint32_t &x0, uint32_t &y0, uint32_t &x1, uint32_t &y1);
 
     uint32_t  getPacketPos()      { return packetPos; }
@@ -67,12 +68,12 @@ class cResponsePacket
     uint8_t* getUserData();
 
     uint8_t* getHeader() { return header; };
-    unsigned int getStreamHeaderLength() { return 32; };
+    unsigned int getStreamHeaderLength() { return 36; };
     unsigned int getHeaderLength() { return 8; };
     unsigned int getOSDHeaderLength() { return 32; } ;
 
   private:
-    uint8_t  header[36];
+    uint8_t  header[40];
     uint8_t* userData;
     uint32_t userDataLength;
     uint32_t packetPos;
@@ -85,6 +86,7 @@ class cResponsePacket
     uint32_t duration;
     int64_t  dts;
     int64_t  pts;
+    uint32_t muxSerial;
 
     int32_t osdWnd;
     int32_t osdColor;
-- 
1.8.1.6


From b2bac2c5ed1de4ea3137fd1133953220ac25b21d Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Mon, 28 Jan 2013 16:04:25 +0100
Subject: [PATCH 14/63] vdr-plugin-vnsiserver: tag mux packet with a serial

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c       |  5 +++++
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h       |  2 ++
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h        |  1 +
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/responsepacket.c   |  4 +++-
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/responsepacket.h   |  6 +++---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c      | 15 ++++++++-------
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h      |  2 +-
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c    |  4 +++-
 8 files changed, 26 insertions(+), 13 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
index 0d245ce..b943941 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
@@ -53,6 +53,7 @@ void cVNSIDemuxer::Open(const cChannel &channel, cVideoBuffer *videoBuffer)
   cParser::m_Wrap = false;
   cParser::m_NoOfWraps = 0;
   cParser::m_ConfirmCount = 0;
+  m_MuxPacketSerial = 0;
 }
 
 void cVNSIDemuxer::Close()
@@ -125,6 +126,7 @@ int cVNSIDemuxer::Read(sStreamPacket *packet)
     if (stream->ProcessTSPacket(buf, packet, NULL, m_WaitIFrame))
     {
       m_WaitIFrame = false;
+      packet->serial = m_MuxPacketSerial;
       return 1;
     }
   }
@@ -164,6 +166,7 @@ bool cVNSIDemuxer::SeekTime(int64_t time)
     m_VideoBuffer->SetPos(pos_min);
     ResetParsers();
     m_WaitIFrame = true;
+    m_MuxPacketSerial++;
     return true;
   }
 
@@ -191,6 +194,7 @@ bool cVNSIDemuxer::SeekTime(int64_t time)
   {
     ResetParsers();
     m_WaitIFrame = true;
+    m_MuxPacketSerial++;
     return true;
   }
 
@@ -284,6 +288,7 @@ bool cVNSIDemuxer::SeekTime(int64_t time)
 
   ResetParsers();
   m_WaitIFrame = true;
+  m_MuxPacketSerial++;
   return true;
 }
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
index 18a1af8..a42aa54 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
@@ -58,6 +58,7 @@ class cVNSIDemuxer
   void Open(const cChannel &channel, cVideoBuffer *videoBuffer);
   void Close();
   bool SeekTime(int64_t time);
+  uint32_t GetSerial() { return m_MuxPacketSerial; }
 
 protected:
   bool EnsureParsers();
@@ -76,4 +77,5 @@ class cVNSIDemuxer
   bool m_WaitIFrame;
   cVideoBuffer *m_VideoBuffer;
   cMutex m_Mutex;
+  uint32_t m_MuxPacketSerial;
 };
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
index 3e1acbd..ed360c2 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
@@ -202,6 +202,7 @@ struct sStreamPacket
   int       size;
   bool      streamChange;
   bool      pmtChange;
+  uint32_t  serial;
 };
 
 class cTSStream;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/responsepacket.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/responsepacket.c
index 646e708..dd32adb 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/responsepacket.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/responsepacket.c
@@ -120,7 +120,7 @@ bool cResponsePacket::initStatus(uint32_t opCode)
   return true;
 }
 
-bool cResponsePacket::initStream(uint32_t opCode, uint32_t streamID, uint32_t duration, int64_t pts, int64_t dts)
+bool cResponsePacket::initStream(uint32_t opCode, uint32_t streamID, uint32_t duration, int64_t pts, int64_t dts, uint32_t serial)
 {
   initBuffers();
 
@@ -139,6 +139,8 @@ bool cResponsePacket::initStream(uint32_t opCode, uint32_t streamID, uint32_t du
   memcpy(&buffer[16], &ull, sizeof(uint64_t));
   ull = __cpu_to_be64(dts);                    // DTS
   memcpy(&buffer[24], &ull, sizeof(uint64_t));
+  ul = htonl(serial);
+  memcpy(&buffer[32], &ul, sizeof(uint32_t));
   ul = 0;
   memcpy(&buffer[userDataLenPosStream], &ul, sizeof(uint32_t));
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/responsepacket.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/responsepacket.h
index 936703c..0e0c9a0 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/responsepacket.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/responsepacket.h
@@ -40,7 +40,7 @@ class cResponsePacket
   bool init(uint32_t requestID);
   bool initScan(uint32_t opCode);
   bool initStatus(uint32_t opCode);
-  bool initStream(uint32_t opCode, uint32_t streamID, uint32_t duration, int64_t pts, int64_t dts);
+  bool initStream(uint32_t opCode, uint32_t streamID, uint32_t duration, int64_t pts, int64_t dts, uint32_t serial);
   bool initOsd(uint32_t opCode, int32_t wnd, int32_t color, int32_t x0, int32_t y0, int32_t x1, int32_t y1);
   void finalise();
   void finaliseStream();
@@ -72,8 +72,8 @@ class cResponsePacket
 
   const static uint32_t headerLength          = 12;
   const static uint32_t userDataLenPos        = 8;
-  const static uint32_t headerLengthStream    = 36;
-  const static uint32_t userDataLenPosStream  = 32;
+  const static uint32_t headerLengthStream    = 40;
+  const static uint32_t userDataLenPosStream  = 36;
   const static uint32_t headerLengthOSD       = 36;
   const static uint32_t userDataLenPosOSD     = 32;
 };
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
index 5f3c875..81797a2 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
@@ -183,7 +183,7 @@ void cLiveStreamer::sendStreamPacket(sStreamPacket *pkt)
   if(pkt->size == 0)
     return;
 
-  if (!m_streamHeader.initStream(VNSI_STREAM_MUXPKT, pkt->id, pkt->duration, pkt->pts, pkt->dts))
+  if (!m_streamHeader.initStream(VNSI_STREAM_MUXPKT, pkt->id, pkt->duration, pkt->pts, pkt->dts, pkt->serial))
   {
     ERRORLOG("stream response packet init fail");
     return;
@@ -203,7 +203,7 @@ void cLiveStreamer::sendStreamPacket(sStreamPacket *pkt)
 void cLiveStreamer::sendStreamChange()
 {
   cResponsePacket *resp = new cResponsePacket();
-  if (!resp->initStream(VNSI_STREAM_CHANGE, 0, 0, 0, 0))
+  if (!resp->initStream(VNSI_STREAM_CHANGE, 0, 0, 0, 0, 0))
   {
     ERRORLOG("stream response packet init fail");
     delete resp;
@@ -330,7 +330,7 @@ void cLiveStreamer::sendSignalInfo()
   if (m_Frontend == -2)
   {
     cResponsePacket *resp = new cResponsePacket();
-    if (!resp->initStream(VNSI_STREAM_SIGNALINFO, 0, 0, 0, 0))
+    if (!resp->initStream(VNSI_STREAM_SIGNALINFO, 0, 0, 0, 0, 0))
     {
       ERRORLOG("stream response packet init fail");
       delete resp;
@@ -378,7 +378,7 @@ void cLiveStreamer::sendSignalInfo()
     if (m_Frontend >= 0)
     {
       cResponsePacket *resp = new cResponsePacket();
-      if (!resp->initStream(VNSI_STREAM_SIGNALINFO, 0, 0, 0, 0))
+      if (!resp->initStream(VNSI_STREAM_SIGNALINFO, 0, 0, 0, 0, 0))
       {
         ERRORLOG("stream response packet init fail");
         delete resp;
@@ -418,7 +418,7 @@ void cLiveStreamer::sendSignalInfo()
     if (m_Frontend >= 0)
     {
       cResponsePacket *resp = new cResponsePacket();
-      if (!resp->initStream(VNSI_STREAM_SIGNALINFO, 0, 0, 0, 0))
+      if (!resp->initStream(VNSI_STREAM_SIGNALINFO, 0, 0, 0, 0, 0))
       {
         ERRORLOG("stream response packet init fail");
         delete resp;
@@ -471,7 +471,7 @@ void cLiveStreamer::sendSignalInfo()
 void cLiveStreamer::sendStreamStatus()
 {
   cResponsePacket *resp = new cResponsePacket();
-  if (!resp->initStream(VNSI_STREAM_STATUS, 0, 0, 0, 0))
+  if (!resp->initStream(VNSI_STREAM_STATUS, 0, 0, 0, 0, 0))
   {
     ERRORLOG("stream response packet init fail");
     delete resp;
@@ -483,8 +483,9 @@ void cLiveStreamer::sendStreamStatus()
   delete resp;
 }
 
-bool cLiveStreamer::SeekTime(int64_t time)
+bool cLiveStreamer::SeekTime(int64_t time, uint32_t &serial)
 {
   bool ret = m_Demuxer.SeekTime(time);
+  serial = m_Demuxer.GetSerial();
   return ret;
 }
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h
index e4f879d..c774c84 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h
@@ -90,7 +90,7 @@ class cLiveStreamer : public cThread
   bool IsStarting() { return m_startup; }
   bool IsAudioOnly() { return m_IsAudioOnly; }
   bool IsMPEGPS() { return m_IsMPEGPS; }
-  bool SeekTime(int64_t time);
+  bool SeekTime(int64_t time, uint32_t &serial);
 };
 
 #endif  // VNSI_RECEIVER_H
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
index cc80aeb..617be2b 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
@@ -747,10 +747,11 @@ bool cVNSIClient::processChannelStream_Close() /* OPCODE 21 */
 
 bool cVNSIClient::processChannelStream_Seek() /* OPCODE 22 */
 {
+  uint32_t serial = 0;
   if (m_isStreaming && m_Streamer)
   {
     int64_t time = m_req->extract_S64();
-    if (m_Streamer->SeekTime(time))
+    if (m_Streamer->SeekTime(time, serial))
       m_resp->add_U32(VNSI_RET_OK);
     else
       m_resp->add_U32(VNSI_RET_ERROR);
@@ -758,6 +759,7 @@ bool cVNSIClient::processChannelStream_Seek() /* OPCODE 22 */
   else
     m_resp->add_U32(VNSI_RET_ERROR);
 
+  m_resp->add_U32(serial);
   m_resp->finalise();
   m_socket.write(m_resp->getPtr(), m_resp->getLen());
   return true;
-- 
1.8.1.6


From a67e531dbbeacf400d82d898d49e09cf8e757401 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Sat, 2 Feb 2013 15:27:55 +0100
Subject: [PATCH 15/63] vdr-plugin-vnsiserver: bump version to 0.9.2

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/Makefile | 2 +-
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.h   | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/Makefile b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/Makefile
index ad09fba..8f37c92 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/Makefile
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/Makefile
@@ -7,7 +7,7 @@
 # This name will be used in the '-P...' option of VDR to load the plugin.
 # By default the main source file also carries this name.
 
-PLUGIN = vnsiserver3
+PLUGIN = vnsiserver4
 
 ### The version number of this plugin (taken from the main source file):
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.h
index 22664c4..f34a246 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.h
@@ -27,7 +27,7 @@
 #include <vdr/plugin.h>
 #include "vnsiserver.h"
 
-static const char *VERSION        = "0.9.1";
+static const char *VERSION        = "0.9.2";
 static const char *DESCRIPTION    = "VDR-Network-Streaming-Interface (VNSI) Server";
 
 extern int PmtTimeout;
-- 
1.8.1.6


From ca282e3b9fa959af0fc9dfad2ca76a01bc4214ac Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Sun, 3 Feb 2013 11:27:40 +0100
Subject: [PATCH 16/63] vdr-plugin-vnsiserver: parse setup parameter before
 saving

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.c
index 1846406..2e863d7 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.c
@@ -154,8 +154,11 @@ void cPluginVNSIServer::StoreSetup(const char *Name, int Value)
 {
   if (VNSIServer)
   {
-    VNSIServer->SetupStore(Name, Value);
-    Setup.Save();
+    if (VNSIServer->SetupParse(Name, itoa(Value)))
+    {
+      VNSIServer->SetupStore(Name, Value);
+      Setup.Save();
+    }
   }
 }
 
-- 
1.8.1.6


From 90ad8d0c74c93c570ee76298785b416bcfa28d8c Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Wed, 6 Feb 2013 21:13:21 +0100
Subject: [PATCH 17/63] vdr-plugin-vnsiserver: add file buffer for timeshift

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c  |  12 +-
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.h  |   1 +
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c  |   5 +-
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h  |   3 +-
 .../vdr-plugin-vnsiserver/videobuffer.c            | 369 ++++++++++++++++++---
 .../vdr-plugin-vnsiserver/videobuffer.h            |   3 +-
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.c   |   2 +
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.h   |   1 +
 .../vdr-plugin-vnsiserver/vnsiclient.c             |   9 +-
 .../vdr-plugin-vnsiserver/vnsicommand.h            |   1 +
 .../vdr-plugin-vnsiserver/vnsiserver.c             |   5 +
 11 files changed, 355 insertions(+), 56 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c
index 080840a..5e9fff1 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c
@@ -24,6 +24,7 @@
 int PmtTimeout = 5;
 int TimeshiftMode = 0;
 int TimeshiftBufferSize = 5;
+int TimeshiftBufferFileSize = 6;
 
 cMenuSetupVNSI::cMenuSetupVNSI(void)
 {
@@ -37,7 +38,10 @@
   Add(new cMenuEditStraItem( tr("Time Shift Mode"), &newTimeshiftMode, 2, timeshiftModesTexts));
 
   newTimeshiftBufferSize = TimeshiftBufferSize;
-  Add(new cMenuEditIntItem( tr("Time Shift Buffersize (1-20) x 100MB"), &newTimeshiftBufferSize));
+  Add(new cMenuEditIntItem( tr("TS Buffersize (RAM) (1-20) x 100MB"), &newTimeshiftBufferSize));
+
+  newTimeshiftBufferFileSize = TimeshiftBufferFileSize;
+  Add(new cMenuEditIntItem( tr("TS Buffersize (File) (1-10) x 1GB"), &newTimeshiftBufferFileSize));
 }
 
 void cMenuSetupVNSI::Store(void)
@@ -53,4 +57,10 @@ void cMenuSetupVNSI::Store(void)
   else if (newTimeshiftBufferSize < 1)
     newTimeshiftBufferSize = 1;
   SetupStore(CONFNAME_TIMESHIFTBUFFERSIZE, TimeshiftBufferSize = newTimeshiftBufferSize);
+
+  if (newTimeshiftBufferFileSize > 10)
+    newTimeshiftBufferFileSize = 10;
+  else if (newTimeshiftBufferFileSize < 1)
+    newTimeshiftBufferFileSize = 1;
+  SetupStore(CONFNAME_TIMESHIFTBUFFERFILESIZE, TimeshiftBufferFileSize = newTimeshiftBufferFileSize);
 }
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.h
index 18c2b98..c4f6d61 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.h
@@ -30,6 +30,7 @@ class cMenuSetupVNSI : public cMenuSetupPage
   int newTimeshiftMode;
   const char *timeshiftModesTexts[3];
   int newTimeshiftBufferSize;
+  int newTimeshiftBufferFileSize;
 protected:
   virtual void Store(void);
 public:
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
index 81797a2..5b92cfd 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
@@ -40,8 +40,9 @@
 
 // --- cLiveStreamer -------------------------------------------------
 
-cLiveStreamer::cLiveStreamer(uint32_t timeout)
+cLiveStreamer::cLiveStreamer(int clientID, uint32_t timeout)
  : cThread("cLiveStreamer stream processor")
+ , m_ClientID(clientID)
  , m_scanTimeout(timeout)
 {
   m_Channel         = NULL;
@@ -133,7 +134,7 @@ bool cLiveStreamer::StreamChannel(const cChannel *channel, int priority, cxSocke
     return false;
   }
 
-  m_VideoBuffer = cVideoBuffer::Create();
+  m_VideoBuffer = cVideoBuffer::Create(m_ClientID);
   m_Channel   = channel;
   m_Socket    = Socket;
   m_Device = cDevice::GetDevice(m_Channel, priority, true);
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h
index c774c84..82cbfa7 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h
@@ -58,6 +58,7 @@ class cLiveStreamer : public cThread
   void sendSignalInfo();
   void sendStreamStatus();
 
+  int               m_ClientID;
   const cChannel   *m_Channel;                      /*!> Channel to stream */
   cDevice          *m_Device;
   cxSocket         *m_Socket;                       /*!> The socket class to communicate with client */
@@ -81,7 +82,7 @@ class cLiveStreamer : public cThread
   virtual void Action(void);
 
 public:
-  cLiveStreamer(uint32_t timeout = 0);
+  cLiveStreamer(int clientID, uint32_t timeout = 0);
   virtual ~cLiveStreamer();
 
   void Activate(bool On);
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
index 8131d2a..a3a8f6e 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
@@ -24,6 +24,11 @@
 
 #include <vdr/ringbuffer.h>
 #include <vdr/remux.h>
+#include <vdr/videodir.h>
+
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <fcntl.h>
 
 class cVideoBufferSimple : public cVideoBuffer
 {
@@ -96,37 +101,30 @@ int cVideoBufferSimple::Read(uint8_t **buf, unsigned int size)
 
 #define MARGIN 40000
 
-class cVideoBufferRAM : public cVideoBuffer
+class cVideoBufferTimeshift : public cVideoBuffer
 {
 friend class cVideoBuffer;
 public:
-  virtual void Put(uint8_t *buf, unsigned int size);
-  virtual int Read(uint8_t **buf, unsigned int size);
   virtual size_t GetPosMin();
   virtual size_t GetPosMax();
   virtual size_t GetPosCur();
   virtual void GetPositions(size_t *cur, size_t *min, size_t *max);
-  virtual void SetPos(size_t pos);
 
 protected:
-  cVideoBufferRAM();
-  virtual ~cVideoBufferRAM();
-  bool Init();
-  size_t Available();
-  uint8_t *m_Buffer;
-  uint8_t *m_BufferPtr;
-  size_t m_BufferSize;
-  size_t m_WritePtr;
-  size_t m_ReadPtr;
+  cVideoBufferTimeshift();
+  virtual bool Init() = 0;
+  off_t Available();
+  off_t m_BufferSize;
+  off_t m_WritePtr;
+  off_t m_ReadPtr;
   bool m_BufferFull;
   unsigned int m_Margin;
   unsigned int m_BytesConsumed;
   cMutex m_Mutex;
 };
 
-cVideoBufferRAM::cVideoBufferRAM()
+cVideoBufferTimeshift::cVideoBufferTimeshift()
 {
-  m_Buffer = 0;
   m_Margin = TS_SIZE*2;
   m_BufferFull = false;
   m_ReadPtr = 0;
@@ -134,27 +132,9 @@ class cVideoBufferRAM : public cVideoBuffer
   m_BytesConsumed = 0;
 }
 
-cVideoBufferRAM::~cVideoBufferRAM()
-{
-  if (m_Buffer)
-    free(m_Buffer);
-}
-
-bool cVideoBufferRAM::Init()
-{
-  m_BufferSize = (size_t)TimeshiftBufferSize*100*1000*1000;
-  INFOLOG("allocated timeshift buffer with size: %ld", m_BufferSize);
-  m_Buffer = (uint8_t*)malloc(m_BufferSize + m_Margin);
-  m_BufferPtr = m_Buffer + m_Margin;
-  if (!m_Buffer)
-    return false;
-  else
-    return true;
-}
-
-size_t cVideoBufferRAM::GetPosMin()
+size_t cVideoBufferTimeshift::GetPosMin()
 {
-  size_t ret;
+  off_t ret;
   if (!m_BufferFull)
     return 0;
 
@@ -165,7 +145,7 @@ size_t cVideoBufferRAM::GetPosMin()
   return ret;
 }
 
-size_t cVideoBufferRAM::GetPosMax()
+size_t cVideoBufferTimeshift::GetPosMax()
 {
    size_t ret = m_WritePtr;
    if (ret < GetPosMin())
@@ -173,7 +153,7 @@ size_t cVideoBufferRAM::GetPosMax()
    return ret;
 }
 
-size_t cVideoBufferRAM::GetPosCur()
+size_t cVideoBufferTimeshift::GetPosCur()
 {
   size_t ret = m_ReadPtr;
   if (ret < GetPosMin())
@@ -181,7 +161,7 @@ size_t cVideoBufferRAM::GetPosCur()
   return ret;
 }
 
-void cVideoBufferRAM::GetPositions(size_t *cur, size_t *min, size_t *max)
+void cVideoBufferTimeshift::GetPositions(size_t *cur, size_t *min, size_t *max)
 {
   cMutexLock lock(&m_Mutex);
 
@@ -191,17 +171,7 @@ void cVideoBufferRAM::GetPositions(size_t *cur, size_t *min, size_t *max)
   *max = GetPosMax();
 }
 
-void cVideoBufferRAM::SetPos(size_t pos)
-{
-  cMutexLock lock(&m_Mutex);
-
-  m_ReadPtr = pos;
-  if (m_ReadPtr >= m_BufferSize)
-    m_ReadPtr -= m_BufferSize;
-  m_BytesConsumed = 0;
-}
-
-size_t cVideoBufferRAM::Available()
+off_t cVideoBufferTimeshift::Available()
 {
   size_t ret;
   if (m_ReadPtr <= m_WritePtr)
@@ -211,6 +181,56 @@ size_t cVideoBufferRAM::Available()
 
   return ret;
 }
+//-----------------------------------------------------------------------------
+
+class cVideoBufferRAM : public cVideoBufferTimeshift
+{
+friend class cVideoBuffer;
+public:
+  virtual void Put(uint8_t *buf, unsigned int size);
+  virtual int Read(uint8_t **buf, unsigned int size);
+  virtual void SetPos(size_t pos);
+
+protected:
+  cVideoBufferRAM();
+  virtual ~cVideoBufferRAM();
+  virtual bool Init();
+  uint8_t *m_Buffer;
+  uint8_t *m_BufferPtr;
+};
+
+cVideoBufferRAM::cVideoBufferRAM()
+{
+  m_Buffer = 0;
+}
+
+cVideoBufferRAM::~cVideoBufferRAM()
+{
+  if (m_Buffer)
+    free(m_Buffer);
+}
+
+bool cVideoBufferRAM::Init()
+{
+  m_BufferSize = (size_t)TimeshiftBufferSize*100*1000*1000;
+  INFOLOG("allocated timeshift buffer with size: %ld", m_BufferSize);
+  m_Buffer = (uint8_t*)malloc(m_BufferSize + m_Margin);
+  m_BufferPtr = m_Buffer + m_Margin;
+  if (!m_Buffer)
+    return false;
+  else
+    return true;
+}
+
+void cVideoBufferRAM::SetPos(size_t pos)
+{
+  cMutexLock lock(&m_Mutex);
+
+  m_ReadPtr = pos;
+  if (m_ReadPtr >= m_BufferSize)
+    m_ReadPtr -= m_BufferSize;
+  m_BytesConsumed = 0;
+}
 
 void cVideoBufferRAM::Put(uint8_t *buf, unsigned int size)
 {
@@ -227,6 +247,7 @@ void cVideoBufferRAM::Put(uint8_t *buf, unsigned int size)
     int bytes = m_BufferSize - m_WritePtr;
     memcpy(m_BufferPtr+m_WritePtr, buf, bytes);
     size -= bytes;
+    buf += bytes;
     m_WritePtr = 0;
   }
 
@@ -291,6 +312,242 @@ int cVideoBufferRAM::Read(uint8_t **buf, unsigned int size)
 
 //-----------------------------------------------------------------------------
 
+#define CACHE_SIZE 4000
+
+class cVideoBufferFile : public cVideoBufferTimeshift
+{
+friend class cVideoBuffer;
+public:
+  virtual void Put(uint8_t *buf, unsigned int size);
+  virtual int Read(uint8_t **buf, unsigned int size);
+  virtual void SetPos(size_t pos);
+
+protected:
+  cVideoBufferFile(int clientID);
+  virtual ~cVideoBufferFile();
+  virtual bool Init();
+  int m_ClientID;
+  cString m_Filename;
+  int m_Fd;
+  bool m_UseCache;
+  uint8_t m_ReadCache[CACHE_SIZE];
+  unsigned int m_ReadCachePtr;
+  unsigned int m_ReadCacheSize;
+};
+
+cVideoBufferFile::cVideoBufferFile(int clientID)
+{
+  m_ClientID = clientID;
+  m_Fd = 0;
+  m_ReadCacheSize = 0;
+}
+
+cVideoBufferFile::~cVideoBufferFile()
+{
+  if (m_Fd)
+  {
+    close(m_Fd);
+    unlink(m_Filename);
+    m_Fd = 0;
+  }
+}
+
+bool cVideoBufferFile::Init()
+{
+  m_BufferSize = (size_t)TimeshiftBufferFileSize*1000*1000*1000;
+
+  m_Filename = cString::sprintf("%s/Timeshift-%d.vnsi", VideoDirectory, m_ClientID);
+  m_Fd = open(m_Filename, O_RDWR | O_CREAT | O_TRUNC, S_IRWXU);
+  if (m_Fd == -1)
+  {
+    ERRORLOG("Could not open file: %s", (const char*)m_Filename);
+    return false;
+  }
+  m_WritePtr = lseek(m_Fd, m_BufferSize - 1, SEEK_SET);
+  if (m_WritePtr == -1)
+  {
+    ERRORLOG("(Init) Could not seek file: %s", (const char*)m_Filename);
+    return false;
+  }
+  char tmp = '0';
+  if (safe_write(m_Fd, &tmp, 1) < 0)
+  {
+    ERRORLOG("(Init) Could not write to file: %s", (const char*)m_Filename);
+    return false;
+  }
+
+  m_WritePtr = 200;
+  m_ReadPtr = 200;
+  m_ReadCacheSize = 0;
+  return true;
+}
+
+void cVideoBufferFile::SetPos(size_t pos)
+{
+  cMutexLock lock(&m_Mutex);
+
+  m_ReadPtr = pos;
+  if (m_ReadPtr >= m_BufferSize)
+    m_ReadPtr -= m_BufferSize;
+  m_BytesConsumed = 0;
+  m_ReadCacheSize = 0;
+}
+
+void cVideoBufferFile::Put(uint8_t *buf, unsigned int size)
+{
+  cMutexLock lock(&m_Mutex);
+
+  if (Available() + MARGIN >= m_BufferSize)
+  {
+    ERRORLOG("------------- skipping data");
+    return;
+  }
+
+  if ((m_BufferSize - m_WritePtr) <= size)
+  {
+    int bytes = m_BufferSize - m_WritePtr;
+
+    m_WritePtr = lseek(m_Fd, m_WritePtr, SEEK_SET);
+    if (m_WritePtr != m_WritePtr)
+    {
+      ERRORLOG("Could not seek file: %s", (const char*)m_Filename);
+      return;
+    }
+    if (safe_write(m_Fd, buf, bytes) < 0)
+    {
+      ERRORLOG("Could not write to file: %s", (const char*)m_Filename);
+      return;
+    }
+    size -= bytes;
+    buf += bytes;
+    m_WritePtr = 0;
+  }
+
+  m_WritePtr = lseek(m_Fd, m_WritePtr, SEEK_SET);
+  if (m_WritePtr != m_WritePtr)
+  {
+    ERRORLOG("Could not seek file: %s", (const char*)m_Filename);
+    return;
+  }
+  if (safe_write(m_Fd, buf, size) < 0)
+  {
+    ERRORLOG("Could not write to file: %s", (const char*)m_Filename);
+    return;
+  }
+  m_WritePtr += size;
+
+  if (!m_BufferFull)
+  {
+    if ((m_WritePtr + 2*MARGIN) > m_BufferSize)
+      m_BufferFull = true;
+  }
+}
+
+int cVideoBufferFile::Read(uint8_t **buf, unsigned int size)
+{
+  cMutexLock lock(&m_Mutex);
+
+  // move read pointer
+  if (m_BytesConsumed)
+  {
+    m_ReadPtr += m_BytesConsumed;
+    if (m_ReadPtr >= m_BufferSize)
+      m_ReadPtr -= m_BufferSize;
+    m_ReadCachePtr += m_BytesConsumed;
+  }
+  m_BytesConsumed = 0;
+
+  // check if we have anything to read
+  size_t readBytes;
+  if (m_ReadCacheSize && ((m_ReadCachePtr + m_Margin) <= m_ReadCacheSize))
+  {
+    readBytes = m_ReadCacheSize - m_ReadCachePtr;
+    *buf = m_ReadCache + m_ReadCachePtr;
+  }
+  else if ((readBytes = Available()) >= CACHE_SIZE)
+  {
+    m_ReadPtr = lseek(m_Fd, m_ReadPtr, SEEK_SET);
+    if (m_ReadPtr != m_ReadPtr)
+    {
+      ERRORLOG("Could not seek file: %s", (const char*)m_Filename);
+      return 0;
+    }
+    if (m_ReadPtr + CACHE_SIZE <= m_BufferSize)
+    {
+      m_ReadCacheSize = safe_read(m_Fd, m_ReadCache, CACHE_SIZE);
+      if (m_ReadCacheSize < 0)
+      {
+        ERRORLOG("Could not read file: %s", (const char*)m_Filename);
+        return 0;
+      }
+      if (m_ReadCacheSize < m_Margin)
+      {
+        ERRORLOG("Could not read file (margin): %s", (const char*)m_Filename);
+        m_ReadCacheSize = 0;
+        return 0;
+      }
+      readBytes = m_ReadCacheSize;
+      *buf = m_ReadCache;
+      m_ReadCachePtr = 0;
+    }
+    else
+    {
+      m_ReadCacheSize = safe_read(m_Fd, m_ReadCache, m_BufferSize - m_ReadPtr);
+      if (m_ReadCacheSize != (m_BufferSize - m_ReadPtr))
+      {
+        ERRORLOG("Could not read file (end): %s", (const char*)m_Filename);
+        m_ReadCacheSize = 0;
+        return 0;
+      }
+      m_ReadPtr = lseek(m_Fd, 0, SEEK_SET);
+      if (m_ReadPtr != m_ReadPtr)
+      {
+        ERRORLOG("Could not seek file: %s", (const char*)m_Filename);
+        return 0;
+      }
+      readBytes = safe_read(m_Fd, m_ReadCache + m_ReadCacheSize, CACHE_SIZE - m_ReadCacheSize);
+      if (readBytes < 0)
+      {
+        ERRORLOG("Could not read file (end): %s", (const char*)m_Filename);
+        m_ReadCacheSize = 0;
+        return 0;
+      }
+      m_ReadCacheSize += readBytes;
+      if (m_ReadCacheSize < m_Margin)
+      {
+        ERRORLOG("Could not read file (margin): %s", (const char*)m_Filename);
+        m_ReadCacheSize = 0;
+        return 0;
+      }
+      readBytes = m_ReadCacheSize;
+      *buf = m_ReadCache;
+      m_ReadCachePtr = 0;
+    }
+  }
+  else
+    return 0;
+
+  // Make sure we are looking at a TS packet
+  while (readBytes > TS_SIZE)
+  {
+    if ((*buf)[0] == TS_SYNC_BYTE && (*buf)[TS_SIZE] == TS_SYNC_BYTE)
+      break;
+    m_BytesConsumed++;
+    (*buf)++;
+    readBytes--;
+  }
+
+  if ((*buf)[0] != TS_SYNC_BYTE)
+  {
+    return 0;
+  }
+
+  m_BytesConsumed += TS_SIZE;
+  return TS_SIZE;
+}
+
+//-----------------------------------------------------------------------------
+
 cVideoBuffer::cVideoBuffer()
 {
 }
@@ -299,7 +556,7 @@ int cVideoBufferRAM::Read(uint8_t **buf, unsigned int size)
 {
 }
 
-cVideoBuffer* cVideoBuffer::Create()
+cVideoBuffer* cVideoBuffer::Create(int clientID)
 {
   // no time shift
   if (TimeshiftMode == 0)
@@ -319,6 +576,18 @@ cVideoBuffer* cVideoBuffer::Create()
     else
       return buffer;
   }
+  // buffer in file
+  else if (TimeshiftMode == 2)
+  {
+    cVideoBufferFile *buffer = new cVideoBufferFile(clientID);
+    if (!buffer->Init())
+    {
+      delete buffer;
+      return NULL;
+    }
+    else
+      return buffer;
+  }
   else
     return NULL;
 }
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h
index 5f5041e..40649e2 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h
@@ -27,7 +27,7 @@ class cVideoBuffer
 {
 public:
   virtual ~cVideoBuffer();
-  static cVideoBuffer* Create();
+  static cVideoBuffer* Create(int clientID);
   virtual void Put(uint8_t *buf, unsigned int size) = 0;
   virtual int Read(uint8_t **buf, unsigned int size) = 0;
   virtual size_t GetPosMin() { return 0; };
@@ -35,6 +35,7 @@ class cVideoBuffer
   virtual size_t GetPosCur() { return 0; };
   virtual void GetPositions(size_t *cur, size_t *min,size_t *max) {};
   virtual void SetPos(size_t pos) {};
+  virtual void SetCache(bool on) {};
 protected:
   cVideoBuffer();
 };
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.c
index 2e863d7..b153b4e 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.c
@@ -127,6 +127,8 @@ bool cPluginVNSIServer::SetupParse(const char *Name, const char *Value)
     TimeshiftMode = atoi(Value);
   else if (!strcasecmp(Name, CONFNAME_TIMESHIFTBUFFERSIZE))
     TimeshiftBufferSize = atoi(Value);
+  else if (!strcasecmp(Name, CONFNAME_TIMESHIFTBUFFERFILESIZE))
+    TimeshiftBufferFileSize = atoi(Value);
   else
     return false;
   return true;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.h
index f34a246..f0c4f04 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.h
@@ -33,6 +33,7 @@
 extern int PmtTimeout;
 extern int TimeshiftMode;
 extern int TimeshiftBufferSize;
+extern int TimeshiftBufferFileSize;
 
 class cPluginVNSIServer : public cPlugin {
 private:
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
index 617be2b..6c17f6f 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
@@ -179,7 +179,7 @@ void cVNSIClient::Action(void)
 
 bool cVNSIClient::StartChannelStreaming(const cChannel *channel, uint32_t timeout)
 {
-  m_Streamer    = new cLiveStreamer(timeout);
+  m_Streamer    = new cLiveStreamer(m_Id, timeout);
   m_isStreaming = m_Streamer->StreamChannel(channel, 50, &m_socket, m_resp);
   return m_isStreaming;
 }
@@ -657,6 +657,8 @@ bool cVNSIClient::process_GetSetup() /* OPCODE 8 */
     m_resp->add_U32(TimeshiftMode);
   else if (!strcasecmp(name, CONFNAME_TIMESHIFTBUFFERSIZE))
     m_resp->add_U32(TimeshiftBufferSize);
+  else if (!strcasecmp(name, CONFNAME_TIMESHIFTBUFFERFILESIZE))
+    m_resp->add_U32(TimeshiftBufferFileSize);
 
   m_resp->finalise();
   m_socket.write(m_resp->getPtr(), m_resp->getLen());
@@ -682,6 +684,11 @@ bool cVNSIClient::process_StoreSetup() /* OPCODE 9 */
     int value = m_req->extract_U32();
     cPluginVNSIServer::StoreSetup(CONFNAME_TIMESHIFTBUFFERSIZE, value);
   }
+  else if (!strcasecmp(name, CONFNAME_TIMESHIFTBUFFERFILESIZE))
+  {
+    int value = m_req->extract_U32();
+    cPluginVNSIServer::StoreSetup(CONFNAME_TIMESHIFTBUFFERFILESIZE, value);
+  }
 
   m_resp->add_U32(VNSI_RET_OK);
   m_resp->finalise();
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h
index 796ed58..6cea4fb 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h
@@ -43,6 +43,7 @@
 #define CONFNAME_PMTTIMEOUT "PmtTimeout"
 #define CONFNAME_TIMESHIFT "Timeshift"
 #define CONFNAME_TIMESHIFTBUFFERSIZE "TimeshiftBufferSize"
+#define CONFNAME_TIMESHIFTBUFFERFILESIZE "TimeshiftBufferFileSize"
 
 /* OPCODE 1 - 19: VNSI network functions for general purpose */
 #define VNSI_LOGIN                 1
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiserver.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiserver.c
index f116163..f268213 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiserver.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiserver.c
@@ -39,6 +39,7 @@
 
 #include <vdr/plugin.h>
 #include <vdr/shutdown.h>
+#include <vdr/videodir.h>
 
 #include "vnsiserver.h"
 #include "vnsiclient.h"
@@ -190,6 +191,10 @@ void cVNSIServer::Action(void)
   // last update of epg
   time_t epgUpdate = cSchedules::Modified();
 
+  // delete old timeshift file
+  cString cmd = cString::sprintf("rm -f %s/*.vnsi", VideoDirectory);
+  int ret = system(cmd);
+
   while (Running())
   {
     FD_ZERO(&fds);
-- 
1.8.1.6


From e312da90cb6bfe9bf754afa0a7415cb4d33bbad8 Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Wed, 6 Feb 2013 21:14:54 +0100
Subject: [PATCH 18/63] vnsi: add file buffer for timeshift

---
 .../addon/resources/language/English/strings.po    | 10 +++-
 .../resources/skins/skin.confluence/720p/Admin.xml | 17 ++++++
 addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp              | 63 +++++++++++++++++-----
 addons/pvr.vdr.vnsi/src/VNSIAdmin.h                |  3 +-
 addons/pvr.vdr.vnsi/src/VNSIDemux.cpp              |  2 -
 addons/pvr.vdr.vnsi/src/client.cpp                 |  2 +-
 addons/pvr.vdr.vnsi/src/vnsicommand.h              |  1 +
 7 files changed, 81 insertions(+), 17 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/addon/resources/language/English/strings.po b/addons/pvr.vdr.vnsi/addon/resources/language/English/strings.po
index d1d4389..9b8d9ab 100644
--- a/addons/pvr.vdr.vnsi/addon/resources/language/English/strings.po
+++ b/addons/pvr.vdr.vnsi/addon/resources/language/English/strings.po
@@ -228,5 +228,13 @@ msgid "Timeshift Mode"
 msgstr ""
 
 msgctxt "#30105"
-msgid "Timeshift Buffer x100 MB"
+msgid "Timeshift Buffer (RAM) x100 MB"
+msgstr ""
+
+msgctxt "#30106"
+msgid "Timeshift Buffer (File) x1 GB"
+msgstr ""
+
+msgctxt "#30107"
+msgid "VDR Admin"
 msgstr ""
\ No newline at end of file
diff --git a/addons/pvr.vdr.vnsi/addon/resources/skins/skin.confluence/720p/Admin.xml b/addons/pvr.vdr.vnsi/addon/resources/skins/skin.confluence/720p/Admin.xml
index 77a9582..b634b47 100644
--- a/addons/pvr.vdr.vnsi/addon/resources/skins/skin.confluence/720p/Admin.xml
+++ b/addons/pvr.vdr.vnsi/addon/resources/skins/skin.confluence/720p/Admin.xml
@@ -185,6 +185,23 @@
             <label>$ADDON[pvr.vdr.vnsi 30105]</label>
             <onleft>10</onleft>
 			<onup>21</onup>
+			<ondown>23</ondown>
+        </control>
+        <control type="spincontrolex" id="23">
+            <description>Source Type</description>
+            <posx>10</posx>
+            <posy>150</posy>
+            <width>770</width>
+            <height>40</height>
+            <font>font13</font>
+            <textcolor>grey2</textcolor>
+            <focusedcolor>white</focusedcolor>
+            <texturefocus border="0,2,0,2">MenuItemFO.png</texturefocus>
+            <texturenofocus border="0,2,0,2">MenuItemNF.png</texturenofocus>
+            <aligny>center</aligny>
+            <label>$ADDON[pvr.vdr.vnsi 30106]</label>
+            <onleft>10</onleft>
+			<onup>22</onup>
         </control>
 	    </control>
       </control>
diff --git a/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp b/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
index 57a2222..ed9c522 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
+++ b/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
@@ -32,11 +32,12 @@
 #include "D3DX9.h"
 #endif
 
-#define CONTROL_RENDER_ADDON             9
-#define CONTROL_MENU                    10
-#define CONTROL_OSD_BUTTON              13
-#define CONTROL_SPIN_TIMESHIFT_MODE     21
-#define CONTROL_SPIN_TIMESHIFT_BUFFER   22
+#define CONTROL_RENDER_ADDON                  9
+#define CONTROL_MENU                         10
+#define CONTROL_OSD_BUTTON                   13
+#define CONTROL_SPIN_TIMESHIFT_MODE          21
+#define CONTROL_SPIN_TIMESHIFT_BUFFER_RAM    22
+#define CONTROL_SPIN_TIMESHIFT_BUFFER_FILE   23
 
 #define ACTION_NONE                    0
 #define ACTION_MOVE_LEFT               1
@@ -688,7 +689,8 @@ bool cVNSIAdmin::Open(const std::string& hostname, int port, const char* name)
 
   GUI->Control_releaseRendering(m_renderControl);
   GUI->Control_releaseSpin(m_spinTimeshiftMode);
-  GUI->Control_releaseSpin(m_spinTimeshiftBuffer);
+  GUI->Control_releaseSpin(m_spinTimeshiftBufferRam);
+  GUI->Control_releaseSpin(m_spinTimeshiftBufferFile);
   GUI->Window_destroy(m_window);
   Close();
 
@@ -710,9 +712,9 @@ bool cVNSIAdmin::OnClick(int controlId)
     }
     return true;
   }
-  if (controlId == CONTROL_SPIN_TIMESHIFT_BUFFER)
+  else if (controlId == CONTROL_SPIN_TIMESHIFT_BUFFER_RAM)
   {
-    int value = m_spinTimeshiftBuffer->GetValue();
+    int value = m_spinTimeshiftBufferRam->GetValue();
     cRequestPacket vrp;
     if (!vrp.init(VNSI_STORESETUP) ||
         !vrp.add_String(CONFNAME_TIMESHIFTBUFFERSIZE) ||
@@ -723,6 +725,19 @@ bool cVNSIAdmin::OnClick(int controlId)
     }
     return true;
   }
+  else if (controlId == CONTROL_SPIN_TIMESHIFT_BUFFER_FILE)
+  {
+    int value = m_spinTimeshiftBufferFile->GetValue();
+    cRequestPacket vrp;
+    if (!vrp.init(VNSI_STORESETUP) ||
+        !vrp.add_String(CONFNAME_TIMESHIFTBUFFERFILESIZE) ||
+        !vrp.add_U32(value) ||
+        ReadSuccess(&vrp))
+    {
+      XBMC->Log(LOG_ERROR, "%s - failed to set timeshift buffer file", __FUNCTION__);
+    }
+    return true;
+  }
   return false;
 }
 
@@ -790,13 +805,13 @@ bool cVNSIAdmin::OnInit()
     delete resp;
   }
 
-  m_spinTimeshiftBuffer = GUI->Control_getSpin(m_window, CONTROL_SPIN_TIMESHIFT_BUFFER);
-  m_spinTimeshiftBuffer->Clear();
+  m_spinTimeshiftBufferRam = GUI->Control_getSpin(m_window, CONTROL_SPIN_TIMESHIFT_BUFFER_RAM);
+  m_spinTimeshiftBufferRam->Clear();
   char buffer[8];
   for (int i = 1; i <= 20; i++)
   {
     sprintf(buffer, "%d", i);
-    m_spinTimeshiftBuffer->AddLabel(buffer, i);
+    m_spinTimeshiftBufferRam->AddLabel(buffer, i);
   }
 
   {
@@ -813,10 +828,34 @@ bool cVNSIAdmin::OnInit()
       return false;
     }
     int mode = resp->extract_U32();
-    m_spinTimeshiftBuffer->SetValue(mode);
+    m_spinTimeshiftBufferRam->SetValue(mode);
     delete resp;
   }
+  m_spinTimeshiftBufferFile = GUI->Control_getSpin(m_window, CONTROL_SPIN_TIMESHIFT_BUFFER_FILE);
+  m_spinTimeshiftBufferFile->Clear();
+  for (int i = 1; i <= 10; i++)
+  {
+    sprintf(buffer, "%d", i);
+    m_spinTimeshiftBufferFile->AddLabel(buffer, i);
+  }
 
+  {
+    cRequestPacket vrp;
+    if (!vrp.init(VNSI_GETSETUP) || !vrp.add_String(CONFNAME_TIMESHIFTBUFFERFILESIZE))
+    {
+      XBMC->Log(LOG_ERROR, "%s - failed to get timeshift buffer (file) size", __FUNCTION__);
+      return false;
+    }
+    cResponsePacket *resp = ReadResult(&vrp);
+    if (!resp)
+    {
+      XBMC->Log(LOG_ERROR, "%s - failed to get timeshift buffer (file) size", __FUNCTION__);
+      return false;
+    }
+    int mode = resp->extract_U32();
+    m_spinTimeshiftBufferFile->SetValue(mode);
+    delete resp;
+  }
   return true;
 }
 
diff --git a/addons/pvr.vdr.vnsi/src/VNSIAdmin.h b/addons/pvr.vdr.vnsi/src/VNSIAdmin.h
index ce9f6d5..20af095 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIAdmin.h
+++ b/addons/pvr.vdr.vnsi/src/VNSIAdmin.h
@@ -66,7 +66,8 @@ class cVNSIAdmin : public cVNSIData
   CAddonGUIWindow *m_window;
   CAddonGUIRenderingControl *m_renderControl;
   CAddonGUISpinControl *m_spinTimeshiftMode;
-  CAddonGUISpinControl *m_spinTimeshiftBuffer;
+  CAddonGUISpinControl *m_spinTimeshiftBufferRam;
+  CAddonGUISpinControl *m_spinTimeshiftBufferFile;
   bool m_bIsOsdControl;
   bool m_bIsOsdDirty;
   int m_width, m_height;
diff --git a/addons/pvr.vdr.vnsi/src/VNSIDemux.cpp b/addons/pvr.vdr.vnsi/src/VNSIDemux.cpp
index c116f43..75df4c5 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIDemux.cpp
+++ b/addons/pvr.vdr.vnsi/src/VNSIDemux.cpp
@@ -176,9 +176,7 @@ bool cVNSIDemux::SeekTime(int time, bool backwards, double *startpts)
 {
   cRequestPacket vrp;
 
-  XBMC->Log(LOG_NOTICE,"----------- seek pts1: %ld", time);
   int64_t seek_pts = (int64_t)time * 1000;
-  XBMC->Log(LOG_NOTICE,"----------- seek pts: %ld", seek_pts);
   if (startpts)
     *startpts = seek_pts;
 
diff --git a/addons/pvr.vdr.vnsi/src/client.cpp b/addons/pvr.vdr.vnsi/src/client.cpp
index 1929525..b490759 100644
--- a/addons/pvr.vdr.vnsi/src/client.cpp
+++ b/addons/pvr.vdr.vnsi/src/client.cpp
@@ -183,7 +183,7 @@ ADDON_STATUS ADDON_Create(void* hdl, void* props)
   PVR_MENUHOOK hook;
   hook.iHookId = 1;
   hook.category = PVR_MENUHOOK_SETTING;
-  hook.iLocalizedStringId = 30100;
+  hook.iLocalizedStringId = 30107;
   PVR->AddMenuHook(&hook);
 
   m_CurStatus = ADDON_STATUS_OK;
diff --git a/addons/pvr.vdr.vnsi/src/vnsicommand.h b/addons/pvr.vdr.vnsi/src/vnsicommand.h
index d49ae46..68126c7 100644
--- a/addons/pvr.vdr.vnsi/src/vnsicommand.h
+++ b/addons/pvr.vdr.vnsi/src/vnsicommand.h
@@ -39,6 +39,7 @@
 #define CONFNAME_PMTTIMEOUT "PmtTimeout"
 #define CONFNAME_TIMESHIFT "Timeshift"
 #define CONFNAME_TIMESHIFTBUFFERSIZE "TimeshiftBufferSize"
+#define CONFNAME_TIMESHIFTBUFFERFILESIZE "TimeshiftBufferFileSize"
 
 /* OPCODE 1 - 19: VNSI network functions for general purpose */
 #define VNSI_LOGIN                 1
-- 
1.8.1.6


From bac0a9b0625c1ecaa8952057e40cacb3c4b2e541 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Thu, 7 Mar 2013 19:19:44 +0100
Subject: [PATCH 19/63] vdr-plugin-vnsiserver: replay recording in progress

---
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c   |   5 +-
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h   |   1 +
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.c |  43 ++-
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.h |   4 +-
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c  | 108 ++++++--
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h  |   3 +
 .../vdr-plugin-vnsiserver/videobuffer.c            | 304 ++++++++++++++++++++-
 .../vdr-plugin-vnsiserver/videobuffer.h            |   5 +
 .../vdr-plugin-vnsiserver/vnsiclient.c             |   1 +
 9 files changed, 443 insertions(+), 31 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
index b943941..718db43 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
@@ -86,7 +86,10 @@ int cVNSIDemuxer::Read(sStreamPacket *packet)
 
   // read TS Packet from buffer
   len = m_VideoBuffer->Read(&buf, TS_SIZE);
-  if (len != TS_SIZE)
+  // eof
+  if (len == -2)
+    return -2;
+  else if (len != TS_SIZE)
     return -1;
 
   int ts_pid = TsPid(buf);
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
index a42aa54..add888d 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
@@ -59,6 +59,7 @@ class cVNSIDemuxer
   void Close();
   bool SeekTime(int64_t time);
   uint32_t GetSerial() { return m_MuxPacketSerial; }
+  void SetSerial(uint32_t serial) { m_MuxPacketSerial = serial; }
 
 protected:
   bool EnsureParsers();
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.c
index 9af82f7..f027cb4 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.c
@@ -34,11 +34,12 @@
 #include <sys/stat.h>
 #include <unistd.h>
 
-cRecPlayer::cRecPlayer(cRecording* rec)
+cRecPlayer::cRecPlayer(cRecording* rec, bool inProgress)
 {
   m_file          = -1;
   m_fileOpen      = -1;
   m_recordingFilename = strdup(rec->FileName());
+  m_inProgress = inProgress;
 
   // FIXME find out max file path / name lengths
 #if VDRVERSNUM < 10703
@@ -94,6 +95,39 @@ void cRecPlayer::scan()
   INFOLOG("total frames: %u", m_totalFrames);
 }
 
+void cRecPlayer::reScan()
+{
+  struct stat s;
+
+  m_totalLength = 0;
+
+  for(int i = 0; ; i++) // i think we only need one possible loop
+  {
+    fileNameFromIndex(i);
+
+    if(stat(m_fileName, &s) == -1) {
+      break;
+    }
+
+    cSegment* segment;
+    if (m_segments.Size() < i+1)
+    {
+      cSegment* segment = new cSegment();
+      m_segments.Append(segment);
+      segment->start = m_totalLength;
+    }
+    else
+      segment = m_segments[i];
+
+    segment->end = segment->start + s.st_size;
+
+    m_totalLength += s.st_size;
+  }
+
+  m_totalFrames = m_indexFile->Last();
+}
+
+
 cRecPlayer::~cRecPlayer()
 {
   cleanup();
@@ -199,8 +233,11 @@ int cRecPlayer::getBlock(unsigned char* buffer, uint64_t position, int amount)
     return 0;
   }
 
-  // Tell linux not to bother keeping the data in the FS cache
-  posix_fadvise(m_file, filePosition, bytes_read, POSIX_FADV_DONTNEED);
+  if (!m_inProgress)
+  {
+    // Tell linux not to bother keeping the data in the FS cache
+    posix_fadvise(m_file, filePosition, bytes_read, POSIX_FADV_DONTNEED);
+  }
 
   // divide and conquer
   if(bytes_read < amount) {
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.h
index a94e0d7..784489c 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.h
@@ -47,7 +47,7 @@ class cSegment
 class cRecPlayer
 {
 public:
-  cRecPlayer(cRecording* rec);
+  cRecPlayer(cRecording* rec, bool inProgress = false);
   ~cRecPlayer();
   uint64_t getLengthBytes();
   uint32_t getLengthFrames();
@@ -57,6 +57,7 @@ class cRecPlayer
   void closeFile();
 
   void scan();
+  void reScan();
   uint64_t positionFromFrameNumber(uint32_t frameNumber);
   uint32_t frameNumberFromPosition(uint64_t position);
   bool getNextIFrame(uint32_t frameNumber, uint32_t direction, uint64_t* rfilePosition, uint32_t* rframeNumber, uint32_t* rframeLength);
@@ -75,6 +76,7 @@ class cRecPlayer
   uint32_t    m_totalFrames;
   char       *m_recordingFilename;
   bool        m_pesrecording;
+  bool        m_inProgress;
 };
 
 #endif // VNSI_RECPLAYER_H
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
index 5b92cfd..d28ecfa 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
@@ -53,6 +53,7 @@
   m_startup         = true;
   m_SignalLost      = false;
   m_IFrameSeen      = false;
+  m_VideoBuffer     = NULL;
 
   memset(&m_FrontendInfo, 0, sizeof(m_FrontendInfo));
 
@@ -65,18 +66,82 @@
   DEBUGLOG("Started to delete live streamer");
 
   Cancel(5);
+  Close();
 
+  DEBUGLOG("Finished to delete live streamer");
+}
+
+bool cLiveStreamer::Open(int serial)
+{
+  Close();
+
+  bool recording = false;
+  if (serial == -1)
+  {
+    cTimer *activeTimer = Timers.GetNextActiveTimer();
+
+    if (activeTimer &&
+        activeTimer->Recording() &&
+        activeTimer->Channel() == m_Channel)
+    {
+      Recordings.Load();
+      cRecording matchRec(activeTimer, activeTimer->Event());
+      cRecording *rec;
+      {
+        cThreadLock RecordingsLock(&Recordings);
+        rec = Recordings.GetByName(matchRec.FileName());
+        if (!rec)
+        {
+          return false;
+        }
+      }
+      m_VideoBuffer = cVideoBuffer::Create(rec);
+      recording = true;
+    }
+  }
+  if (!recording)
+  {
+    m_VideoBuffer = cVideoBuffer::Create(m_ClientID);
+  }
+
+  if (!m_VideoBuffer)
+    return false;
+
+  if (!recording)
+  {
+    if (m_Channel && ((m_Channel->Source() >> 24) == 'V'))
+      m_IsMPEGPS = true;
+
+    if (!m_VideoInput.Open(m_Channel, m_Priority, m_VideoBuffer))
+    {
+      ERRORLOG("Can't switch to channel %i - %s", m_Channel->Number(), m_Channel->Name());
+      return false;
+    }
+  }
+
+  m_Demuxer.Open(*m_Channel, m_VideoBuffer);
+  if (serial >= 0)
+    m_Demuxer.SetSerial(serial);
+
+  return true;
+}
+
+void cLiveStreamer::Close(void)
+{
+  INFOLOG("LiveStreamer::Close - close");
   m_VideoInput.Close();
   m_Demuxer.Close();
-  delete m_VideoBuffer;
+  if (m_VideoBuffer)
+  {
+    delete m_VideoBuffer;
+    m_VideoBuffer = NULL;
+  }
 
   if (m_Frontend >= 0)
   {
     close(m_Frontend);
     m_Frontend = -1;
   }
-
-  DEBUGLOG("Finished to delete live streamer");
 }
 
 void cLiveStreamer::Action(void)
@@ -110,7 +175,7 @@ void cLiveStreamer::Action(void)
         sendSignalInfo();
       }
     }
-    else if (ret < 0)
+    else if (ret == -1)
     {
       // no data
       usleep(10000);
@@ -122,7 +187,13 @@ void cLiveStreamer::Action(void)
         m_SignalLost = true;
       }
     }
+    else if (ret == -2)
+    {
+      if (!Open(m_Demuxer.GetSerial()))
+        break;
+    }
   }
+  Close();
   INFOLOG("exit streamer thread");
 }
 
@@ -134,32 +205,23 @@ bool cLiveStreamer::StreamChannel(const cChannel *channel, int priority, cxSocke
     return false;
   }
 
-  m_VideoBuffer = cVideoBuffer::Create(m_ClientID);
   m_Channel   = channel;
+  m_Priority  = priority;
   m_Socket    = Socket;
   m_Device = cDevice::GetDevice(m_Channel, priority, true);
 
-  if (m_Channel && ((m_Channel->Source() >> 24) == 'V')) m_IsMPEGPS = true;
-
-  if (m_VideoInput.Open(channel, priority, m_VideoBuffer))
-  {
-    m_Demuxer.Open(*m_Channel, m_VideoBuffer);
+  if (!Open())
+    return false;
 
-    // Send the OK response here, that it is before the Stream end message
-    resp->add_U32(VNSI_RET_OK);
-    resp->finalise();
-    m_Socket->write(resp->getPtr(), resp->getLen());
+  // Send the OK response here, that it is before the Stream end message
+  resp->add_U32(VNSI_RET_OK);
+  resp->finalise();
+  m_Socket->write(resp->getPtr(), resp->getLen());
 
-    Activate(true);
+  Activate(true);
 
-    INFOLOG("Successfully switched to channel %i - %s", m_Channel->Number(), m_Channel->Name());
-    return true;
-  }
-  else
-  {
-    ERRORLOG("Can't switch to channel %i - %s", m_Channel->Number(), m_Channel->Name());
-  }
-  return false;
+  INFOLOG("Successfully switched to channel %i - %s", m_Channel->Number(), m_Channel->Name());
+  return true;
 }
 
 inline void cLiveStreamer::Activate(bool On)
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h
index 82cbfa7..09ccb55 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h
@@ -77,9 +77,12 @@ class cLiveStreamer : public cThread
   cVNSIDemuxer      m_Demuxer;
   cVideoBuffer     *m_VideoBuffer;
   cVideoInput       m_VideoInput;
+  int               m_Priority;
 
 protected:
   virtual void Action(void);
+  bool Open(int serial = -1);
+  void Close();
 
 public:
   cLiveStreamer(int clientID, uint32_t timeout = 0);
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
index a3a8f6e..d760837 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
@@ -21,10 +21,12 @@
 #include "videobuffer.h"
 #include "config.h"
 #include "vnsi.h"
+#include "recplayer.h"
 
 #include <vdr/ringbuffer.h>
 #include <vdr/remux.h>
 #include <vdr/videodir.h>
+#include <vdr/recording.h>
 
 #include <sys/types.h>
 #include <sys/stat.h>
@@ -113,7 +115,7 @@ class cVideoBufferTimeshift : public cVideoBuffer
 protected:
   cVideoBufferTimeshift();
   virtual bool Init() = 0;
-  off_t Available();
+  virtual off_t Available();
   off_t m_BufferSize;
   off_t m_WritePtr;
   off_t m_ReadPtr;
@@ -323,6 +325,7 @@ class cVideoBufferFile : public cVideoBufferTimeshift
   virtual void SetPos(size_t pos);
 
 protected:
+  cVideoBufferFile();
   cVideoBufferFile(int clientID);
   virtual ~cVideoBufferFile();
   virtual bool Init();
@@ -335,6 +338,11 @@ class cVideoBufferFile : public cVideoBufferTimeshift
   unsigned int m_ReadCacheSize;
 };
 
+cVideoBufferFile::cVideoBufferFile()
+{
+
+}
+
 cVideoBufferFile::cVideoBufferFile(int clientID)
 {
   m_ClientID = clientID;
@@ -376,8 +384,8 @@ bool cVideoBufferFile::Init()
     return false;
   }
 
-  m_WritePtr = 200;
-  m_ReadPtr = 200;
+  m_WritePtr = 0;
+  m_ReadPtr = 0;
   m_ReadCacheSize = 0;
   return true;
 }
@@ -548,6 +556,270 @@ int cVideoBufferFile::Read(uint8_t **buf, unsigned int size)
 
 //-----------------------------------------------------------------------------
 
+class cVideoBufferRecording : public cVideoBufferFile
+{
+friend class cVideoBuffer;
+public:
+  virtual size_t GetPosMax();
+  virtual void Put(uint8_t *buf, unsigned int size);
+  virtual int Read(uint8_t **buf, unsigned int size);
+  int ReadBlock(uint8_t **buf, unsigned int size);
+
+protected:
+  cVideoBufferRecording(cRecording *rec);
+  virtual ~cVideoBufferRecording();
+  virtual bool Init();
+  virtual off_t Available();
+  off_t GetPosEnd();
+  cRecPlayer *m_RecPlayer;
+  cRecording *m_Recording;
+  cTimeMs m_Timer;
+  bool m_CheckEof;
+};
+
+cVideoBufferRecording::cVideoBufferRecording(cRecording *rec)
+{
+  m_Recording = rec;
+  m_ReadCacheSize = 0;
+}
+
+cVideoBufferRecording::~cVideoBufferRecording()
+{
+  INFOLOG("delete cVideoBufferRecording");
+  if (m_RecPlayer)
+    delete m_RecPlayer;
+}
+
+size_t cVideoBufferRecording::GetPosMax()
+{
+  m_RecPlayer->reScan();
+  m_WritePtr = m_RecPlayer->getLengthBytes();
+  return cVideoBufferTimeshift::GetPosMax();
+}
+
+void cVideoBufferRecording::Put(uint8_t *buf, unsigned int size)
+{
+
+}
+
+bool cVideoBufferRecording::Init()
+{
+  m_RecPlayer = new cRecPlayer(m_Recording);
+  if (!m_RecPlayer)
+    return false;
+
+  m_WritePtr = 0;
+  m_ReadPtr = 0;
+  m_ReadCacheSize = 0;
+  m_CheckEof = false;
+  return true;
+}
+
+off_t cVideoBufferRecording::Available()
+{
+  m_RecPlayer->reScan();
+  m_BufferSize = m_WritePtr = m_RecPlayer->getLengthBytes();
+  // INFOLOG("--------- length: %ld", m_BufferSize);
+  return cVideoBufferTimeshift::Available();
+}
+
+int cVideoBufferRecording::ReadBlock(uint8_t **buf, unsigned int size)
+{
+  // move read pointer
+  if (m_BytesConsumed)
+  {
+    m_ReadPtr += m_BytesConsumed;
+    if (m_ReadPtr >= m_BufferSize)
+    {
+      m_ReadPtr -= m_BufferSize;
+      ERRORLOG("cVideoBufferRecording::ReadBlock - unknown error");
+    }
+    m_ReadCachePtr += m_BytesConsumed;
+  }
+  m_BytesConsumed = 0;
+
+  // check if we have anything to read
+  size_t readBytes;
+  if (m_ReadCacheSize && ((m_ReadCachePtr + m_Margin) <= m_ReadCacheSize))
+  {
+    readBytes = m_ReadCacheSize - m_ReadCachePtr;
+    *buf = m_ReadCache + m_ReadCachePtr;
+  }
+  else if ((readBytes = Available()) >= CACHE_SIZE)
+  {
+    if (m_ReadPtr + CACHE_SIZE <= m_BufferSize)
+    {
+      m_ReadCacheSize = m_RecPlayer->getBlock(m_ReadCache, m_ReadPtr, CACHE_SIZE);
+      if (m_ReadCacheSize != CACHE_SIZE)
+      {
+        ERRORLOG("Could not read file, size:  %d", m_ReadCacheSize);
+        m_ReadCacheSize = 0;
+        return 0;
+      }
+      readBytes = m_ReadCacheSize;
+      *buf = m_ReadCache;
+      m_ReadCachePtr = 0;
+      // INFOLOG("---------- read: %d", readBytes);
+    }
+    else
+    {
+      ERRORLOG("cVideoBufferRecording::ReadBlock - unknown error");
+      return 0;
+    }
+  }
+  else
+    return 0;
+
+  // Make sure we are looking at a TS packet
+  while (readBytes > TS_SIZE)
+  {
+    if ((*buf)[0] == TS_SYNC_BYTE && (*buf)[TS_SIZE] == TS_SYNC_BYTE)
+      break;
+    m_BytesConsumed++;
+    (*buf)++;
+    readBytes--;
+    INFOLOG("------------ skip byte");
+  }
+
+  if ((*buf)[0] != TS_SYNC_BYTE)
+  {
+    INFOLOG("------------ marker 11");
+    return 0;
+  }
+
+  m_BytesConsumed += TS_SIZE;
+  return TS_SIZE;
+}
+
+int cVideoBufferRecording::Read(uint8_t **buf, unsigned int size)
+{
+  cMutexLock lock(&m_Mutex);
+
+  int count = ReadBlock(buf, size);
+
+  // check for end of file
+  if (count != TS_SIZE)
+  {
+    if (m_CheckEof && m_Timer.TimedOut())
+    {
+      INFOLOG("Recoding - end of file");
+      return -2;
+    }
+    else if (!m_CheckEof)
+    {
+      m_CheckEof = true;
+      m_Timer.Set(3000);
+    }
+  }
+  else
+    m_CheckEof = false;
+
+  return count;
+}
+
+//-----------------------------------------------------------------------------
+
+class cVideoBufferTest : public cVideoBufferFile
+{
+friend class cVideoBuffer;
+public:
+  virtual size_t GetPosMax();
+  virtual void Put(uint8_t *buf, unsigned int size);
+  virtual int Read(uint8_t **buf, unsigned int size);
+
+protected:
+  cVideoBufferTest(cString filename);
+  virtual ~cVideoBufferTest();
+  virtual bool Init();
+  virtual off_t Available();
+  off_t GetPosEnd();
+  cTimeMs m_Timer;
+  bool m_CheckEof;
+};
+
+cVideoBufferTest::cVideoBufferTest(cString filename)
+{
+  m_Filename = filename;
+  m_Fd = 0;
+  m_ReadCacheSize = 0;
+}
+
+cVideoBufferTest::~cVideoBufferTest()
+{
+  if (m_Fd)
+  {
+    close(m_Fd);
+    m_Fd = 0;
+  }
+}
+
+size_t cVideoBufferTest::GetPosMax()
+{
+  m_WritePtr = GetPosEnd();
+  return cVideoBufferTimeshift::GetPosMax();
+}
+
+off_t cVideoBufferTest::GetPosEnd()
+{
+  off_t cur = lseek(m_Fd, 0, SEEK_CUR);
+  off_t end = lseek(m_Fd, 0, SEEK_END);
+  lseek(m_Fd, cur, SEEK_SET);
+  return end;
+}
+
+void cVideoBufferTest::Put(uint8_t *buf, unsigned int size)
+{
+
+}
+
+bool cVideoBufferTest::Init()
+{
+  m_Fd = open(m_Filename, O_RDONLY);
+  if (m_Fd == -1)
+  {
+    ERRORLOG("Could not open file: %s", (const char*)m_Filename);
+    return false;
+  }
+
+  m_WritePtr = 0;
+  m_ReadPtr = 0;
+  m_ReadCacheSize = 0;
+  m_CheckEof = false;
+  return true;
+}
+
+off_t cVideoBufferTest::Available()
+{
+  m_BufferSize = m_WritePtr = GetPosEnd();
+  return cVideoBufferTimeshift::Available();
+}
+
+int cVideoBufferTest::Read(uint8_t **buf, unsigned int size)
+{
+  int count = cVideoBufferFile::Read(buf, size);
+
+  // check for end of file
+  if (count != TS_SIZE)
+  {
+    if (m_CheckEof && m_Timer.TimedOut())
+    {
+      INFOLOG("Recoding - end of file");
+      return -2;
+    }
+    else if (!m_CheckEof)
+    {
+      m_CheckEof = true;
+      m_Timer.Set(1000);
+    }
+  }
+  else
+    m_CheckEof = false;
+
+  return count;
+}
+
+//-----------------------------------------------------------------------------
+
 cVideoBuffer::cVideoBuffer()
 {
 }
@@ -591,3 +863,29 @@ cVideoBuffer* cVideoBuffer::Create(int clientID)
   else
     return NULL;
 }
+
+cVideoBuffer* cVideoBuffer::Create(cString filename)
+{
+  INFOLOG("Open recording: %s", (const char*)filename);
+  cVideoBufferTest *buffer = new cVideoBufferTest(filename);
+  if (!buffer->Init())
+  {
+    delete buffer;
+    return NULL;
+  }
+  else
+    return buffer;
+}
+
+cVideoBuffer* cVideoBuffer::Create(cRecording *rec)
+{
+  INFOLOG("Open recording: %s", rec->FileName());
+  cVideoBufferRecording *buffer = new cVideoBufferRecording(rec);
+  if (!buffer->Init())
+  {
+    delete buffer;
+    return NULL;
+  }
+  else
+    return buffer;
+}
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h
index 40649e2..12e885a 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h
@@ -22,12 +22,17 @@
 
 #include <stdint.h>
 #include <stdlib.h>
+#include <vdr/tools.h>
+
+class cRecording;
 
 class cVideoBuffer
 {
 public:
   virtual ~cVideoBuffer();
   static cVideoBuffer* Create(int clientID);
+  static cVideoBuffer* Create(cString filename);
+  static cVideoBuffer* Create(cRecording *rec);
   virtual void Put(uint8_t *buf, unsigned int size) = 0;
   virtual int Read(uint8_t **buf, unsigned int size) = 0;
   virtual size_t GetPosMin() { return 0; };
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
index 6c17f6f..dd32c89 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
@@ -1426,6 +1426,7 @@ bool cVNSIClient::processRECORDINGS_GetCount() /* OPCODE 101 */
 bool cVNSIClient::processRECORDINGS_GetList() /* OPCODE 102 */
 {
   cMutexLock lock(&m_timerLock);
+  cThreadLock RecordingsLock(&Recordings);
 
   for (cRecording *recording = Recordings.First(); recording; recording = Recordings.Next(recording))
   {
-- 
1.8.1.6


From ae7fc5012198f0937ff103fb2e3857f1b3e15ab6 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Fri, 8 Mar 2013 18:31:07 +0100
Subject: [PATCH 20/63] vdr-plugin-vnsiserver: set priority for livetv, allow
 interrupt by rocording

---
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/cxsocket.c  |   8 ++
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/cxsocket.h  |   1 +
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c  |   9 +-
 .../vdr-plugin-vnsiserver/videobuffer.c            | 110 ++++++++-------------
 .../vdr-plugin-vnsiserver/videobuffer.h            |   7 +-
 .../vdr-plugin-vnsiserver/videoinput.c             |   6 ++
 .../vdr-plugin-vnsiserver/videoinput.h             |   1 +
 .../vdr-plugin-vnsiserver/vnsiclient.c             |   7 +-
 .../vdr-plugin-vnsiserver/vnsiclient.h             |   2 +-
 .../vdr-plugin-vnsiserver/vnsiserver.c             |  25 +++--
 10 files changed, 95 insertions(+), 81 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/cxsocket.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/cxsocket.c
index b9638d3..6928f6e 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/cxsocket.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/cxsocket.c
@@ -63,6 +63,14 @@ void cxSocket::close() {
   }
 }
 
+void cxSocket::Shutdown()
+{
+  if(m_fd >= 0)
+  {
+    ::shutdown(m_fd, SHUT_RD);
+  }
+}
+
 void cxSocket::LockWrite()
 {
   m_MutexWrite.Lock();
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/cxsocket.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/cxsocket.h
index 9d0ecbd..22cfac3 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/cxsocket.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/cxsocket.h
@@ -46,6 +46,7 @@ class cxSocket
   ~cxSocket();
   void SetHandle(int h);
   void close(void);
+  void Shutdown(void);
   void LockWrite();
   void UnlockWrite();
   ssize_t read(void *buffer, size_t size, int timeout_ms = -1);
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
index d28ecfa..2d0f742 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
@@ -75,6 +75,10 @@ bool cLiveStreamer::Open(int serial)
 {
   Close();
 
+  m_Device = cDevice::GetDevice(m_Channel, m_Priority, true, true);
+  if (!m_Device)
+    return false;
+
   bool recording = false;
   if (serial == -1)
   {
@@ -190,10 +194,12 @@ void cLiveStreamer::Action(void)
     else if (ret == -2)
     {
       if (!Open(m_Demuxer.GetSerial()))
+      {
+        m_Socket->Shutdown();
         break;
+      }
     }
   }
-  Close();
   INFOLOG("exit streamer thread");
 }
 
@@ -208,7 +214,6 @@ bool cLiveStreamer::StreamChannel(const cChannel *channel, int priority, cxSocke
   m_Channel   = channel;
   m_Priority  = priority;
   m_Socket    = Socket;
-  m_Device = cDevice::GetDevice(m_Channel, priority, true);
 
   if (!Open())
     return false;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
index d760837..e0b3fac 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
@@ -37,7 +37,7 @@ class cVideoBufferSimple : public cVideoBuffer
 friend class cVideoBuffer;
 public:
   virtual void Put(uint8_t *buf, unsigned int size);
-  virtual int Read(uint8_t **buf, unsigned int size);
+  virtual int ReadBlock(uint8_t **buf, unsigned int size);
 
 protected:
   cVideoBufferSimple();
@@ -64,7 +64,7 @@ void cVideoBufferSimple::Put(uint8_t *buf, unsigned int size)
   m_Buffer->Put(buf, size);
 }
 
-int cVideoBufferSimple::Read(uint8_t **buf, unsigned int size)
+int cVideoBufferSimple::ReadBlock(uint8_t **buf, unsigned int size)
 {
   int  readBytes;
   if (m_BytesConsumed)
@@ -190,7 +190,7 @@ class cVideoBufferRAM : public cVideoBufferTimeshift
 friend class cVideoBuffer;
 public:
   virtual void Put(uint8_t *buf, unsigned int size);
-  virtual int Read(uint8_t **buf, unsigned int size);
+  virtual int ReadBlock(uint8_t **buf, unsigned int size);
   virtual void SetPos(size_t pos);
 
 protected:
@@ -263,7 +263,7 @@ void cVideoBufferRAM::Put(uint8_t *buf, unsigned int size)
   }
 }
 
-int cVideoBufferRAM::Read(uint8_t **buf, unsigned int size)
+int cVideoBufferRAM::ReadBlock(uint8_t **buf, unsigned int size)
 {
   cMutexLock lock(&m_Mutex);
 
@@ -321,7 +321,7 @@ class cVideoBufferFile : public cVideoBufferTimeshift
 friend class cVideoBuffer;
 public:
   virtual void Put(uint8_t *buf, unsigned int size);
-  virtual int Read(uint8_t **buf, unsigned int size);
+  virtual int ReadBlock(uint8_t **buf, unsigned int size);
   virtual void SetPos(size_t pos);
 
 protected:
@@ -451,7 +451,7 @@ void cVideoBufferFile::Put(uint8_t *buf, unsigned int size)
   }
 }
 
-int cVideoBufferFile::Read(uint8_t **buf, unsigned int size)
+int cVideoBufferFile::ReadBlock(uint8_t **buf, unsigned int size)
 {
   cMutexLock lock(&m_Mutex);
 
@@ -562,8 +562,7 @@ class cVideoBufferRecording : public cVideoBufferFile
 public:
   virtual size_t GetPosMax();
   virtual void Put(uint8_t *buf, unsigned int size);
-  virtual int Read(uint8_t **buf, unsigned int size);
-  int ReadBlock(uint8_t **buf, unsigned int size);
+  virtual int ReadBlock(uint8_t **buf, unsigned int size);
 
 protected:
   cVideoBufferRecording(cRecording *rec);
@@ -573,8 +572,6 @@ class cVideoBufferRecording : public cVideoBufferFile
   off_t GetPosEnd();
   cRecPlayer *m_RecPlayer;
   cRecording *m_Recording;
-  cTimeMs m_Timer;
-  bool m_CheckEof;
 };
 
 cVideoBufferRecording::cVideoBufferRecording(cRecording *rec)
@@ -604,14 +601,14 @@ void cVideoBufferRecording::Put(uint8_t *buf, unsigned int size)
 
 bool cVideoBufferRecording::Init()
 {
-  m_RecPlayer = new cRecPlayer(m_Recording);
+  m_RecPlayer = new cRecPlayer(m_Recording, true);
   if (!m_RecPlayer)
     return false;
 
   m_WritePtr = 0;
   m_ReadPtr = 0;
   m_ReadCacheSize = 0;
-  m_CheckEof = false;
+  m_InputAttached = false;
   return true;
 }
 
@@ -625,6 +622,8 @@ off_t cVideoBufferRecording::Available()
 
 int cVideoBufferRecording::ReadBlock(uint8_t **buf, unsigned int size)
 {
+  cMutexLock lock(&m_Mutex);
+
   // move read pointer
   if (m_BytesConsumed)
   {
@@ -659,7 +658,6 @@ int cVideoBufferRecording::ReadBlock(uint8_t **buf, unsigned int size)
       readBytes = m_ReadCacheSize;
       *buf = m_ReadCache;
       m_ReadCachePtr = 0;
-      // INFOLOG("---------- read: %d", readBytes);
     }
     else
     {
@@ -691,32 +689,6 @@ int cVideoBufferRecording::ReadBlock(uint8_t **buf, unsigned int size)
   return TS_SIZE;
 }
 
-int cVideoBufferRecording::Read(uint8_t **buf, unsigned int size)
-{
-  cMutexLock lock(&m_Mutex);
-
-  int count = ReadBlock(buf, size);
-
-  // check for end of file
-  if (count != TS_SIZE)
-  {
-    if (m_CheckEof && m_Timer.TimedOut())
-    {
-      INFOLOG("Recoding - end of file");
-      return -2;
-    }
-    else if (!m_CheckEof)
-    {
-      m_CheckEof = true;
-      m_Timer.Set(3000);
-    }
-  }
-  else
-    m_CheckEof = false;
-
-  return count;
-}
-
 //-----------------------------------------------------------------------------
 
 class cVideoBufferTest : public cVideoBufferFile
@@ -725,7 +697,6 @@ class cVideoBufferTest : public cVideoBufferFile
 public:
   virtual size_t GetPosMax();
   virtual void Put(uint8_t *buf, unsigned int size);
-  virtual int Read(uint8_t **buf, unsigned int size);
 
 protected:
   cVideoBufferTest(cString filename);
@@ -733,8 +704,6 @@ class cVideoBufferTest : public cVideoBufferFile
   virtual bool Init();
   virtual off_t Available();
   off_t GetPosEnd();
-  cTimeMs m_Timer;
-  bool m_CheckEof;
 };
 
 cVideoBufferTest::cVideoBufferTest(cString filename)
@@ -784,7 +753,7 @@ bool cVideoBufferTest::Init()
   m_WritePtr = 0;
   m_ReadPtr = 0;
   m_ReadCacheSize = 0;
-  m_CheckEof = false;
+  m_InputAttached = false;
   return true;
 }
 
@@ -794,34 +763,12 @@ off_t cVideoBufferTest::Available()
   return cVideoBufferTimeshift::Available();
 }
 
-int cVideoBufferTest::Read(uint8_t **buf, unsigned int size)
-{
-  int count = cVideoBufferFile::Read(buf, size);
-
-  // check for end of file
-  if (count != TS_SIZE)
-  {
-    if (m_CheckEof && m_Timer.TimedOut())
-    {
-      INFOLOG("Recoding - end of file");
-      return -2;
-    }
-    else if (!m_CheckEof)
-    {
-      m_CheckEof = true;
-      m_Timer.Set(1000);
-    }
-  }
-  else
-    m_CheckEof = false;
-
-  return count;
-}
-
 //-----------------------------------------------------------------------------
 
 cVideoBuffer::cVideoBuffer()
 {
+  m_CheckEof = false;
+  m_InputAttached = true;
 }
 
 cVideoBuffer::~cVideoBuffer()
@@ -889,3 +836,32 @@ cVideoBuffer* cVideoBuffer::Create(cRecording *rec)
   else
     return buffer;
 }
+
+int cVideoBuffer::Read(uint8_t **buf, unsigned int size)
+{
+  int count = ReadBlock(buf, size);
+
+  // check for end of file
+  if (!m_InputAttached && count != TS_SIZE)
+  {
+    if (m_CheckEof && m_Timer.TimedOut())
+    {
+      INFOLOG("Recoding - end of file");
+      return -2;
+    }
+    else if (!m_CheckEof)
+    {
+      m_CheckEof = true;
+      m_Timer.Set(3000);
+    }
+  }
+  else
+    m_CheckEof = false;
+
+  return count;
+}
+
+void cVideoBuffer::AttachInput(bool attach)
+{
+  m_InputAttached = attach;
+}
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h
index 12e885a..cc15a6d 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h
@@ -34,13 +34,18 @@ class cVideoBuffer
   static cVideoBuffer* Create(cString filename);
   static cVideoBuffer* Create(cRecording *rec);
   virtual void Put(uint8_t *buf, unsigned int size) = 0;
-  virtual int Read(uint8_t **buf, unsigned int size) = 0;
+  virtual int ReadBlock(uint8_t **buf, unsigned int size) = 0;
   virtual size_t GetPosMin() { return 0; };
   virtual size_t GetPosMax() { return 0; };
   virtual size_t GetPosCur() { return 0; };
   virtual void GetPositions(size_t *cur, size_t *min,size_t *max) {};
   virtual void SetPos(size_t pos) {};
   virtual void SetCache(bool on) {};
+  int Read(uint8_t **buf, unsigned int size);
+  void AttachInput(bool attach);
 protected:
   cVideoBuffer();
+  cTimeMs m_Timer;
+  bool m_CheckEof;
+  bool m_InputAttached;
 };
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videoinput.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videoinput.c
index 7646454..45769ae 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videoinput.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videoinput.c
@@ -67,6 +67,7 @@ void cLiveReceiver::Receive(uchar *Data, int Length)
 
 inline void cLiveReceiver::Activate(bool On)
 {
+  m_VideoInput->Attach(On);
   DEBUGLOG("activate live receiver: %d", On);
 }
 
@@ -520,6 +521,11 @@ inline void cVideoInput::Receive(uchar *data, int length)
   m_VideoBuffer->Put(data, length);
 }
 
+inline void cVideoInput::Attach(bool on)
+{
+  m_VideoBuffer->AttachInput(on);
+}
+
 void cVideoInput::Action()
 {
   cTimeMs starttime;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videoinput.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videoinput.h
index a78cf10..19a1d7d 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videoinput.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videoinput.h
@@ -43,6 +43,7 @@ class cVideoInput : public cThread
   void PmtChange(int pidChange);
   cChannel *PmtChannel();
   void Receive(uchar *data, int length);
+  void Attach(bool on);
   cDevice          *m_Device;
   cLivePatFilter   *m_PatFilter;
   cLiveReceiver    *m_Receiver;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
index dd32c89..85371bc 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
@@ -177,10 +177,10 @@ void cVNSIClient::Action(void)
   }
 }
 
-bool cVNSIClient::StartChannelStreaming(const cChannel *channel, uint32_t timeout)
+bool cVNSIClient::StartChannelStreaming(const cChannel *channel, int32_t priority, uint32_t timeout)
 {
   m_Streamer    = new cLiveStreamer(m_Id, timeout);
-  m_isStreaming = m_Streamer->StreamChannel(channel, 50, &m_socket, m_resp);
+  m_isStreaming = m_Streamer->StreamChannel(channel, priority, &m_socket, m_resp);
   return m_isStreaming;
 }
 
@@ -701,6 +701,7 @@ bool cVNSIClient::process_StoreSetup() /* OPCODE 9 */
 bool cVNSIClient::processChannelStream_Open() /* OPCODE 20 */
 {
   uint32_t uid = m_req->extract_U32();
+  int32_t priority = m_req->extract_S32();
   uint32_t timeout = m_req->extract_U32();
 
   if(timeout == 0)
@@ -726,7 +727,7 @@ bool cVNSIClient::processChannelStream_Open() /* OPCODE 20 */
   }
   else
   {
-    if (StartChannelStreaming(channel, timeout))
+    if (StartChannelStreaming(channel, priority, timeout))
     {
       INFOLOG("Started streaming of channel %s (timeout %i seconds)", channel->Name(), timeout);
       // return here without sending the response
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.h
index c1611bb..8ae849d 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.h
@@ -94,7 +94,7 @@ class cVNSIClient : public cThread
 
   void SetLoggedIn(bool yesNo) { m_loggedIn = yesNo; }
   void SetStatusInterface(bool yesNo) { m_StatusInterfaceEnabled = yesNo; }
-  bool StartChannelStreaming(const cChannel *channel, uint32_t timeout);
+  bool StartChannelStreaming(const cChannel *channel, int32_t priority, uint32_t timeout);
   void StopChannelStreaming();
 
 private:
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiserver.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiserver.c
index f268213..acea817 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiserver.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiserver.c
@@ -180,6 +180,12 @@ void cVNSIServer::Action(void)
   fd_set fds;
   struct timeval tv;
 
+  // initial time for channels change
+  struct timespec channelsUpdate;
+  channelsUpdate.tv_sec = 0;
+  channelsUpdate.tv_nsec = 0;
+  cTimeMs chanTimer(0);
+
   // get initial state of the recordings
   int recState = -1;
   Recordings.StateChanged(recState);
@@ -226,16 +232,21 @@ void cVNSIServer::Action(void)
       }
 
       // trigger clients to reload the modified channel list
-      if(m_clients.size() > 0)
+      if(m_clients.size() > 0 && chanTimer.TimedOut())
       {
-        Channels.Lock(false);
-        if(Channels.Modified() != 0)
+        struct stat s;
+        if(stat(Channels.FileName(), &s) != -1)
         {
-          INFOLOG("Requesting clients to reload channel list");
-          for (ClientList::iterator i = m_clients.begin(); i != m_clients.end(); i++)
-            (*i)->ChannelChange();
+          if ((s.st_mtim.tv_sec != channelsUpdate.tv_sec) &&
+              (s.st_mtim.tv_nsec != channelsUpdate.tv_nsec))
+          {
+            INFOLOG("Requesting clients to reload channel list");
+            for (ClientList::iterator i = m_clients.begin(); i != m_clients.end(); i++)
+              (*i)->ChannelChange();
+            channelsUpdate = s.st_mtim;
+          }
         }
-        Channels.Unlock();
+        chanTimer.Set(5000);
       }
 
       // reset inactivity timeout as long as there are clients connected
-- 
1.8.1.6


From 09b13dd1fe29533ebd89e63ad29b9dad9544e06a Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Fri, 8 Mar 2013 18:36:53 +0100
Subject: [PATCH 21/63] vnsi: set priority for live tv

---
 addons/pvr.vdr.vnsi/addon/resources/settings.xml | 2 +-
 addons/pvr.vdr.vnsi/src/VNSIDemux.cpp            | 5 ++++-
 2 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/addon/resources/settings.xml b/addons/pvr.vdr.vnsi/addon/resources/settings.xml
index 557f54c..ab8752e 100644
--- a/addons/pvr.vdr.vnsi/addon/resources/settings.xml
+++ b/addons/pvr.vdr.vnsi/addon/resources/settings.xml
@@ -2,7 +2,7 @@
 <settings>
     <setting id="host" type="text" label="30000" default="127.0.0.1" />
     <setting id="port" type="number" label="30001" default="34890" />
-    <setting id="priority" type="enum" label="30002" values="-1|0|5|10|15|20|25|30|35|40|45|50|55|60|65|70|75|80|85|90|95|99|100" default="99"/>
+    <setting id="priority" type="enum" label="30002" values="-1|0|5|10|15|20|25|30|35|40|45|50|55|60|65|70|75|80|85|90|95|99|100" default="0"/>
     <setting id="convertchar" type="bool" label="30003" default="true" />
     <setting id="timeout" type="enum" label="30004" values="0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15" default="3"/>
     <setting id="handlemessages" type="bool" label="30005" default="true" />
diff --git a/addons/pvr.vdr.vnsi/src/VNSIDemux.cpp b/addons/pvr.vdr.vnsi/src/VNSIDemux.cpp
index 75df4c5..4f851cc 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIDemux.cpp
+++ b/addons/pvr.vdr.vnsi/src/VNSIDemux.cpp
@@ -227,7 +227,10 @@ bool cVNSIDemux::SwitchChannel(const PVR_CHANNEL &channelinfo)
   delete resp;
 
   cRequestPacket vrp2;
-  if (!vrp2.init(VNSI_CHANNELSTREAM_OPEN) || !vrp2.add_U32(channelinfo.iUniqueId) || !ReadSuccess(&vrp2))
+  if (!vrp2.init(VNSI_CHANNELSTREAM_OPEN) ||
+      !vrp2.add_U32(channelinfo.iUniqueId) ||
+      !vrp2.add_S32(g_iPriority) ||
+      !ReadSuccess(&vrp2))
   {
     XBMC->Log(LOG_ERROR, "%s - failed to set channel", __FUNCTION__);
     return false;
-- 
1.8.1.6


From fb830881b3bc7349d3b53a69e786800a944c6526 Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Fri, 8 Mar 2013 19:10:37 +0100
Subject: [PATCH 22/63] vnsi: check version of guiaddon lib

---
 addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp | 12 +++++++++++-
 addons/pvr.vdr.vnsi/src/VNSIAdmin.h   |  2 ++
 2 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp b/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
index ed9c522..87ed9e7 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
+++ b/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
@@ -687,7 +687,10 @@ bool cVNSIAdmin::Open(const std::string& hostname, int port, const char* name)
   m_window->CBOnAction= OnActionCB;
   m_window->DoModal();
 
+#if defined(XBMC_GUI_API_VERSION)
   GUI->Control_releaseRendering(m_renderControl);
+#endif
+
   GUI->Control_releaseSpin(m_spinTimeshiftMode);
   GUI->Control_releaseSpin(m_spinTimeshiftBufferRam);
   GUI->Control_releaseSpin(m_spinTimeshiftBufferFile);
@@ -743,6 +746,7 @@ bool cVNSIAdmin::OnClick(int controlId)
 
 bool cVNSIAdmin::OnFocus(int controlId)
 {
+#if defined(XBMC_GUI_API_VERSION)
   if (controlId == CONTROL_OSD_BUTTON)
   {
     m_window->SetControlLabel(CONTROL_OSD_BUTTON, XBMC->GetLocalizedString(30102));
@@ -757,12 +761,13 @@ bool cVNSIAdmin::OnFocus(int controlId)
     m_bIsOsdControl = false;
     return true;
   }
-
+#endif
   return false;
 }
 
 bool cVNSIAdmin::OnInit()
 {
+#if defined(XBMC_GUI_API_VERSION)
   m_renderControl = GUI->Control_getRendering(m_window, CONTROL_RENDER_ADDON);
   m_renderControl->m_cbhdl   = this;
   m_renderControl->CBCreate = CreateCB;
@@ -779,6 +784,7 @@ bool cVNSIAdmin::OnInit()
   }
   vrp.add_U32(0);
   cVNSISession::TransmitMessage(&vrp);
+#endif
 
   // setup parameters
   m_spinTimeshiftMode = GUI->Control_getSpin(m_window, CONTROL_SPIN_TIMESHIFT_MODE);
@@ -865,7 +871,9 @@ bool cVNSIAdmin::OnAction(int actionId)
   {
     m_bIsOsdControl = false;
     m_window->SetControlLabel(CONTROL_OSD_BUTTON, XBMC->GetLocalizedString(30103));
+#if defined(XBMC_GUI_API_VERSION)
     m_window->MarkDirtyRegion();
+#endif
   }
   else if (m_window->GetFocusId() == CONTROL_OSD_BUTTON)
   {
@@ -904,7 +912,9 @@ bool cVNSIAdmin::OnAction(int actionId)
     {
       if (strncmp(m_window->GetProperty("menu"), "osd", 3) == 0)
       {
+#if defined(XBMC_GUI_API_VERSION)
         m_window->MarkDirtyRegion();
+#endif
       }
     }
   }
diff --git a/addons/pvr.vdr.vnsi/src/VNSIAdmin.h b/addons/pvr.vdr.vnsi/src/VNSIAdmin.h
index 20af095..3494abb 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIAdmin.h
+++ b/addons/pvr.vdr.vnsi/src/VNSIAdmin.h
@@ -64,7 +64,9 @@ class cVNSIAdmin : public cVNSIData
 private:
 
   CAddonGUIWindow *m_window;
+#if defined(XBMC_GUI_API_VERSION)
   CAddonGUIRenderingControl *m_renderControl;
+#endif
   CAddonGUISpinControl *m_spinTimeshiftMode;
   CAddonGUISpinControl *m_spinTimeshiftBufferRam;
   CAddonGUISpinControl *m_spinTimeshiftBufferFile;
-- 
1.8.1.6


From 72f9f6c18f370101306399372af2bdb5dbe1a015 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Sat, 9 Mar 2013 08:31:08 +0100
Subject: [PATCH 23/63] vdr-plugin-vnsiserver: limit rescan for recording in
 progress

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
index e0b3fac..f1e26d7 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
@@ -572,6 +572,7 @@ class cVideoBufferRecording : public cVideoBufferFile
   off_t GetPosEnd();
   cRecPlayer *m_RecPlayer;
   cRecording *m_Recording;
+  cTimeMs m_ScanTimer;
 };
 
 cVideoBufferRecording::cVideoBufferRecording(cRecording *rec)
@@ -609,14 +610,18 @@ bool cVideoBufferRecording::Init()
   m_ReadPtr = 0;
   m_ReadCacheSize = 0;
   m_InputAttached = false;
+  m_ScanTimer.Set(0);
   return true;
 }
 
 off_t cVideoBufferRecording::Available()
 {
-  m_RecPlayer->reScan();
+  if (m_ScanTimer.TimedOut())
+  {
+    m_RecPlayer->reScan();
+    m_ScanTimer.Set(1000);
+  }
   m_BufferSize = m_WritePtr = m_RecPlayer->getLengthBytes();
-  // INFOLOG("--------- length: %ld", m_BufferSize);
   return cVideoBufferTimeshift::Available();
 }
 
-- 
1.8.1.6


From 106da279520a4c0736c998ea2e30dfc7b546ef80 Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Sat, 9 Mar 2013 08:40:59 +0100
Subject: [PATCH 24/63] vnsi: dont scan timer titles for directory delimiters

---
 addons/pvr.vdr.vnsi/src/VNSIData.cpp | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/src/VNSIData.cpp b/addons/pvr.vdr.vnsi/src/VNSIData.cpp
index 49fb48b..fcf8d15 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIData.cpp
+++ b/addons/pvr.vdr.vnsi/src/VNSIData.cpp
@@ -456,10 +456,6 @@ PVR_ERROR cVNSIData::AddTimer(const PVR_TIMER &timerinfo)
     }
   }
 
-  if(strlen(timerinfo.strTitle) > 0) {
-    path += timerinfo.strTitle;
-  }
-
   // replace directory separators
   for(std::size_t i=0; i<path.size(); i++) {
     if(path[i] == '/' || path[i] == '\\') {
@@ -467,6 +463,10 @@ PVR_ERROR cVNSIData::AddTimer(const PVR_TIMER &timerinfo)
     }
   }
 
+  if(strlen(timerinfo.strTitle) > 0) {
+    path += timerinfo.strTitle;
+  }
+
   if(path.empty()) {
     XBMC->Log(LOG_ERROR, "%s - Empty filename !", __FUNCTION__);
     return PVR_ERROR_UNKNOWN;
-- 
1.8.1.6


From f6a1c21a679a3cb1075ccace339f206af5b5c9df Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Sat, 9 Mar 2013 12:38:01 +0100
Subject: [PATCH 25/63] vdr-plugin-vnsiserver: fix subtitle errors in xbmc log

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.c
index 2e539ed..69d8608 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.c
@@ -55,7 +55,7 @@ void cParserSubtitle::Parse(sStreamPacket *pkt)
     {
       pkt->id       = m_pID;
       pkt->data     = m_PesBuffer+2;
-      pkt->size     = m_PesPacketLength-2;
+      pkt->size     = m_PesPacketLength-3;
       pkt->duration = 0;
       pkt->dts      = m_curDTS;
       pkt->pts      = m_curPTS;
-- 
1.8.1.6


From 68d259a663e82c5bcbe580820b49dea3f23ca7fe Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Sun, 10 Mar 2013 12:12:46 +0100
Subject: [PATCH 26/63] vdr-plugin-vnsiserver: increase read cache

---
 .../vdr-plugin-vnsiserver/videobuffer.c            | 52 ++++++++++++++++------
 1 file changed, 39 insertions(+), 13 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
index f1e26d7..b5f1251 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
@@ -314,12 +314,11 @@ int cVideoBufferRAM::ReadBlock(uint8_t **buf, unsigned int size)
 
 //-----------------------------------------------------------------------------
 
-#define CACHE_SIZE 4000
-
 class cVideoBufferFile : public cVideoBufferTimeshift
 {
 friend class cVideoBuffer;
 public:
+  virtual size_t GetPosMax();
   virtual void Put(uint8_t *buf, unsigned int size);
   virtual int ReadBlock(uint8_t **buf, unsigned int size);
   virtual void SetPos(size_t pos);
@@ -332,10 +331,10 @@ class cVideoBufferFile : public cVideoBufferTimeshift
   int m_ClientID;
   cString m_Filename;
   int m_Fd;
-  bool m_UseCache;
-  uint8_t m_ReadCache[CACHE_SIZE];
+  uint8_t *m_ReadCache;
   unsigned int m_ReadCachePtr;
   unsigned int m_ReadCacheSize;
+  unsigned int m_ReadCacheMaxSize;
 };
 
 cVideoBufferFile::cVideoBufferFile()
@@ -348,6 +347,7 @@ class cVideoBufferFile : public cVideoBufferTimeshift
   m_ClientID = clientID;
   m_Fd = 0;
   m_ReadCacheSize = 0;
+  m_ReadCache = 0;
 }
 
 cVideoBufferFile::~cVideoBufferFile()
@@ -358,10 +358,19 @@ class cVideoBufferFile : public cVideoBufferTimeshift
     unlink(m_Filename);
     m_Fd = 0;
   }
+  if (m_ReadCache)
+    free(m_ReadCache);
 }
 
 bool cVideoBufferFile::Init()
 {
+  m_ReadCache = 0;
+  m_ReadCacheMaxSize = 32000;
+
+  m_ReadCache = (uint8_t*)malloc(m_ReadCacheMaxSize);
+  if (!m_ReadCache)
+    return false;
+
   m_BufferSize = (size_t)TimeshiftBufferFileSize*1000*1000*1000;
 
   m_Filename = cString::sprintf("%s/Timeshift-%d.vnsi", VideoDirectory, m_ClientID);
@@ -401,6 +410,16 @@ void cVideoBufferFile::SetPos(size_t pos)
   m_ReadCacheSize = 0;
 }
 
+size_t cVideoBufferFile::GetPosMax()
+{
+  size_t posMax = cVideoBufferTimeshift::GetPosMax();
+  if (posMax >= m_ReadCacheMaxSize)
+    posMax -= m_ReadCacheMaxSize;
+  else
+    posMax = 0;
+  return posMax;
+}
+
 void cVideoBufferFile::Put(uint8_t *buf, unsigned int size)
 {
   cMutexLock lock(&m_Mutex);
@@ -472,7 +491,7 @@ int cVideoBufferFile::ReadBlock(uint8_t **buf, unsigned int size)
     readBytes = m_ReadCacheSize - m_ReadCachePtr;
     *buf = m_ReadCache + m_ReadCachePtr;
   }
-  else if ((readBytes = Available()) >= CACHE_SIZE)
+  else if ((readBytes = Available()) >= m_ReadCacheMaxSize)
   {
     m_ReadPtr = lseek(m_Fd, m_ReadPtr, SEEK_SET);
     if (m_ReadPtr != m_ReadPtr)
@@ -480,9 +499,9 @@ int cVideoBufferFile::ReadBlock(uint8_t **buf, unsigned int size)
       ERRORLOG("Could not seek file: %s", (const char*)m_Filename);
       return 0;
     }
-    if (m_ReadPtr + CACHE_SIZE <= m_BufferSize)
+    if (m_ReadPtr + m_ReadCacheMaxSize <= m_BufferSize)
     {
-      m_ReadCacheSize = safe_read(m_Fd, m_ReadCache, CACHE_SIZE);
+      m_ReadCacheSize = safe_read(m_Fd, m_ReadCache, m_ReadCacheMaxSize);
       if (m_ReadCacheSize < 0)
       {
         ERRORLOG("Could not read file: %s", (const char*)m_Filename);
@@ -513,7 +532,7 @@ int cVideoBufferFile::ReadBlock(uint8_t **buf, unsigned int size)
         ERRORLOG("Could not seek file: %s", (const char*)m_Filename);
         return 0;
       }
-      readBytes = safe_read(m_Fd, m_ReadCache + m_ReadCacheSize, CACHE_SIZE - m_ReadCacheSize);
+      readBytes = safe_read(m_Fd, m_ReadCache + m_ReadCacheSize, m_ReadCacheMaxSize - m_ReadCacheSize);
       if (readBytes < 0)
       {
         ERRORLOG("Could not read file (end): %s", (const char*)m_Filename);
@@ -579,6 +598,7 @@ class cVideoBufferRecording : public cVideoBufferFile
 {
   m_Recording = rec;
   m_ReadCacheSize = 0;
+  m_ReadCache = 0;
 }
 
 cVideoBufferRecording::~cVideoBufferRecording()
@@ -592,7 +612,7 @@ size_t cVideoBufferRecording::GetPosMax()
 {
   m_RecPlayer->reScan();
   m_WritePtr = m_RecPlayer->getLengthBytes();
-  return cVideoBufferTimeshift::GetPosMax();
+  return cVideoBufferFile::GetPosMax();
 }
 
 void cVideoBufferRecording::Put(uint8_t *buf, unsigned int size)
@@ -602,6 +622,12 @@ void cVideoBufferRecording::Put(uint8_t *buf, unsigned int size)
 
 bool cVideoBufferRecording::Init()
 {
+  m_ReadCacheMaxSize = 32000;
+
+  m_ReadCache = (uint8_t*)malloc(m_ReadCacheMaxSize);
+  if (!m_ReadCache)
+    return false;
+
   m_RecPlayer = new cRecPlayer(m_Recording, true);
   if (!m_RecPlayer)
     return false;
@@ -649,12 +675,12 @@ int cVideoBufferRecording::ReadBlock(uint8_t **buf, unsigned int size)
     readBytes = m_ReadCacheSize - m_ReadCachePtr;
     *buf = m_ReadCache + m_ReadCachePtr;
   }
-  else if ((readBytes = Available()) >= CACHE_SIZE)
+  else if ((readBytes = Available()) >= m_ReadCacheMaxSize)
   {
-    if (m_ReadPtr + CACHE_SIZE <= m_BufferSize)
+    if (m_ReadPtr + m_ReadCacheMaxSize <= m_BufferSize)
     {
-      m_ReadCacheSize = m_RecPlayer->getBlock(m_ReadCache, m_ReadPtr, CACHE_SIZE);
-      if (m_ReadCacheSize != CACHE_SIZE)
+      m_ReadCacheSize = m_RecPlayer->getBlock(m_ReadCache, m_ReadPtr, m_ReadCacheMaxSize);
+      if (m_ReadCacheSize != m_ReadCacheMaxSize)
       {
         ERRORLOG("Could not read file, size:  %d", m_ReadCacheSize);
         m_ReadCacheSize = 0;
-- 
1.8.1.6


From d81e1e6c45ed72dba58b46d3abc94382df8f1646 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Wed, 13 Mar 2013 15:26:34 +0100
Subject: [PATCH 27/63] vdr-plugin-vnsiserver: optimize file buffer method for
 timeshift

---
 .../vdr-plugin-vnsiserver/videobuffer.c            | 105 +++++++++++----------
 1 file changed, 56 insertions(+), 49 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
index b5f1251..e95ea6a 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
@@ -175,6 +175,8 @@ void cVideoBufferTimeshift::GetPositions(size_t *cur, size_t *min, size_t *max)
 
 off_t cVideoBufferTimeshift::Available()
 {
+  cMutexLock lock(&m_Mutex);
+
   size_t ret;
   if (m_ReadPtr <= m_WritePtr)
     ret = m_WritePtr - m_ReadPtr;
@@ -236,8 +238,6 @@ void cVideoBufferRAM::SetPos(size_t pos)
 
 void cVideoBufferRAM::Put(uint8_t *buf, unsigned int size)
 {
-  cMutexLock lock(&m_Mutex);
-
   if (Available() + MARGIN >= m_BufferSize)
   {
     ERRORLOG("------------- skipping data");
@@ -250,12 +250,15 @@ void cVideoBufferRAM::Put(uint8_t *buf, unsigned int size)
     memcpy(m_BufferPtr+m_WritePtr, buf, bytes);
     size -= bytes;
     buf += bytes;
+    cMutexLock lock(&m_Mutex);
     m_WritePtr = 0;
   }
 
   memcpy(m_BufferPtr+m_WritePtr, buf, size);
-  m_WritePtr += size;
 
+  cMutexLock lock(&m_Mutex);
+
+  m_WritePtr += size;
   if (!m_BufferFull)
   {
     if ((m_WritePtr + 2*MARGIN) > m_BufferSize)
@@ -265,11 +268,10 @@ void cVideoBufferRAM::Put(uint8_t *buf, unsigned int size)
 
 int cVideoBufferRAM::ReadBlock(uint8_t **buf, unsigned int size)
 {
-  cMutexLock lock(&m_Mutex);
-
   // move read pointer
   if (m_BytesConsumed)
   {
+    cMutexLock lock(&m_Mutex);
     m_ReadPtr += m_BytesConsumed;
     if (m_ReadPtr >= m_BufferSize)
       m_ReadPtr -= m_BufferSize;
@@ -328,6 +330,7 @@ class cVideoBufferFile : public cVideoBufferTimeshift
   cVideoBufferFile(int clientID);
   virtual ~cVideoBufferFile();
   virtual bool Init();
+  virtual int ReadBytes(uint8_t *buf, off_t pos, unsigned int size);
   int m_ClientID;
   cString m_Filename;
   int m_Fd;
@@ -422,8 +425,6 @@ size_t cVideoBufferFile::GetPosMax()
 
 void cVideoBufferFile::Put(uint8_t *buf, unsigned int size)
 {
-  cMutexLock lock(&m_Mutex);
-
   if (Available() + MARGIN >= m_BufferSize)
   {
     ERRORLOG("------------- skipping data");
@@ -434,35 +435,44 @@ void cVideoBufferFile::Put(uint8_t *buf, unsigned int size)
   {
     int bytes = m_BufferSize - m_WritePtr;
 
-    m_WritePtr = lseek(m_Fd, m_WritePtr, SEEK_SET);
-    if (m_WritePtr != m_WritePtr)
+    int p = 0;
+    off_t ptr = m_WritePtr;
+    while(bytes > 0)
     {
-      ERRORLOG("Could not seek file: %s", (const char*)m_Filename);
-      return;
+      p = pwrite(m_Fd, buf, bytes, ptr);
+      if (p < 0)
+      {
+        ERRORLOG("Could not write to file: %s", (const char*)m_Filename);
+        return;
+      }
+      size -= p;
+      bytes -= p;
+      buf += p;
+      ptr += p;
     }
-    if (safe_write(m_Fd, buf, bytes) < 0)
+    cMutexLock lock(&m_Mutex);
+    m_WritePtr = 0;
+  }
+
+  off_t ptr = m_WritePtr;
+  int bytes = size;
+  int p;
+  while(bytes > 0)
+  {
+    p = pwrite(m_Fd, buf, bytes, ptr);
+    if (p < 0)
     {
       ERRORLOG("Could not write to file: %s", (const char*)m_Filename);
       return;
     }
-    size -= bytes;
-    buf += bytes;
-    m_WritePtr = 0;
+    bytes -= p;
+    buf += p;
+    ptr += p;
   }
 
-  m_WritePtr = lseek(m_Fd, m_WritePtr, SEEK_SET);
-  if (m_WritePtr != m_WritePtr)
-  {
-    ERRORLOG("Could not seek file: %s", (const char*)m_Filename);
-    return;
-  }
-  if (safe_write(m_Fd, buf, size) < 0)
-  {
-    ERRORLOG("Could not write to file: %s", (const char*)m_Filename);
-    return;
-  }
-  m_WritePtr += size;
+  cMutexLock lock(&m_Mutex);
 
+  m_WritePtr += size;
   if (!m_BufferFull)
   {
     if ((m_WritePtr + 2*MARGIN) > m_BufferSize)
@@ -470,13 +480,26 @@ void cVideoBufferFile::Put(uint8_t *buf, unsigned int size)
   }
 }
 
-int cVideoBufferFile::ReadBlock(uint8_t **buf, unsigned int size)
+int cVideoBufferFile::ReadBytes(uint8_t *buf, off_t pos, unsigned int size)
 {
-  cMutexLock lock(&m_Mutex);
+  int p;
+  for (;;)
+  {
+    p = pread(m_Fd, buf, size, pos);
+    if (p < 0 && errno == EINTR)
+    {
+      continue;
+    }
+    return p;
+  }
+}
 
+int cVideoBufferFile::ReadBlock(uint8_t **buf, unsigned int size)
+{
   // move read pointer
   if (m_BytesConsumed)
   {
+    cMutexLock lock(&m_Mutex);
     m_ReadPtr += m_BytesConsumed;
     if (m_ReadPtr >= m_BufferSize)
       m_ReadPtr -= m_BufferSize;
@@ -493,15 +516,9 @@ int cVideoBufferFile::ReadBlock(uint8_t **buf, unsigned int size)
   }
   else if ((readBytes = Available()) >= m_ReadCacheMaxSize)
   {
-    m_ReadPtr = lseek(m_Fd, m_ReadPtr, SEEK_SET);
-    if (m_ReadPtr != m_ReadPtr)
-    {
-      ERRORLOG("Could not seek file: %s", (const char*)m_Filename);
-      return 0;
-    }
     if (m_ReadPtr + m_ReadCacheMaxSize <= m_BufferSize)
     {
-      m_ReadCacheSize = safe_read(m_Fd, m_ReadCache, m_ReadCacheMaxSize);
+      m_ReadCacheSize = ReadBytes(m_ReadCache, m_ReadPtr, m_ReadCacheMaxSize);
       if (m_ReadCacheSize < 0)
       {
         ERRORLOG("Could not read file: %s", (const char*)m_Filename);
@@ -519,20 +536,14 @@ int cVideoBufferFile::ReadBlock(uint8_t **buf, unsigned int size)
     }
     else
     {
-      m_ReadCacheSize = safe_read(m_Fd, m_ReadCache, m_BufferSize - m_ReadPtr);
-      if (m_ReadCacheSize != (m_BufferSize - m_ReadPtr))
+      m_ReadCacheSize = ReadBytes(m_ReadCache, m_ReadPtr, m_BufferSize - m_ReadPtr);
+      if ((m_ReadCacheSize < m_Margin) && (m_ReadCacheSize != (m_BufferSize - m_ReadPtr)))
       {
         ERRORLOG("Could not read file (end): %s", (const char*)m_Filename);
         m_ReadCacheSize = 0;
         return 0;
       }
-      m_ReadPtr = lseek(m_Fd, 0, SEEK_SET);
-      if (m_ReadPtr != m_ReadPtr)
-      {
-        ERRORLOG("Could not seek file: %s", (const char*)m_Filename);
-        return 0;
-      }
-      readBytes = safe_read(m_Fd, m_ReadCache + m_ReadCacheSize, m_ReadCacheMaxSize - m_ReadCacheSize);
+      readBytes = ReadBytes(m_ReadCache + m_ReadCacheSize, 0, m_ReadCacheMaxSize - m_ReadCacheSize);
       if (readBytes < 0)
       {
         ERRORLOG("Could not read file (end): %s", (const char*)m_Filename);
@@ -653,8 +664,6 @@ off_t cVideoBufferRecording::Available()
 
 int cVideoBufferRecording::ReadBlock(uint8_t **buf, unsigned int size)
 {
-  cMutexLock lock(&m_Mutex);
-
   // move read pointer
   if (m_BytesConsumed)
   {
@@ -707,12 +716,10 @@ int cVideoBufferRecording::ReadBlock(uint8_t **buf, unsigned int size)
     m_BytesConsumed++;
     (*buf)++;
     readBytes--;
-    INFOLOG("------------ skip byte");
   }
 
   if ((*buf)[0] != TS_SYNC_BYTE)
   {
-    INFOLOG("------------ marker 11");
     return 0;
   }
 
-- 
1.8.1.6


From d679f4db03707dcab103aca098603a23a0442cb9 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Wed, 13 Mar 2013 15:27:14 +0100
Subject: [PATCH 28/63] vdr-plugin-vnsiserver: add buffer status message

---
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c   |  8 +++++
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h   |  1 +
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c  | 34 ++++++++++++++++++++--
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h  |  4 ++-
 .../vdr-plugin-vnsiserver/videobuffer.c            |  5 ++--
 .../vdr-plugin-vnsiserver/videobuffer.h            |  3 +-
 .../vdr-plugin-vnsiserver/vnsiclient.c             |  7 +++--
 .../vdr-plugin-vnsiserver/vnsiclient.h             |  2 +-
 .../vdr-plugin-vnsiserver/vnsicommand.h            |  1 +
 9 files changed, 55 insertions(+), 10 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
index 718db43..5544988 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
@@ -143,6 +143,9 @@ bool cVNSIDemuxer::SeekTime(int64_t time)
   int64_t ts, ts_min, ts_max, last_ts;
   int no_change;
 
+  if (!m_VideoBuffer->HasBuffer())
+    return false;
+
   cMutexLock lock(&m_Mutex);
 
 //  INFOLOG("----- seek to time: %ld", time);
@@ -295,6 +298,11 @@ bool cVNSIDemuxer::SeekTime(int64_t time)
   return true;
 }
 
+void cVNSIDemuxer::BufferStatus(bool &timeshift, int &start, int &current, int &end)
+{
+  timeshift = m_VideoBuffer->HasBuffer();
+}
+
 cTSStream *cVNSIDemuxer::GetFirstStream()
 {
   m_StreamsIterator = m_Streams.begin();
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
index add888d..aeb6767 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
@@ -60,6 +60,7 @@ class cVNSIDemuxer
   bool SeekTime(int64_t time);
   uint32_t GetSerial() { return m_MuxPacketSerial; }
   void SetSerial(uint32_t serial) { m_MuxPacketSerial = serial; }
+  void BufferStatus(bool &timeshift, int &start, int &current, int &end);
 
 protected:
   bool EnsureParsers();
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
index 2d0f742..ec2dc8b 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
@@ -40,7 +40,7 @@
 
 // --- cLiveStreamer -------------------------------------------------
 
-cLiveStreamer::cLiveStreamer(int clientID, uint32_t timeout)
+cLiveStreamer::cLiveStreamer(int clientID, uint8_t timeshift, uint32_t timeout)
  : cThread("cLiveStreamer stream processor")
  , m_ClientID(clientID)
  , m_scanTimeout(timeout)
@@ -54,6 +54,7 @@
   m_SignalLost      = false;
   m_IFrameSeen      = false;
   m_VideoBuffer     = NULL;
+  m_Timeshift       = timeshift;
 
   memset(&m_FrontendInfo, 0, sizeof(m_FrontendInfo));
 
@@ -105,7 +106,7 @@ bool cLiveStreamer::Open(int serial)
   }
   if (!recording)
   {
-    m_VideoBuffer = cVideoBuffer::Create(m_ClientID);
+    m_VideoBuffer = cVideoBuffer::Create(m_ClientID, m_Timeshift);
   }
 
   if (!m_VideoBuffer)
@@ -154,6 +155,7 @@ void cLiveStreamer::Action(void)
   sStreamPacket pkt;
   bool requestStreamChange = false;
   cTimeMs last_info(1000);
+  cTimeMs bufferStatsTimer(1000);
 
   while (Running())
   {
@@ -178,6 +180,13 @@ void cLiveStreamer::Action(void)
         last_info.Set(0);
         sendSignalInfo();
       }
+
+      // send buffer stats
+      if(bufferStatsTimer.TimedOut())
+      {
+        sendBufferStatus();
+        bufferStatsTimer.Set(1000);
+      }
     }
     else if (ret == -1)
     {
@@ -551,6 +560,27 @@ void cLiveStreamer::sendStreamStatus()
   delete resp;
 }
 
+void cLiveStreamer::sendBufferStatus()
+{
+  cResponsePacket *resp = new cResponsePacket();
+  if (!resp->initStream(VNSI_STREAM_BUFFERSTATS, 0, 0, 0, 0, 0))
+  {
+    ERRORLOG("stream response packet init fail");
+    delete resp;
+    return;
+  }
+  int32_t start, current, end;
+  bool timeshift;
+  m_Demuxer.BufferStatus(timeshift, start, current, end);
+  resp->add_U8(timeshift);
+  resp->add_S32(start);
+  resp->add_S32(current);
+  resp->add_S32(end);
+  resp->finaliseStream();
+  m_Socket->write(resp->getPtr(), resp->getLen());
+  delete resp;
+}
+
 bool cLiveStreamer::SeekTime(int64_t time, uint32_t &serial)
 {
   bool ret = m_Demuxer.SeekTime(time);
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h
index 09ccb55..3c308e5 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.h
@@ -57,6 +57,7 @@ class cLiveStreamer : public cThread
   void sendStreamChange();
   void sendSignalInfo();
   void sendStreamStatus();
+  void sendBufferStatus();
 
   int               m_ClientID;
   const cChannel   *m_Channel;                      /*!> Channel to stream */
@@ -78,6 +79,7 @@ class cLiveStreamer : public cThread
   cVideoBuffer     *m_VideoBuffer;
   cVideoInput       m_VideoInput;
   int               m_Priority;
+  uint8_t           m_Timeshift;
 
 protected:
   virtual void Action(void);
@@ -85,7 +87,7 @@ class cLiveStreamer : public cThread
   void Close();
 
 public:
-  cLiveStreamer(int clientID, uint32_t timeout = 0);
+  cLiveStreamer(int clientID, uint8_t timeshift, uint32_t timeout = 0);
   virtual ~cLiveStreamer();
 
   void Activate(bool On);
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
index e95ea6a..3fc5dcb 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
@@ -111,6 +111,7 @@ class cVideoBufferTimeshift : public cVideoBuffer
   virtual size_t GetPosMax();
   virtual size_t GetPosCur();
   virtual void GetPositions(size_t *cur, size_t *min, size_t *max);
+  virtual bool HasBuffer() { return true; };
 
 protected:
   cVideoBufferTimeshift();
@@ -813,10 +814,10 @@ off_t cVideoBufferTest::Available()
 {
 }
 
-cVideoBuffer* cVideoBuffer::Create(int clientID)
+cVideoBuffer* cVideoBuffer::Create(int clientID, uint8_t timeshift)
 {
   // no time shift
-  if (TimeshiftMode == 0)
+  if (TimeshiftMode == 0 || timeshift == 0)
   {
     cVideoBufferSimple *buffer = new cVideoBufferSimple();
     return buffer;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h
index cc15a6d..6e2dad4 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h
@@ -30,7 +30,7 @@ class cVideoBuffer
 {
 public:
   virtual ~cVideoBuffer();
-  static cVideoBuffer* Create(int clientID);
+  static cVideoBuffer* Create(int clientID, uint8_t timeshift);
   static cVideoBuffer* Create(cString filename);
   static cVideoBuffer* Create(cRecording *rec);
   virtual void Put(uint8_t *buf, unsigned int size) = 0;
@@ -41,6 +41,7 @@ class cVideoBuffer
   virtual void GetPositions(size_t *cur, size_t *min,size_t *max) {};
   virtual void SetPos(size_t pos) {};
   virtual void SetCache(bool on) {};
+  virtual bool HasBuffer() { return false; };
   int Read(uint8_t **buf, unsigned int size);
   void AttachInput(bool attach);
 protected:
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
index 85371bc..330783c 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
@@ -177,9 +177,9 @@ void cVNSIClient::Action(void)
   }
 }
 
-bool cVNSIClient::StartChannelStreaming(const cChannel *channel, int32_t priority, uint32_t timeout)
+bool cVNSIClient::StartChannelStreaming(const cChannel *channel, int32_t priority, uint8_t timeshift, uint32_t timeout)
 {
-  m_Streamer    = new cLiveStreamer(m_Id, timeout);
+  m_Streamer    = new cLiveStreamer(m_Id, timeshift, timeout);
   m_isStreaming = m_Streamer->StreamChannel(channel, priority, &m_socket, m_resp);
   return m_isStreaming;
 }
@@ -702,6 +702,7 @@ bool cVNSIClient::processChannelStream_Open() /* OPCODE 20 */
 {
   uint32_t uid = m_req->extract_U32();
   int32_t priority = m_req->extract_S32();
+  uint8_t timeshift = m_req->extract_U8();
   uint32_t timeout = m_req->extract_U32();
 
   if(timeout == 0)
@@ -727,7 +728,7 @@ bool cVNSIClient::processChannelStream_Open() /* OPCODE 20 */
   }
   else
   {
-    if (StartChannelStreaming(channel, priority, timeout))
+    if (StartChannelStreaming(channel, priority, timeshift, timeout))
     {
       INFOLOG("Started streaming of channel %s (timeout %i seconds)", channel->Name(), timeout);
       // return here without sending the response
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.h
index 8ae849d..948940a 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.h
@@ -94,7 +94,7 @@ class cVNSIClient : public cThread
 
   void SetLoggedIn(bool yesNo) { m_loggedIn = yesNo; }
   void SetStatusInterface(bool yesNo) { m_StatusInterfaceEnabled = yesNo; }
-  bool StartChannelStreaming(const cChannel *channel, int32_t priority, uint32_t timeout);
+  bool StartChannelStreaming(const cChannel *channel, int32_t priority, uint8_t timeshift, uint32_t timeout);
   void StopChannelStreaming();
 
 private:
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h
index 6cea4fb..28d6f9e 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h
@@ -110,6 +110,7 @@
 #define VNSI_STREAM_MUXPKT       4
 #define VNSI_STREAM_SIGNALINFO   5
 #define VNSI_STREAM_CONTENTINFO  6
+#define VNSI_STREAM_BUFFERSTATS  7
 
 /** Scan packet types (server -> client) */
 #define VNSI_SCANNER_PERCENTAGE  1
-- 
1.8.1.6


From 8846a85c73e6843cbba65158171127deddbcd35c Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Wed, 13 Mar 2013 16:33:58 +0100
Subject: [PATCH 29/63] vdr-plugin-vnsiserver: optimize recplayer

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.c | 9 ++-------
 1 file changed, 2 insertions(+), 7 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.c
index f027cb4..55ba069 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.c
@@ -189,8 +189,8 @@ uint32_t cRecPlayer::getLengthFrames()
 int cRecPlayer::getBlock(unsigned char* buffer, uint64_t position, int amount)
 {
   // dont let the block be larger than 256 kb
-  if (amount > 256*1024)
-    amount = 256*1024;
+  if (amount > 512*1024)
+    amount = 512*1024;
 
   if ((uint64_t)amount > m_totalLength)
     amount = m_totalLength;
@@ -239,11 +239,6 @@ int cRecPlayer::getBlock(unsigned char* buffer, uint64_t position, int amount)
     posix_fadvise(m_file, filePosition, bytes_read, POSIX_FADV_DONTNEED);
   }
 
-  // divide and conquer
-  if(bytes_read < amount) {
-    bytes_read += getBlock(&buffer[bytes_read], position + bytes_read, amount - bytes_read);
-  }
-
   return bytes_read;
 }
 
-- 
1.8.1.6


From 2b4f609f00f1b83057842a5c8ed199f2afc28740 Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Wed, 13 Mar 2013 16:37:44 +0100
Subject: [PATCH 30/63] vnsi: add timeshift buffer status

---
 .../addon/resources/language/English/strings.po            |  4 ++++
 addons/pvr.vdr.vnsi/addon/resources/settings.xml           |  1 +
 addons/pvr.vdr.vnsi/src/VNSIDemux.cpp                      |  5 +++++
 addons/pvr.vdr.vnsi/src/client.cpp                         | 14 ++++++++++++++
 addons/pvr.vdr.vnsi/src/client.h                           |  1 +
 addons/pvr.vdr.vnsi/src/vnsicommand.h                      |  1 +
 6 files changed, 26 insertions(+)

diff --git a/addons/pvr.vdr.vnsi/addon/resources/language/English/strings.po b/addons/pvr.vdr.vnsi/addon/resources/language/English/strings.po
index 9b8d9ab..40a69e0 100644
--- a/addons/pvr.vdr.vnsi/addon/resources/language/English/strings.po
+++ b/addons/pvr.vdr.vnsi/addon/resources/language/English/strings.po
@@ -207,6 +207,10 @@ msgctxt "#30046"
 msgid "Create channel groups automatically on the server"
 msgstr ""
 
+msgctxt "#30047"
+msgid "Request Timeshift"
+msgstr ""
+
 msgctxt "#30100"
 msgid "VDR OSD"
 msgstr ""
diff --git a/addons/pvr.vdr.vnsi/addon/resources/settings.xml b/addons/pvr.vdr.vnsi/addon/resources/settings.xml
index ab8752e..c75cc8c 100644
--- a/addons/pvr.vdr.vnsi/addon/resources/settings.xml
+++ b/addons/pvr.vdr.vnsi/addon/resources/settings.xml
@@ -3,6 +3,7 @@
     <setting id="host" type="text" label="30000" default="127.0.0.1" />
     <setting id="port" type="number" label="30001" default="34890" />
     <setting id="priority" type="enum" label="30002" values="-1|0|5|10|15|20|25|30|35|40|45|50|55|60|65|70|75|80|85|90|95|99|100" default="0"/>
+    <setting id="timeshift" type="enum" label="30047" values="0|1" default="1"/>
     <setting id="convertchar" type="bool" label="30003" default="true" />
     <setting id="timeout" type="enum" label="30004" values="0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15" default="3"/>
     <setting id="handlemessages" type="bool" label="30005" default="true" />
diff --git a/addons/pvr.vdr.vnsi/src/VNSIDemux.cpp b/addons/pvr.vdr.vnsi/src/VNSIDemux.cpp
index 4f851cc..54345bd 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIDemux.cpp
+++ b/addons/pvr.vdr.vnsi/src/VNSIDemux.cpp
@@ -167,6 +167,10 @@ DemuxPacket* cVNSIDemux::Read()
       XBMC->Log(LOG_DEBUG, "stream id %i not found", resp->getStreamID());
     }
   }
+  else if (resp->getOpCodeID() == VNSI_STREAM_BUFFERSTATS)
+  {
+    m_bTimeshift = resp->extract_U8();
+  }
 
   delete resp;
   return PVR->AllocateDemuxPacket(0);
@@ -230,6 +234,7 @@ bool cVNSIDemux::SwitchChannel(const PVR_CHANNEL &channelinfo)
   if (!vrp2.init(VNSI_CHANNELSTREAM_OPEN) ||
       !vrp2.add_U32(channelinfo.iUniqueId) ||
       !vrp2.add_S32(g_iPriority) ||
+      !vrp2.add_U8(1) ||
       !ReadSuccess(&vrp2))
   {
     XBMC->Log(LOG_ERROR, "%s - failed to set channel", __FUNCTION__);
diff --git a/addons/pvr.vdr.vnsi/src/client.cpp b/addons/pvr.vdr.vnsi/src/client.cpp
index b490759..fc28449 100644
--- a/addons/pvr.vdr.vnsi/src/client.cpp
+++ b/addons/pvr.vdr.vnsi/src/client.cpp
@@ -48,6 +48,7 @@
 int           g_iConnectTimeout         = DEFAULT_TIMEOUT;      ///< The Socket connection timeout
 int           g_iPriority               = DEFAULT_PRIORITY;     ///< The Priority this client have in response to other clients
 bool          g_bAutoChannelGroups      = DEFAULT_AUTOGROUPS;
+int           g_iTimeshift              = 1;
 
 CHelper_libXBMC_addon *XBMC   = NULL;
 CHelper_libXBMC_gui   *GUI    = NULL;
@@ -126,6 +127,14 @@ ADDON_STATUS ADDON_Create(void* hdl, void* props)
     g_iPriority = DEFAULT_PRIORITY;
   }
 
+  /* Read setting "timeshift" from settings.xml */
+  if (!XBMC->GetSetting("timeshift", &g_iTimeshift))
+  {
+    /* If setting is unknown fallback to defaults */
+    XBMC->Log(LOG_ERROR, "Couldn't get 'timeshift' setting, falling back to %i as default", 1);
+    g_iTimeshift = 1;
+  }
+
   /* Read setting "convertchar" from settings.xml */
   if (!XBMC->GetSetting("convertchar", &g_bCharsetConv))
   {
@@ -254,6 +263,11 @@ ADDON_STATUS ADDON_SetSetting(const char *settingName, const void *settingValue)
     XBMC->Log(LOG_INFO, "Changed Setting 'priority' from %u to %u", g_iPriority, *(int*) settingValue);
     g_iPriority = *(int*) settingValue;
   }
+  else if (str == "timeshift")
+  {
+    XBMC->Log(LOG_INFO, "Changed Setting 'timeshift' from %u to %u", g_iTimeshift, *(int*) settingValue);
+    g_iPriority = *(int*) settingValue;
+  }
   else if (str == "convertchar")
   {
     XBMC->Log(LOG_INFO, "Changed Setting 'convertchar' from %u to %u", g_bCharsetConv, *(bool*) settingValue);
diff --git a/addons/pvr.vdr.vnsi/src/client.h b/addons/pvr.vdr.vnsi/src/client.h
index c42df8a..3bb35d5 100644
--- a/addons/pvr.vdr.vnsi/src/client.h
+++ b/addons/pvr.vdr.vnsi/src/client.h
@@ -39,6 +39,7 @@
 extern int          g_iPriority;          ///< The Priority this client have in response to other clients
 extern bool         g_bCharsetConv;       ///< Convert VDR's incoming strings to UTF8 character set
 extern bool         g_bHandleMessages;    ///< Send VDR's OSD status messages to XBMC OSD
+extern int          g_iTimeshift;
 
 extern ADDON::CHelper_libXBMC_addon *XBMC;
 extern CHelper_libXBMC_gui   *GUI;
diff --git a/addons/pvr.vdr.vnsi/src/vnsicommand.h b/addons/pvr.vdr.vnsi/src/vnsicommand.h
index 68126c7..f591e99 100644
--- a/addons/pvr.vdr.vnsi/src/vnsicommand.h
+++ b/addons/pvr.vdr.vnsi/src/vnsicommand.h
@@ -106,6 +106,7 @@
 #define VNSI_STREAM_MUXPKT       4
 #define VNSI_STREAM_SIGNALINFO   5
 #define VNSI_STREAM_CONTENTINFO  6
+#define VNSI_STREAM_BUFFERSTATS  7
 
 /** Scan packet types (server -> client) */
 #define VNSI_SCANNER_PERCENTAGE  1
-- 
1.8.1.6


From 47f9897563fbdb1be36130bcc99d9b03ec45cbe2 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Thu, 14 Mar 2013 09:13:00 +0100
Subject: [PATCH 31/63] vdr-plugin-vnsiserver: add config option for timeshift
 buffer directory

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c       |  8 +++++++-
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.h       |  1 +
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c | 12 +++++++++++-
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.c        |  2 ++
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.h        |  1 +
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h |  1 +
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiserver.c  | 16 +++++++++++++++-
 7 files changed, 38 insertions(+), 3 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c
index 5e9fff1..8676878 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c
@@ -25,6 +25,7 @@
 int TimeshiftMode = 0;
 int TimeshiftBufferSize = 5;
 int TimeshiftBufferFileSize = 6;
+char TimeshiftBufferDir[PATH_MAX] = "\0";
 
 cMenuSetupVNSI::cMenuSetupVNSI(void)
 {
@@ -35,13 +36,16 @@
   timeshiftModesTexts[1] = tr("RAM");
   timeshiftModesTexts[2] = tr("File");
   newTimeshiftMode = TimeshiftMode;
-  Add(new cMenuEditStraItem( tr("Time Shift Mode"), &newTimeshiftMode, 2, timeshiftModesTexts));
+  Add(new cMenuEditStraItem( tr("Time Shift Mode"), &newTimeshiftMode, 3, timeshiftModesTexts));
 
   newTimeshiftBufferSize = TimeshiftBufferSize;
   Add(new cMenuEditIntItem( tr("TS Buffersize (RAM) (1-20) x 100MB"), &newTimeshiftBufferSize));
 
   newTimeshiftBufferFileSize = TimeshiftBufferFileSize;
   Add(new cMenuEditIntItem( tr("TS Buffersize (File) (1-10) x 1GB"), &newTimeshiftBufferFileSize));
+
+  strn0cpy(newTimeshiftBufferDir, TimeshiftBufferDir, sizeof(newTimeshiftBufferDir));
+  Add(new cMenuEditStrItem(tr("TS Buffer Directory"), newTimeshiftBufferDir, sizeof(newTimeshiftBufferDir)));
 }
 
 void cMenuSetupVNSI::Store(void)
@@ -63,4 +67,6 @@ void cMenuSetupVNSI::Store(void)
   else if (newTimeshiftBufferFileSize < 1)
     newTimeshiftBufferFileSize = 1;
   SetupStore(CONFNAME_TIMESHIFTBUFFERFILESIZE, TimeshiftBufferFileSize = newTimeshiftBufferFileSize);
+
+  SetupStore(CONFNAME_TIMESHIFTBUFFERDIR, strn0cpy(TimeshiftBufferDir, newTimeshiftBufferDir, sizeof(TimeshiftBufferDir)));
 }
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.h
index c4f6d61..acd584f 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.h
@@ -31,6 +31,7 @@ class cMenuSetupVNSI : public cMenuSetupPage
   const char *timeshiftModesTexts[3];
   int newTimeshiftBufferSize;
   int newTimeshiftBufferFileSize;
+  char newTimeshiftBufferDir[PATH_MAX];
 protected:
   virtual void Store(void);
 public:
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
index 3fc5dcb..1eb08aa 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
@@ -377,7 +377,17 @@ bool cVideoBufferFile::Init()
 
   m_BufferSize = (size_t)TimeshiftBufferFileSize*1000*1000*1000;
 
-  m_Filename = cString::sprintf("%s/Timeshift-%d.vnsi", VideoDirectory, m_ClientID);
+  struct stat sb;
+  if ((*TimeshiftBufferDir) && stat(TimeshiftBufferDir, &sb) == 0 && S_ISDIR(sb.st_mode))
+  {
+    if (TimeshiftBufferDir[strlen(TimeshiftBufferDir)-1] == '/')
+      m_Filename = cString::sprintf("%sTimeshift-%d.vnsi", TimeshiftBufferDir, m_ClientID);
+    else
+      m_Filename = cString::sprintf("%s/Timeshift-%d.vnsi", TimeshiftBufferDir, m_ClientID);
+  }
+  else
+    m_Filename = cString::sprintf("%s/Timeshift-%d.vnsi", VideoDirectory, m_ClientID);
+
   m_Fd = open(m_Filename, O_RDWR | O_CREAT | O_TRUNC, S_IRWXU);
   if (m_Fd == -1)
   {
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.c
index b153b4e..6ae4cf5 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.c
@@ -129,6 +129,8 @@ bool cPluginVNSIServer::SetupParse(const char *Name, const char *Value)
     TimeshiftBufferSize = atoi(Value);
   else if (!strcasecmp(Name, CONFNAME_TIMESHIFTBUFFERFILESIZE))
     TimeshiftBufferFileSize = atoi(Value);
+  else if (!strcasecmp(Name, CONFNAME_TIMESHIFTBUFFERDIR))
+    strn0cpy(TimeshiftBufferDir, Value, sizeof(TimeshiftBufferDir));
   else
     return false;
   return true;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.h
index f0c4f04..eb7ed79 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsi.h
@@ -34,6 +34,7 @@
 extern int TimeshiftMode;
 extern int TimeshiftBufferSize;
 extern int TimeshiftBufferFileSize;
+extern char TimeshiftBufferDir[PATH_MAX];
 
 class cPluginVNSIServer : public cPlugin {
 private:
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h
index 28d6f9e..17d3d08 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsicommand.h
@@ -44,6 +44,7 @@
 #define CONFNAME_TIMESHIFT "Timeshift"
 #define CONFNAME_TIMESHIFTBUFFERSIZE "TimeshiftBufferSize"
 #define CONFNAME_TIMESHIFTBUFFERFILESIZE "TimeshiftBufferFileSize"
+#define CONFNAME_TIMESHIFTBUFFERDIR "TimeshiftBufferDir"
 
 /* OPCODE 1 - 19: VNSI network functions for general purpose */
 #define VNSI_LOGIN                 1
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiserver.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiserver.c
index acea817..31d67bb 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiserver.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiserver.c
@@ -36,11 +36,13 @@
 #include <netinet/in.h>
 #include <netinet/tcp.h>
 #include <arpa/inet.h>
+#include <sys/stat.h>
 
 #include <vdr/plugin.h>
 #include <vdr/shutdown.h>
 #include <vdr/videodir.h>
 
+#include "vnsi.h"
 #include "vnsiserver.h"
 #include "vnsiclient.h"
 
@@ -198,7 +200,19 @@ void cVNSIServer::Action(void)
   time_t epgUpdate = cSchedules::Modified();
 
   // delete old timeshift file
-  cString cmd = cString::sprintf("rm -f %s/*.vnsi", VideoDirectory);
+  cString cmd;
+  struct stat sb;
+  if ((*TimeshiftBufferDir) && stat(TimeshiftBufferDir, &sb) == 0 && S_ISDIR(sb.st_mode))
+  {
+    if (TimeshiftBufferDir[strlen(TimeshiftBufferDir)-1] == '/')
+      cmd = cString::sprintf("rm -f %s*.vnsi", TimeshiftBufferDir);
+    else
+      cmd = cString::sprintf("rm -f %s/*.vnsi", TimeshiftBufferDir);
+  }
+  else
+  {
+    cmd = cString::sprintf("rm -f %s/*.vnsi", VideoDirectory);
+  }
   int ret = system(cmd);
 
   while (Running())
-- 
1.8.1.6


From 86ec58ef5f669d4ace3927372cb50d5261cdbe9e Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Fri, 15 Mar 2013 16:01:43 +0100
Subject: [PATCH 32/63] rbp: set rpath-link needed by automake

---
 tools/rbp/depends.mk | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/tools/rbp/depends.mk b/tools/rbp/depends.mk
index 68d0ffe..b7a9f4b 100644
--- a/tools/rbp/depends.mk
+++ b/tools/rbp/depends.mk
@@ -7,7 +7,7 @@ ifeq ($(USE_BUILDROOT),1)
 	export CFLAGS+=-isystem$(SYSROOT)/usr/include -isystem$(SYSROOT)/opt/vc/include -isystem$(SDKSTAGE)/opt/vc/include/interface/vcos/pthreads -isystem$(PREFIX)/include -isystem$(PREFIX)/usr/include/mysql --sysroot=$(SYSROOT)
 	export CXXFLAGS=$(CFLAGS) --sysroot=$(SYSROOT)
 	export CPPFLAGS=$(CFLAGS) --sysroot=$(SYSROOT)
-	export LDFLAGS=-L$(SYSROOT)/opt/vc/lib -L$(XBMCPREFIX)/lib
+	export LDFLAGS=-Wl,-rpath-link,${SYSROOT}/opt/vc/lib -L$(SYSROOT)/opt/vc/lib -L$(XBMCPREFIX)/lib
 	export LD=$(TOOLCHAIN)/bin/$(HOST)-ld 
 	export CC=$(TOOLCHAIN)/bin/$(HOST)-gcc 
 	export CXX=$(TOOLCHAIN)/bin/$(HOST)-g++ 
-- 
1.8.1.6


From 0f146bae850f52b30a41ca4639b064f10a7f3beb Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Fri, 15 Mar 2013 16:06:55 +0100
Subject: [PATCH 33/63] configure check for gles2

---
 configure.ac | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/configure.ac b/configure.ac
index 1bf54c1..a6ffe53 100644
--- a/configure.ac
+++ b/configure.ac
@@ -144,6 +144,15 @@ if test "$have_gl" = "yes"; then
 fi
 echo "GL: $have_gl"
 
+AC_CHECK_LIB([GLESv2],[main],have_gles2=yes, have_gles2=no)
+if test "$have_gles2" = "yes"; then
+  AC_DEFINE([HAVE_GLES2],[1],["Define to 1 if we have gles2"])
+  AM_CONDITIONAL(HAVE_GLES2, true)
+else
+  AM_CONDITIONAL(HAVE_GLES2, false)
+fi
+echo "GLES2: $have_gles2"
+
 ### End external Libraries 
 
 ### Build addons with dependencies
-- 
1.8.1.6


From 298fcd35917190edb72d8b6f9715c268aff494a4 Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Fri, 15 Mar 2013 10:11:05 +0100
Subject: [PATCH 34/63] vnsi: add gles rendering for vdr ui

---
 addons/pvr.vdr.vnsi/Makefile.am                    |   8 +
 .../pvr.vdr.vnsi/src/EGLHelpers/VisGUIShader.cpp   |  74 +++++
 addons/pvr.vdr.vnsi/src/EGLHelpers/VisGUIShader.h  |  51 +++
 .../pvr.vdr.vnsi/src/EGLHelpers/VisMatrixGLES.cpp  | 369 +++++++++++++++++++++
 addons/pvr.vdr.vnsi/src/EGLHelpers/VisMatrixGLES.h |  80 +++++
 addons/pvr.vdr.vnsi/src/EGLHelpers/VisShader.cpp   | 221 ++++++++++++
 addons/pvr.vdr.vnsi/src/EGLHelpers/VisShader.h     | 198 +++++++++++
 addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp              | 164 ++++++++-
 8 files changed, 1161 insertions(+), 4 deletions(-)
 create mode 100644 addons/pvr.vdr.vnsi/src/EGLHelpers/VisGUIShader.cpp
 create mode 100644 addons/pvr.vdr.vnsi/src/EGLHelpers/VisGUIShader.h
 create mode 100644 addons/pvr.vdr.vnsi/src/EGLHelpers/VisMatrixGLES.cpp
 create mode 100644 addons/pvr.vdr.vnsi/src/EGLHelpers/VisMatrixGLES.h
 create mode 100644 addons/pvr.vdr.vnsi/src/EGLHelpers/VisShader.cpp
 create mode 100644 addons/pvr.vdr.vnsi/src/EGLHelpers/VisShader.h

diff --git a/addons/pvr.vdr.vnsi/Makefile.am b/addons/pvr.vdr.vnsi/Makefile.am
index 5a426b5..66deae8 100644
--- a/addons/pvr.vdr.vnsi/Makefile.am
+++ b/addons/pvr.vdr.vnsi/Makefile.am
@@ -22,4 +22,12 @@ libvdrvnsi_addon_la_SOURCES = src/client.cpp \
                               src/requestpacket.cpp \
                               src/responsepacket.cpp \
                               src/tools.cpp
+                              
+if HAVE_GLES2
+lib_LTLIBRARIES += libvdrvnsi-addon-helpers.la
+libvdrvnsi_addon_helpers_la_SOURCES = src/EGLHelpers/VisGUIShader.cpp \
+                                      src/EGLHelpers/VisShader.cpp \
+                                      src/EGLHelpers/VisMatrixGLES.cpp                     
+endif
+
 libvdrvnsi_addon_la_LDFLAGS = @TARGET_LDFLAGS@
diff --git a/addons/pvr.vdr.vnsi/src/EGLHelpers/VisGUIShader.cpp b/addons/pvr.vdr.vnsi/src/EGLHelpers/VisGUIShader.cpp
new file mode 100644
index 0000000..4890fde
--- /dev/null
+++ b/addons/pvr.vdr.vnsi/src/EGLHelpers/VisGUIShader.cpp
@@ -0,0 +1,74 @@
+/*
+*      Copyright (C) 2005-2013 Team XBMC
+*      http://www.xbmc.org
+*
+*  This Program is free software; you can redistribute it and/or modify
+*  it under the terms of the GNU General Public License as published by
+*  the Free Software Foundation; either version 2, or (at your option)
+*  any later version.
+*
+*  This Program is distributed in the hope that it will be useful,
+*  but WITHOUT ANY WARRANTY; without even the implied warranty of
+*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+*  GNU General Public License for more details.
+*
+*  You should have received a copy of the GNU General Public License
+*  along with XBMC; see the file COPYING.  If not, see
+*  <http://www.gnu.org/licenses/>.
+*
+*/
+
+#include "VisGUIShader.h"
+
+CVisGUIShader::CVisGUIShader(const char *vert, const char *frag ) : CVisGLSLShaderProgram(vert, frag)
+{
+  // Initialise values
+  m_hTex0   = 0;
+  m_hTex1   = 0;
+  m_hProj   = 0;
+  m_hModel  = 0;
+  m_hPos    = 0;
+  m_hCol    = 0;
+  m_hCord0  = 0;
+  m_hCord1  = 0;
+
+  m_proj   = NULL;
+  m_model  = NULL;
+}
+
+void CVisGUIShader::OnCompiledAndLinked()
+{
+  // This is called after CompileAndLink()
+
+  // Variables passed directly to the Fragment shader
+  m_hTex0   = glGetUniformLocation(ProgramHandle(), "m_samp0");
+  m_hTex1   = glGetUniformLocation(ProgramHandle(), "m_samp1");
+  // Variables passed directly to the Vertex shader
+  m_hProj   = glGetUniformLocation(ProgramHandle(), "m_proj");
+  m_hModel  = glGetUniformLocation(ProgramHandle(), "m_model");
+  m_hPos    = glGetAttribLocation(ProgramHandle(),  "m_attrpos");
+  m_hCol    = glGetAttribLocation(ProgramHandle(),  "m_attrcol");
+  m_hCord0  = glGetAttribLocation(ProgramHandle(),  "m_attrcord0");
+  m_hCord1  = glGetAttribLocation(ProgramHandle(),  "m_attrcord1");
+
+  // It's okay to do this only one time. Textures units never change.
+  glUseProgram( ProgramHandle() );
+  glUniform1i(m_hTex0, 0);
+  glUniform1i(m_hTex1, 1);
+  glUseProgram( 0 );
+}
+
+bool CVisGUIShader::OnEnabled()
+{
+  // This is called after glUseProgram()
+  glUniformMatrix4fv(m_hProj,  1, GL_FALSE, GetMatrix(MM_PROJECTION));
+  glUniformMatrix4fv(m_hModel, 1, GL_FALSE, GetMatrix(MM_MODELVIEW));
+
+  return true;
+}
+
+void CVisGUIShader::Free()
+{
+  // Do Cleanup here
+  CVisShaderProgram::Free();
+}
diff --git a/addons/pvr.vdr.vnsi/src/EGLHelpers/VisGUIShader.h b/addons/pvr.vdr.vnsi/src/EGLHelpers/VisGUIShader.h
new file mode 100644
index 0000000..5c7fe24
--- /dev/null
+++ b/addons/pvr.vdr.vnsi/src/EGLHelpers/VisGUIShader.h
@@ -0,0 +1,51 @@
+#pragma once
+/*
+*      Copyright (C) 2005-2013 Team XBMC
+*      http://www.xbmc.org
+*
+*  This Program is free software; you can redistribute it and/or modify
+*  it under the terms of the GNU General Public License as published by
+*  the Free Software Foundation; either version 2, or (at your option)
+*  any later version.
+*
+*  This Program is distributed in the hope that it will be useful,
+*  but WITHOUT ANY WARRANTY; without even the implied warranty of
+*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+*  GNU General Public License for more details.
+*
+*  You should have received a copy of the GNU General Public License
+*  along with XBMC; see the file COPYING.  If not, see
+*  <http://www.gnu.org/licenses/>.
+*
+*/
+
+#include "VisShader.h"
+#include "VisMatrixGLES.h"
+
+class CVisGUIShader : public CVisGLSLShaderProgram, public CVisMatrixGLES
+{
+public:
+  CVisGUIShader(const char *vert, const char *frag);
+
+  void OnCompiledAndLinked();
+  bool OnEnabled();
+  void Free();
+
+  GLint GetPosLoc()   { return m_hPos;   }
+  GLint GetColLoc()   { return m_hCol;   }
+  GLint GetCord0Loc() { return m_hCord0; }
+  GLint GetCord1Loc() { return m_hCord1; }
+
+protected:
+  GLint m_hTex0;
+  GLint m_hTex1;
+  GLint m_hProj;
+  GLint m_hModel;
+  GLint m_hPos;
+  GLint m_hCol;
+  GLint m_hCord0;
+  GLint m_hCord1;
+
+  GLfloat *m_proj;
+  GLfloat *m_model;
+};
diff --git a/addons/pvr.vdr.vnsi/src/EGLHelpers/VisMatrixGLES.cpp b/addons/pvr.vdr.vnsi/src/EGLHelpers/VisMatrixGLES.cpp
new file mode 100644
index 0000000..c9953e1
--- /dev/null
+++ b/addons/pvr.vdr.vnsi/src/EGLHelpers/VisMatrixGLES.cpp
@@ -0,0 +1,369 @@
+/*
+*      Copyright (C) 2005-2013 Team XBMC
+*      http://www.xbmc.org
+*
+*  This Program is free software; you can redistribute it and/or modify
+*  it under the terms of the GNU General Public License as published by
+*  the Free Software Foundation; either version 2, or (at your option)
+*  any later version.
+*
+*  This Program is distributed in the hope that it will be useful,
+*  but WITHOUT ANY WARRANTY; without even the implied warranty of
+*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+*  GNU General Public License for more details.
+*
+*  You should have received a copy of the GNU General Public License
+*  along with XBMC; see the file COPYING.  If not, see
+*  <http://www.gnu.org/licenses/>.
+*
+*/
+
+#include "VisMatrixGLES.h"
+#include <cmath>
+
+#define MODE_WITHIN_RANGE(m)       ((m >= 0) && (m < (int)MM_MATRIXSIZE))
+
+CVisMatrixGLES::CVisMatrixGLES()
+{
+  for (unsigned int i=0; i < MM_MATRIXSIZE; i++)
+  {
+    m_matrices[i].push_back(MatrixWrapper());
+    MatrixMode((EMATRIXMODE)i);
+    LoadIdentity();
+  }
+  m_matrixMode = (EMATRIXMODE)-1;
+  m_pMatrix    = NULL;
+}
+
+CVisMatrixGLES::~CVisMatrixGLES()
+{
+}
+
+GLfloat* CVisMatrixGLES::GetMatrix(EMATRIXMODE mode)
+{
+  if (MODE_WITHIN_RANGE(mode))
+  {
+    if (!m_matrices[mode].empty())
+    {
+      return m_matrices[mode].back();
+    }
+  }
+  return NULL;
+}
+
+void CVisMatrixGLES::MatrixMode(EMATRIXMODE mode)
+{
+  if (MODE_WITHIN_RANGE(mode))
+  {
+    m_matrixMode = mode;
+    m_pMatrix    = m_matrices[mode].back();
+  }
+  else
+  {
+    m_matrixMode = (EMATRIXMODE)-1;
+    m_pMatrix    = NULL;
+  }
+}
+
+void CVisMatrixGLES::PushMatrix()
+{
+  if (m_pMatrix && MODE_WITHIN_RANGE(m_matrixMode))
+  {
+    m_matrices[m_matrixMode].push_back(MatrixWrapper(m_pMatrix));
+    m_pMatrix =  m_matrices[m_matrixMode].back();
+  }
+}
+
+void CVisMatrixGLES::PopMatrix()
+{
+  if (MODE_WITHIN_RANGE(m_matrixMode))
+  {
+    if (m_matrices[m_matrixMode].size() > 1)
+    { 
+      m_matrices[m_matrixMode].pop_back();
+    }
+    m_pMatrix = m_matrices[m_matrixMode].back();
+  }
+}
+
+void CVisMatrixGLES::LoadIdentity()
+{
+  if (m_pMatrix)
+  {
+    m_pMatrix[0] = 1.0f;  m_pMatrix[4] = 0.0f;  m_pMatrix[8]  = 0.0f;  m_pMatrix[12] = 0.0f;
+    m_pMatrix[1] = 0.0f;  m_pMatrix[5] = 1.0f;  m_pMatrix[9]  = 0.0f;  m_pMatrix[13] = 0.0f;
+    m_pMatrix[2] = 0.0f;  m_pMatrix[6] = 0.0f;  m_pMatrix[10] = 1.0f;  m_pMatrix[14] = 0.0f;
+    m_pMatrix[3] = 0.0f;  m_pMatrix[7] = 0.0f;  m_pMatrix[11] = 0.0f;  m_pMatrix[15] = 1.0f;
+  }
+}
+
+void CVisMatrixGLES::Ortho(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f)
+{
+  GLfloat u =  2.0f / (r - l);
+  GLfloat v =  2.0f / (t - b);
+  GLfloat w = -2.0f / (f - n);
+  GLfloat x = - (r + l) / (r - l);
+  GLfloat y = - (t + b) / (t - b);
+  GLfloat z = - (f + n) / (f - n);
+  GLfloat matrix[16] = {   u, 0.0f, 0.0f, 0.0f,
+                        0.0f,    v, 0.0f, 0.0f,
+                        0.0f, 0.0f,    w, 0.0f,
+                           x,    y,    z, 1.0f};
+  MultMatrixf(matrix);
+}
+
+void CVisMatrixGLES::Ortho2D(GLfloat l, GLfloat r, GLfloat b, GLfloat t)
+{
+  GLfloat u =  2.0f / (r - l);
+  GLfloat v =  2.0f / (t - b);
+  GLfloat x = - (r + l) / (r - l);
+  GLfloat y = - (t + b) / (t - b);
+  GLfloat matrix[16] = {   u, 0.0f, 0.0f, 0.0f,
+                        0.0f,    v, 0.0f, 0.0f,
+                        0.0f, 0.0f,-1.0f, 0.0f,
+                           x,    y, 0.0f, 1.0f};
+  MultMatrixf(matrix);
+}
+
+void CVisMatrixGLES::Frustum(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f)
+{
+  GLfloat u = (2.0f * n) / (r - l);
+  GLfloat v = (2.0f * n) / (t - b);
+  GLfloat w = (r + l) / (r - l);
+  GLfloat x = (t + b) / (t - b);
+  GLfloat y = - (f + n) / (f - n);
+  GLfloat z = - (2.0f * f * n) / (f - n);
+  GLfloat matrix[16] = {   u, 0.0f, 0.0f, 0.0f,
+                        0.0f,    v, 0.0f, 0.0f,
+                           w,    x,    y,-1.0f,
+                        0.0f, 0.0f,    z, 0.0f};
+  MultMatrixf(matrix);
+}
+
+void CVisMatrixGLES::Translatef(GLfloat x, GLfloat y, GLfloat z)
+{
+  GLfloat matrix[16] = {1.0f, 0.0f, 0.0f, 0.0f,
+                        0.0f, 1.0f, 0.0f, 0.0f,
+                        0.0f, 0.0f, 1.0f, 0.0f,
+                           x,    y,    z, 1.0f};
+  MultMatrixf(matrix);
+}
+
+void CVisMatrixGLES::Scalef(GLfloat x, GLfloat y, GLfloat z)
+{
+  GLfloat matrix[16] = {   x, 0.0f, 0.0f, 0.0f,
+                        0.0f,    y, 0.0f, 0.0f,
+                        0.0f, 0.0f,    z, 0.0f,
+                        0.0f, 0.0f, 0.0f, 1.0f};
+  MultMatrixf(matrix);
+}
+
+void CVisMatrixGLES::Rotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z)
+{
+  GLfloat modulous = sqrt((x*x)+(y*y)+(z*z));
+  if (modulous != 0.0)
+  {
+    x /= modulous;
+    y /= modulous;
+    z /= modulous;
+  }
+  GLfloat cosine = cos(angle);
+  GLfloat sine   = sin(angle);
+  GLfloat cos1   = 1 - cosine;
+  GLfloat a = (x*x*cos1) + cosine;
+  GLfloat b = (x*y*cos1) - (z*sine);
+  GLfloat c = (x*z*cos1) + (y*sine);
+  GLfloat d = (y*x*cos1) + (z*sine);
+  GLfloat e = (y*y*cos1) + cosine;
+  GLfloat f = (y*z*cos1) - (x*sine);
+  GLfloat g = (z*x*cos1) - (y*sine);
+  GLfloat h = (z*y*cos1) + (x*sine);
+  GLfloat i = (z*z*cos1) + cosine;
+  GLfloat matrix[16] = {   a,    d,    g, 0.0f,
+                           b,    e,    h, 0.0f,
+                           c,    f,    i, 0.0f,
+                        0.0f, 0.0f, 0.0f, 1.0f};
+  MultMatrixf(matrix);
+}
+
+#if defined(__ARM_NEON__)
+  
+inline void Matrix4Mul(const float* src_mat_1, const float* src_mat_2, float* dst_mat)
+{
+  asm volatile (
+    // Store A & B leaving room at top of registers for result (q0-q3)
+    "vldmia %1, { q4-q7 }  \n\t"
+    "vldmia %2, { q8-q11 } \n\t"
+
+    // result = first column of B x first row of A
+    "vmul.f32 q0, q8, d8[0]\n\t"
+    "vmul.f32 q1, q8, d10[0]\n\t"
+    "vmul.f32 q2, q8, d12[0]\n\t"
+    "vmul.f32 q3, q8, d14[0]\n\t"
+
+    // result += second column of B x second row of A
+    "vmla.f32 q0, q9, d8[1]\n\t"
+    "vmla.f32 q1, q9, d10[1]\n\t"
+    "vmla.f32 q2, q9, d12[1]\n\t"
+    "vmla.f32 q3, q9, d14[1]\n\t"
+
+    // result += third column of B x third row of A
+    "vmla.f32 q0, q10, d9[0]\n\t"
+    "vmla.f32 q1, q10, d11[0]\n\t"
+    "vmla.f32 q2, q10, d13[0]\n\t"
+    "vmla.f32 q3, q10, d15[0]\n\t"
+
+    // result += last column of B x last row of A
+    "vmla.f32 q0, q11, d9[1]\n\t"
+    "vmla.f32 q1, q11, d11[1]\n\t"
+    "vmla.f32 q2, q11, d13[1]\n\t"
+    "vmla.f32 q3, q11, d15[1]\n\t"
+
+    // output = result registers
+    "vstmia %2, { q0-q3 }"
+    : //no output 
+    : "r" (dst_mat), "r" (src_mat_2), "r" (src_mat_1)       // input - note *value* of pointer doesn't change
+    : "memory", "q0", "q1", "q2", "q3", "q4", "q5", "q6", "q7", "q8", "q9", "q10", "q11" //clobber
+    );
+}
+void CVisMatrixGLES::MultMatrixf(const GLfloat *matrix)
+{
+  if (m_pMatrix)
+  {
+    GLfloat m[16];
+    Matrix4Mul(m_pMatrix, matrix, m);
+  }
+}
+
+#else
+void CVisMatrixGLES::MultMatrixf(const GLfloat *matrix)
+{
+  if (m_pMatrix)
+  {
+    GLfloat a = (matrix[0]  * m_pMatrix[0]) + (matrix[1]  * m_pMatrix[4]) + (matrix[2]  * m_pMatrix[8])  + (matrix[3]  * m_pMatrix[12]);
+    GLfloat b = (matrix[0]  * m_pMatrix[1]) + (matrix[1]  * m_pMatrix[5]) + (matrix[2]  * m_pMatrix[9])  + (matrix[3]  * m_pMatrix[13]);
+    GLfloat c = (matrix[0]  * m_pMatrix[2]) + (matrix[1]  * m_pMatrix[6]) + (matrix[2]  * m_pMatrix[10]) + (matrix[3]  * m_pMatrix[14]);
+    GLfloat d = (matrix[0]  * m_pMatrix[3]) + (matrix[1]  * m_pMatrix[7]) + (matrix[2]  * m_pMatrix[11]) + (matrix[3]  * m_pMatrix[15]);
+    GLfloat e = (matrix[4]  * m_pMatrix[0]) + (matrix[5]  * m_pMatrix[4]) + (matrix[6]  * m_pMatrix[8])  + (matrix[7]  * m_pMatrix[12]);
+    GLfloat f = (matrix[4]  * m_pMatrix[1]) + (matrix[5]  * m_pMatrix[5]) + (matrix[6]  * m_pMatrix[9])  + (matrix[7]  * m_pMatrix[13]);
+    GLfloat g = (matrix[4]  * m_pMatrix[2]) + (matrix[5]  * m_pMatrix[6]) + (matrix[6]  * m_pMatrix[10]) + (matrix[7]  * m_pMatrix[14]);
+    GLfloat h = (matrix[4]  * m_pMatrix[3]) + (matrix[5]  * m_pMatrix[7]) + (matrix[6]  * m_pMatrix[11]) + (matrix[7]  * m_pMatrix[15]);
+    GLfloat i = (matrix[8]  * m_pMatrix[0]) + (matrix[9]  * m_pMatrix[4]) + (matrix[10] * m_pMatrix[8])  + (matrix[11] * m_pMatrix[12]);
+    GLfloat j = (matrix[8]  * m_pMatrix[1]) + (matrix[9]  * m_pMatrix[5]) + (matrix[10] * m_pMatrix[9])  + (matrix[11] * m_pMatrix[13]);
+    GLfloat k = (matrix[8]  * m_pMatrix[2]) + (matrix[9]  * m_pMatrix[6]) + (matrix[10] * m_pMatrix[10]) + (matrix[11] * m_pMatrix[14]);
+    GLfloat l = (matrix[8]  * m_pMatrix[3]) + (matrix[9]  * m_pMatrix[7]) + (matrix[10] * m_pMatrix[11]) + (matrix[11] * m_pMatrix[15]);
+    GLfloat m = (matrix[12] * m_pMatrix[0]) + (matrix[13] * m_pMatrix[4]) + (matrix[14] * m_pMatrix[8])  + (matrix[15] * m_pMatrix[12]);
+    GLfloat n = (matrix[12] * m_pMatrix[1]) + (matrix[13] * m_pMatrix[5]) + (matrix[14] * m_pMatrix[9])  + (matrix[15] * m_pMatrix[13]);
+    GLfloat o = (matrix[12] * m_pMatrix[2]) + (matrix[13] * m_pMatrix[6]) + (matrix[14] * m_pMatrix[10]) + (matrix[15] * m_pMatrix[14]);
+    GLfloat p = (matrix[12] * m_pMatrix[3]) + (matrix[13] * m_pMatrix[7]) + (matrix[14] * m_pMatrix[11]) + (matrix[15] * m_pMatrix[15]);
+    m_pMatrix[0] = a;  m_pMatrix[4] = e;  m_pMatrix[8]  = i;  m_pMatrix[12] = m;
+    m_pMatrix[1] = b;  m_pMatrix[5] = f;  m_pMatrix[9]  = j;  m_pMatrix[13] = n;
+    m_pMatrix[2] = c;  m_pMatrix[6] = g;  m_pMatrix[10] = k;  m_pMatrix[14] = o;
+    m_pMatrix[3] = d;  m_pMatrix[7] = h;  m_pMatrix[11] = l;  m_pMatrix[15] = p;
+  }
+}
+#endif
+
+// gluLookAt implementation taken from Mesa3D
+void CVisMatrixGLES::LookAt(GLfloat eyex, GLfloat eyey, GLfloat eyez, GLfloat centerx, GLfloat centery, GLfloat centerz, GLfloat upx, GLfloat upy, GLfloat upz)
+{
+  GLfloat forward[3], side[3], up[3];
+  GLfloat m[4][4];
+
+  forward[0] = centerx - eyex;
+  forward[1] = centery - eyey;
+  forward[2] = centerz - eyez;
+
+  up[0] = upx;
+  up[1] = upy;
+  up[2] = upz;
+
+  GLfloat tmp = sqrt(forward[0]*forward[0] + forward[1]*forward[1] + forward[2]*forward[2]);
+  if (tmp != 0.0)
+  {
+    forward[0] /= tmp;
+    forward[1] /= tmp;
+    forward[2] /= tmp;
+  }
+
+  side[0] = forward[1]*up[2] - forward[2]*up[1];
+  side[1] = forward[2]*up[0] - forward[0]*up[2];
+  side[2] = forward[0]*up[1] - forward[1]*up[0];
+
+  tmp = sqrt(side[0]*side[0] + side[1]*side[1] + side[2]*side[2]);
+  if (tmp != 0.0)
+  {
+    side[0] /= tmp;
+    side[1] /= tmp;
+    side[2] /= tmp;
+  }
+
+  up[0] = side[1]*forward[2] - side[2]*forward[1];
+  up[1] = side[2]*forward[0] - side[0]*forward[2];
+  up[2] = side[0]*forward[1] - side[1]*forward[0];
+
+  m[0][0] = 1.0f; m[0][1] = 0.0f; m[0][2] = 0.0f; m[0][3] = 0.0f;
+  m[1][0] = 0.0f; m[1][1] = 1.0f; m[1][2] = 0.0f; m[1][3] = 0.0f;
+  m[2][0] = 0.0f; m[2][1] = 0.0f; m[2][2] = 1.0f; m[2][3] = 0.0f;
+  m[3][0] = 0.0f; m[3][1] = 0.0f; m[3][2] = 0.0f; m[3][3] = 1.0f;
+
+  m[0][0] = side[0];
+  m[1][0] = side[1];
+  m[2][0] = side[2];
+
+  m[0][1] = up[0];
+  m[1][1] = up[1];
+  m[2][1] = up[2];
+
+  m[0][2] = -forward[0];
+  m[1][2] = -forward[1];
+  m[2][2] = -forward[2];
+
+  MultMatrixf(&m[0][0]);
+  Translatef(-eyex, -eyey, -eyez);
+}
+
+static void __gluMultMatrixVecf(const GLfloat matrix[16], const GLfloat in[4], GLfloat out[4])
+{
+  int i;
+
+  for (i=0; i<4; i++)
+  {
+    out[i] = in[0] * matrix[0*4+i] +
+             in[1] * matrix[1*4+i] +
+             in[2] * matrix[2*4+i] +
+             in[3] * matrix[3*4+i];
+  }
+}
+
+// gluProject implementation taken from Mesa3D
+bool CVisMatrixGLES::Project(GLfloat objx, GLfloat objy, GLfloat objz, const GLfloat modelMatrix[16], const GLfloat projMatrix[16], const GLint viewport[4], GLfloat* winx, GLfloat* winy, GLfloat* winz)
+{
+  GLfloat in[4];
+  GLfloat out[4];
+
+  in[0]=objx;
+  in[1]=objy;
+  in[2]=objz;
+  in[3]=1.0;
+  __gluMultMatrixVecf(modelMatrix, in, out);
+  __gluMultMatrixVecf(projMatrix, out, in);
+  if (in[3] == 0.0)
+    return false;
+  in[0] /= in[3];
+  in[1] /= in[3];
+  in[2] /= in[3];
+  /* Map x, y and z to range 0-1 */
+  in[0] = in[0] * 0.5 + 0.5;
+  in[1] = in[1] * 0.5 + 0.5;
+  in[2] = in[2] * 0.5 + 0.5;
+
+  /* Map x,y to viewport */
+  in[0] = in[0] * viewport[2] + viewport[0];
+  in[1] = in[1] * viewport[3] + viewport[1];
+
+  *winx=in[0];
+  *winy=in[1];
+  *winz=in[2];
+  return true;
+}
diff --git a/addons/pvr.vdr.vnsi/src/EGLHelpers/VisMatrixGLES.h b/addons/pvr.vdr.vnsi/src/EGLHelpers/VisMatrixGLES.h
new file mode 100644
index 0000000..01b0064
--- /dev/null
+++ b/addons/pvr.vdr.vnsi/src/EGLHelpers/VisMatrixGLES.h
@@ -0,0 +1,80 @@
+#pragma once
+/*
+*      Copyright (C) 2005-2013 Team XBMC
+*      http://www.xbmc.org
+*
+*  This Program is free software; you can redistribute it and/or modify
+*  it under the terms of the GNU General Public License as published by
+*  the Free Software Foundation; either version 2, or (at your option)
+*  any later version.
+*
+*  This Program is distributed in the hope that it will be useful,
+*  but WITHOUT ANY WARRANTY; without even the implied warranty of
+*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+*  GNU General Public License for more details.
+*
+*  You should have received a copy of the GNU General Public License
+*  along with XBMC; see the file COPYING.  If not, see
+*  <http://www.gnu.org/licenses/>.
+*
+*/
+
+#if defined(__APPLE__)                                                                                                                                                                                           
+  #include <OpenGLES/ES2/gl.h>                                                                                                                                                                                     
+  #include <OpenGLES/ES2/glext.h>                                                                                                                                                                                  
+#else                                                                                                                                                                                                            
+  #include <GLES2/gl2.h>
+  #include <GLES2/gl2ext.h>
+#endif//__APPLE__
+
+#include <string.h>
+#include <vector>
+
+enum EMATRIXMODE
+{
+  MM_PROJECTION = 0,
+  MM_MODELVIEW,
+  MM_TEXTURE,
+  MM_MATRIXSIZE  // Must be last! used for size of matrices
+};
+
+class CVisMatrixGLES
+{
+public:
+  CVisMatrixGLES();
+  ~CVisMatrixGLES();
+  
+  GLfloat* GetMatrix(EMATRIXMODE mode);
+
+  void MatrixMode(EMATRIXMODE mode);
+  void PushMatrix();
+  void PopMatrix();
+  void LoadIdentity();
+  void Ortho(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
+  void Ortho2D(GLfloat l, GLfloat r, GLfloat b, GLfloat t);
+  void Frustum(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
+  void Translatef(GLfloat x, GLfloat y, GLfloat z);
+  void Scalef(GLfloat x, GLfloat y, GLfloat z);
+  void Rotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
+  void MultMatrixf(const GLfloat *matrix);
+  void LookAt(GLfloat eyex, GLfloat eyey, GLfloat eyez, GLfloat centerx, GLfloat centery, GLfloat centerz, GLfloat upx, GLfloat upy, GLfloat upz);
+  bool Project(GLfloat objx, GLfloat objy, GLfloat objz, const GLfloat modelMatrix[16], const GLfloat projMatrix[16], const GLint viewport[4], GLfloat* winx, GLfloat* winy, GLfloat* winz);
+
+protected:
+
+  struct MatrixWrapper 
+  {
+    MatrixWrapper(){};
+    MatrixWrapper( const float values[16]) { memcpy(m_values,values,sizeof(m_values)); }
+    MatrixWrapper( const MatrixWrapper &rhs ) { memcpy(m_values, rhs.m_values, sizeof(m_values)); }
+    MatrixWrapper &operator=( const MatrixWrapper &rhs ) { memcpy(m_values, rhs.m_values, sizeof(m_values)); return *this;}
+    operator float*() { return m_values; }
+    operator const float*() const { return m_values; }
+
+    float m_values[16];
+  };
+
+  std::vector<struct MatrixWrapper> m_matrices[(int)MM_MATRIXSIZE];
+  GLfloat *m_pMatrix;
+  EMATRIXMODE m_matrixMode;
+};
diff --git a/addons/pvr.vdr.vnsi/src/EGLHelpers/VisShader.cpp b/addons/pvr.vdr.vnsi/src/EGLHelpers/VisShader.cpp
new file mode 100644
index 0000000..a717041
--- /dev/null
+++ b/addons/pvr.vdr.vnsi/src/EGLHelpers/VisShader.cpp
@@ -0,0 +1,221 @@
+/*
+ *      Copyright (C) 2005-2013 Team XBMC
+ *      http://www.xbmc.org
+ *
+ *  This Program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2, or (at your option)
+ *  any later version.
+ *
+ *  This Program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "VisShader.h"
+#include <stdio.h>
+
+#define LOG_SIZE 1024
+#define GLchar char
+
+//////////////////////////////////////////////////////////////////////
+// CShader
+//////////////////////////////////////////////////////////////////////
+bool CVisShader::LoadSource(const char *buffer)
+{
+  m_source = buffer;
+  return true;
+}
+
+//////////////////////////////////////////////////////////////////////
+// CVisGLSLVertexShader
+//////////////////////////////////////////////////////////////////////
+
+bool CVisGLSLVertexShader::Compile()
+{
+  GLint params[4];
+
+  Free();
+
+  m_vertexShader = glCreateShader(GL_VERTEX_SHADER);
+  const char *ptr = m_source.c_str();
+  glShaderSource(m_vertexShader, 1, &ptr, 0);
+  glCompileShader(m_vertexShader);
+  glGetShaderiv(m_vertexShader, GL_COMPILE_STATUS, params);
+  if (params[0]!=GL_TRUE)
+  {
+    GLchar log[LOG_SIZE];
+    glGetShaderInfoLog(m_vertexShader, LOG_SIZE, NULL, log);
+    m_lastLog = log;
+    m_compiled = false;
+  }
+  else
+  {
+    GLchar log[LOG_SIZE];
+    glGetShaderInfoLog(m_vertexShader, LOG_SIZE, NULL, log);
+    m_lastLog = log;
+    m_compiled = true;
+  }
+  return m_compiled;
+}
+
+void CVisGLSLVertexShader::Free()
+{
+  if (m_vertexShader)
+    glDeleteShader(m_vertexShader);
+  m_vertexShader = 0;
+}
+
+//////////////////////////////////////////////////////////////////////
+// CVisGLSLPixelShader
+//////////////////////////////////////////////////////////////////////
+bool CVisGLSLPixelShader::Compile()
+{
+  GLint params[4];
+
+  Free();
+
+  // Pixel shaders are not mandatory.
+  if (m_source.length()==0)
+    return true;
+
+  m_pixelShader = glCreateShader(GL_FRAGMENT_SHADER);
+  const char *ptr = m_source.c_str();
+  glShaderSource(m_pixelShader, 1, &ptr, 0);
+  glCompileShader(m_pixelShader);
+  glGetShaderiv(m_pixelShader, GL_COMPILE_STATUS, params);
+  if (params[0]!=GL_TRUE)
+  {
+    GLchar log[LOG_SIZE];
+    glGetShaderInfoLog(m_pixelShader, LOG_SIZE, NULL, log);
+    m_lastLog = log;
+    m_compiled = false;
+  }
+  else
+  {
+    GLchar log[LOG_SIZE];
+    glGetShaderInfoLog(m_pixelShader, LOG_SIZE, NULL, log);
+    m_lastLog = log;
+    m_compiled = true;
+  }
+  return m_compiled;
+}
+
+void CVisGLSLPixelShader::Free()
+{
+  if (m_pixelShader)
+    glDeleteShader(m_pixelShader);
+  m_pixelShader = 0;
+}
+
+//////////////////////////////////////////////////////////////////////
+// CVisGLSLShaderProgram
+//////////////////////////////////////////////////////////////////////
+void CVisGLSLShaderProgram::Free()
+{
+  m_pVP->Free();
+  m_pFP->Free();
+  if (m_shaderProgram)
+    glDeleteProgram(m_shaderProgram);
+  m_shaderProgram = 0;
+  m_ok = false;
+  m_lastProgram = 0;
+}
+
+bool CVisGLSLShaderProgram::CompileAndLink()
+{
+  GLint params[4];
+
+  // free resources
+  Free();
+
+  // compiled vertex shader
+  if (!m_pVP->Compile())
+    return false;
+
+  // compile pixel shader
+  if (!m_pFP->Compile())
+  {
+    m_pVP->Free();
+    return false;
+  }
+
+  // create program object
+  if (!(m_shaderProgram = glCreateProgram()))
+    goto error;
+
+  // attach the vertex shader
+  glAttachShader(m_shaderProgram, m_pVP->Handle());
+
+  // if we have a pixel shader, attach it. If not, fixed pipeline
+  // will be used.
+  if (m_pFP->Handle())
+    glAttachShader(m_shaderProgram, m_pFP->Handle());
+
+  // link the program
+  glLinkProgram(m_shaderProgram);
+  glGetProgramiv(m_shaderProgram, GL_LINK_STATUS, params);
+  if (params[0]!=GL_TRUE)
+  {
+    GLchar log[LOG_SIZE];
+    glGetProgramInfoLog(m_shaderProgram, LOG_SIZE, NULL, log);
+    goto error;
+  }
+
+  m_validated = false;
+  m_ok = true;
+  OnCompiledAndLinked();
+  return true;
+
+ error:
+  m_ok = false;
+  Free();
+  return false;
+}
+
+bool CVisGLSLShaderProgram::Enable()
+{
+  if (OK())
+  {
+    glUseProgram(m_shaderProgram);
+    if (OnEnabled())
+    {
+      if (!m_validated)
+      {
+        // validate the program
+        GLint params[4];
+        glValidateProgram(m_shaderProgram);
+        glGetProgramiv(m_shaderProgram, GL_VALIDATE_STATUS, params);
+        if (params[0]!=GL_TRUE)
+        {
+          GLchar log[LOG_SIZE];
+          glGetProgramInfoLog(m_shaderProgram, LOG_SIZE, NULL, log);
+        }
+        m_validated = true;
+      }
+      return true;
+    }
+    else
+    {
+      glUseProgram(0);
+      return false;
+    }
+    return true;
+  }
+  return false;
+}
+
+void CVisGLSLShaderProgram::Disable()
+{
+  if (OK())
+  {
+    glUseProgram(0);
+    OnDisabled();
+  }
+}
diff --git a/addons/pvr.vdr.vnsi/src/EGLHelpers/VisShader.h b/addons/pvr.vdr.vnsi/src/EGLHelpers/VisShader.h
new file mode 100644
index 0000000..5dd15fc
--- /dev/null
+++ b/addons/pvr.vdr.vnsi/src/EGLHelpers/VisShader.h
@@ -0,0 +1,198 @@
+#pragma once
+/*
+ *      Copyright (C) 2005-2013 Team XBMC
+ *      http://www.xbmc.org
+ *
+ *  This Program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2, or (at your option)
+ *  any later version.
+ *
+ *  This Program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#if defined(__APPLE__)                                                                                                                                                                                           
+#include <OpenGLES/ES2/gl.h>                                                                                                                                                                                     
+#include <OpenGLES/ES2/glext.h>                                                                                                                                                                                  
+#else                                                                                                                                                                                                            
+#include <GLES2/gl2.h>
+#include <GLES2/gl2ext.h>
+#endif//__APPLE__
+
+#include <vector>
+#include <string>
+
+//////////////////////////////////////////////////////////////////////
+// CVisShader - base class
+//////////////////////////////////////////////////////////////////////
+class CVisShader
+{
+public:
+  CVisShader() { m_compiled = false; }
+  virtual ~CVisShader() {}
+  virtual bool Compile() = 0;
+  virtual void Free() = 0;
+  virtual GLuint Handle() = 0;
+  virtual void SetSource(const char *src) { m_source = src; }
+  virtual bool LoadSource(const char *buffer);
+  bool OK() { return m_compiled; }
+
+protected:
+  std::string m_source;
+  std::string m_lastLog;
+  std::vector<std::string> m_attr;
+  bool m_compiled;
+
+};
+
+
+//////////////////////////////////////////////////////////////////////
+// CVisVertexShader - vertex shader class
+//////////////////////////////////////////////////////////////////////
+class CVisVertexShader : public CVisShader
+{
+public:
+  CVisVertexShader() { m_vertexShader = 0; }
+  virtual ~CVisVertexShader() { Free(); }
+  virtual void Free() {}
+  virtual GLuint Handle() { return m_vertexShader; }
+
+protected:
+  GLuint m_vertexShader;
+};
+
+class CVisGLSLVertexShader : public CVisVertexShader
+{
+public:
+  virtual void Free();
+  virtual bool Compile();
+};
+
+//////////////////////////////////////////////////////////////////////
+// CVisPixelShader - abstract pixel shader class
+//////////////////////////////////////////////////////////////////////
+class CVisPixelShader : public CVisShader
+{
+public:
+  CVisPixelShader() { m_pixelShader = 0; }
+  virtual ~CVisPixelShader() { Free(); }
+  virtual void Free() {}
+  virtual GLuint Handle() { return m_pixelShader; }
+
+protected:
+  GLuint m_pixelShader;
+};
+
+
+class CVisGLSLPixelShader : public CVisPixelShader
+{
+public:
+  virtual void Free();
+  virtual bool Compile();
+};
+
+//////////////////////////////////////////////////////////////////////
+// CShaderProgram - the complete shader consisting of both the vertex
+//                  and pixel programs. (abstract)
+//////////////////////////////////////////////////////////////////////
+class CVisShaderProgram
+{
+public:
+  CVisShaderProgram()
+    {
+      m_ok = false;
+      m_shaderProgram = 0;
+      m_pFP = NULL;
+      m_pVP = NULL;
+    }
+
+  virtual ~CVisShaderProgram()
+    {
+      Free();
+      delete m_pFP;
+      delete m_pVP;
+    }
+
+  // enable the shader
+  virtual bool Enable() = 0;
+
+  // disable the shader
+  virtual void Disable() = 0;
+
+  // returns true if shader is compiled and linked
+  bool OK() { return m_ok; }
+
+  // free resources
+  virtual void Free() {}
+
+  // return the vertex shader object
+  CVisVertexShader* VertexShader() { return m_pVP; }
+
+  // return the pixel shader object
+  CVisPixelShader* PixelShader() { return m_pFP; }
+
+  // compile and link the shaders
+  virtual bool CompileAndLink() = 0;
+
+  // override to to perform custom tasks on successfull compilation
+  // and linkage. E.g. obtaining handles to shader attributes.
+  virtual void OnCompiledAndLinked() {}
+
+  // override to to perform custom tasks before shader is enabled
+  // and after it is disabled. Return false in OnDisabled() to
+  // disable shader.
+  // E.g. setting attributes, disabling texture unites, etc
+  virtual bool OnEnabled() { return true; }
+  virtual void OnDisabled() { }
+
+  virtual GLuint ProgramHandle() { return m_shaderProgram; }
+
+protected:
+  CVisVertexShader* m_pVP;
+  CVisPixelShader*  m_pFP;
+  GLuint         m_shaderProgram;
+  bool           m_ok;
+};
+
+
+class CVisGLSLShaderProgram
+  : virtual public CVisShaderProgram
+{
+public:
+  CVisGLSLShaderProgram()
+    {
+      m_pFP = new CVisGLSLPixelShader();
+      m_pVP = new CVisGLSLVertexShader();
+    }
+  CVisGLSLShaderProgram(const char *vert, const char *frag)
+    {
+      m_pFP = new CVisGLSLPixelShader();
+      m_pFP->LoadSource(frag);
+      m_pVP = new CVisGLSLVertexShader();
+      m_pVP->LoadSource(vert);
+    }
+
+  // enable the shader
+  virtual bool Enable();
+
+  // disable the shader
+  virtual void Disable();
+
+  // free resources
+  virtual void Free();
+
+  // compile and link the shaders
+  virtual bool CompileAndLink();
+
+protected:
+  GLint         m_lastProgram;
+  bool          m_validated;
+};
diff --git a/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp b/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
index 87ed9e7..d4f5dbe 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
+++ b/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
@@ -27,9 +27,63 @@
 
 #if defined(HAVE_GL)
 #include <GL/gl.h>
+#undef HAVE_GLES2
 #elif defined(HAS_DX)
 #include "D3D9.h"
 #include "D3DX9.h"
+#elif defined(HAVE_GLES2)
+#include "EGLHelpers/VisGUIShader.h"
+
+#ifndef M_PI
+#define M_PI       3.141592654f
+#endif
+#define DEG2RAD(d) ( (d) * M_PI/180.0f )
+
+//OpenGL wrapper - allows us to use same code of functions draw_bars and render
+#define GL_PROJECTION             MM_PROJECTION
+#define GL_MODELVIEW              MM_MODELVIEW
+
+#define glPushMatrix()            vis_shader->PushMatrix()
+#define glPopMatrix()             vis_shader->PopMatrix()
+#define glTranslatef(x,y,z)       vis_shader->Translatef(x,y,z)
+#define glRotatef(a,x,y,z)        vis_shader->Rotatef(DEG2RAD(a),x,y,z)
+#define glPolygonMode(a,b)        ;
+#define glBegin(a)                vis_shader->Enable()
+#define glEnd()                   vis_shader->Disable()
+#define glMatrixMode(a)           vis_shader->MatrixMode(a)
+#define glLoadIdentity()          vis_shader->LoadIdentity()
+#define glFrustum(a,b,c,d,e,f)    vis_shader->Frustum(a,b,c,d,e,f)
+
+GLenum  g_mode = GL_TRIANGLES;
+float g_fWaveform[2][512];
+const char *frag = "precision mediump float; \n"
+                   "uniform   sampler2D m_samp0; \n"
+                   "varying   vec4      m_cord0; \n"
+                   "varying lowp vec4 m_colour; \n"
+                   "void main () \n"
+                   "{ \n"
+                   "  gl_FragColor.rgba = vec4(texture2D(m_samp0, m_cord0.xy).rgba * m_colour); \n"
+                   "}\n";
+
+const char *vert = "attribute vec4 m_attrpos;\n"
+                   "attribute vec4 m_attrcol;\n"
+                   "attribute vec4 m_attrcord0;\n"
+                   "attribute vec4 m_attrcord1;\n"
+                   "varying vec4   m_cord0;\n"
+                   "varying vec4   m_cord1;\n"
+                   "varying lowp   vec4 m_colour;\n"
+                   "uniform mat4   m_proj;\n"
+                   "uniform mat4   m_model;\n"
+                   "void main ()\n"
+                   "{\n"
+                   "  mat4 mvp    = m_proj * m_model;\n"
+                   "  gl_Position = mvp * m_attrpos;\n"
+                   "  m_colour    = m_attrcol;\n"
+                   "  m_cord0     = m_attrcord0;\n"
+                   "  m_cord1     = m_attrcord1;\n"
+                   "}\n";
+
+CVisGUIShader *vis_shader = NULL;
 #endif
 
 #define CONTROL_RENDER_ADDON                  9
@@ -219,6 +273,7 @@ class cOSDRender
   virtual void FreeResources();
   virtual void Render() {};
   virtual void SetDevice(void *device) {};
+  virtual bool Init() { return true; };
 protected:
   cOSDTexture *m_osdTextures[MAX_TEXTURES];
   std::queue<cOSDTexture*> m_disposedTextures;
@@ -285,7 +340,7 @@ void cOSDRender::SetBlock(int wndId, int x0, int y0, int x1, int y1, int stride,
     m_osdTextures[wndId]->SetBlock(x0, y0, x1, y1, stride, data, len);
 }
 
-#if defined(HAVE_GL)
+#if defined(HAVE_GL) || defined(HAVE_GLES2)
 class cOSDRenderGL : public cOSDRender
 {
 public:
@@ -294,6 +349,7 @@ class cOSDRenderGL : public cOSDRender
   virtual void DisposeTexture(int wndId);
   virtual void FreeResources();
   virtual void Render();
+  virtual bool Init();
 protected:
   GLuint m_hwTextures[MAX_TEXTURES];
   std::queue<GLuint> m_disposedHwTextures;
@@ -312,6 +368,30 @@ class cOSDRenderGL : public cOSDRender
     DisposeTexture(i);
   }
   FreeResources();
+#if defined(HAVE_GLES2)
+  if (vis_shader)
+  {
+    delete vis_shader;
+    vis_shader = NULL;
+  }
+#endif
+}
+
+bool cOSDRenderGL::Init()
+{
+#if defined(HAVE_GLES2)
+  vis_shader = new CVisGUIShader(vert, frag);
+
+  if(!vis_shader)
+    return false;
+
+  if(!vis_shader->CompileAndLink())
+  {
+    delete vis_shader;
+    return false;
+  }
+#endif
+  return true;
 }
 
 void cOSDRenderGL::DisposeTexture(int wndId)
@@ -348,7 +428,9 @@ void cOSDRenderGL::Render()
   glLoadIdentity ();
   glEnable(GL_BLEND);
   glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+#if defined(HAVE_GL)
   glColor4f(1.0f, 1.0f, 1.0f, 0.75f);
+#endif
 
   for (int i = 0; i < MAX_TEXTURES; i++)
   {
@@ -366,7 +448,9 @@ void cOSDRenderGL::Render()
     // create gl texture
     if (dirty && !glIsTexture(m_hwTextures[i]))
     {
+#if defined(HAVE_GL)
       glPushClientAttrib(GL_CLIENT_PIXEL_STORE_BIT);
+#endif
       glEnable(GL_TEXTURE_2D);
       glGenTextures(1, &m_hwTextures[i]);
       glBindTexture(GL_TEXTURE_2D, m_hwTextures[i]);
@@ -377,12 +461,16 @@ void cOSDRenderGL::Render()
       glPixelStorei(GL_UNPACK_ALIGNMENT, 1);
       glPixelStorei(GL_UNPACK_ROW_LENGTH, width);
       glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, width, height, 0, GL_RGBA, GL_UNSIGNED_BYTE, m_osdTextures[i]->GetBuffer());
+#if defined(HAVE_GL)
       glPopClientAttrib();
+#endif
     }
     // update texture
     else if (dirty)
     {
+#if defined(HAVE_GL)
       glPushClientAttrib(GL_CLIENT_PIXEL_STORE_BIT);
+#endif
       glEnable(GL_TEXTURE_2D);
       glBindTexture(GL_TEXTURE_2D, m_hwTextures[i]);
       glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
@@ -394,7 +482,9 @@ void cOSDRenderGL::Render()
       glPixelStorei(GL_UNPACK_SKIP_PIXELS, x0);
       glPixelStorei(GL_UNPACK_SKIP_ROWS, y0);
       glTexSubImage2D(GL_TEXTURE_2D, 0, x0, y0, x1-x0+1, y1-y0+1, GL_RGBA, GL_UNSIGNED_BYTE, m_osdTextures[i]->GetBuffer());
+#if defined(HAVE_GL)
       glPopClientAttrib();
+#endif
     }
 
     // render texture
@@ -422,12 +512,15 @@ void cOSDRenderGL::Render()
     destY1 *= -1;
 
     glEnable(GL_TEXTURE_2D);
-    glActiveTextureARB(GL_TEXTURE0);
+    glActiveTexture(GL_TEXTURE0);
     glBindTexture(GL_TEXTURE_2D, m_hwTextures[i]);
     glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);
     glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);
     glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
     glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
+
+#if defined(HAVE_GL)
+
     glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE);
     glBegin(GL_QUADS);
     glTexCoord2f(0.0, 0.0);  glVertex2f(destX0, destY0);
@@ -435,10 +528,62 @@ void cOSDRenderGL::Render()
     glTexCoord2f(1.0, 1.0);  glVertex2f(destX1, destY1);
     glTexCoord2f(0.0, 1.0);  glVertex2f(destX0, destY1);
     glEnd();
+
+#elif defined(HAVE_GLES2)
+
+    GLubyte idx[4] = {0, 1, 3, 2};        //determines order of triangle strip
+    GLfloat ver[4][4];
+    GLfloat tex[4][2];
+    float col[4][3];
+
+    for (int index = 0;index < 4;++index)
+    {
+      col[index][0] = col[index][1] = col[index][2] = 1.0;
+    }
+
+    glBegin();
+
+    GLint   posLoc = vis_shader->GetPosLoc();
+    GLint   texLoc = vis_shader->GetCord0Loc();
+    GLint   colLoc = vis_shader->GetColLoc();
+
+    glVertexAttribPointer(posLoc, 4, GL_FLOAT, 0, 0, ver);
+    glVertexAttribPointer(texLoc, 2, GL_FLOAT, 0, 0, tex);
+    glVertexAttribPointer(colLoc, 3, GL_FLOAT, 0, 0, col);
+
+    glEnableVertexAttribArray(posLoc);
+    glEnableVertexAttribArray(texLoc);
+    glEnableVertexAttribArray(colLoc);
+
+    // Set vertex coordinates
+    for(int i = 0; i < 4; i++)
+    {
+      ver[i][2] = 0.0f;// set z to 0
+      ver[i][3] = 1.0f;
+    }
+    ver[0][0] = ver[3][0] = destX0;
+    ver[0][1] = ver[1][1] = destY0;
+    ver[1][0] = ver[2][0] = destX1;
+    ver[2][1] = ver[3][1] = destY1;
+
+    // Set texture coordinates
+    tex[0][0] = tex[3][0] = 0;
+    tex[0][1] = tex[1][1] = 0;
+    tex[1][0] = tex[2][0] = 1;
+    tex[2][1] = tex[3][1] = 1;
+
+    glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_BYTE, idx);
+
+    glDisableVertexAttribArray(posLoc);
+    glDisableVertexAttribArray(texLoc);
+    glDisableVertexAttribArray(colLoc);
+
+    glEnd();
+#endif
+
     glBindTexture (GL_TEXTURE_2D, 0);
     glDisable(GL_TEXTURE_2D);
   }
-
   glPopMatrix();
   glMatrixMode(GL_MODELVIEW);
   glPopMatrix();
@@ -667,7 +812,7 @@ bool cVNSIAdmin::Open(const std::string& hostname, int port, const char* name)
     return false;
 
   m_bIsOsdControl = false;
-#if defined(HAVE_GL)
+#if defined(HAVE_GL) || defined(HAVE_GLES2)
   m_osdRender = new cOSDRenderGL();
 #elif defined(HAS_DX)
   m_osdRender = new cOSDRenderDX();
@@ -675,6 +820,12 @@ bool cVNSIAdmin::Open(const std::string& hostname, int port, const char* name)
   m_osdRender = new cOSDRender();
 #endif
 
+  if(!m_osdRender->Init())
+  {
+    delete m_osdRender;
+    return false;
+  }
+
   if (!ConnectOSD())
     return false;
 
@@ -697,6 +848,11 @@ bool cVNSIAdmin::Open(const std::string& hostname, int port, const char* name)
   GUI->Window_destroy(m_window);
   Close();
 
+  if (m_osdRender)
+  {
+    delete m_osdRender;
+  }
+
   return true;
 }
 
-- 
1.8.1.6


From 31f57ee6e72bb6f86c2e374f48771f768359d915 Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Sun, 17 Mar 2013 11:14:08 +0100
Subject: [PATCH 35/63] vnsi: add skin file for aeon.nox

---
 .../resources/skins/skin.aeon.nox/1080i/Admin.xml  | 188 +++++++++++++++++++++
 1 file changed, 188 insertions(+)
 create mode 100644 addons/pvr.vdr.vnsi/addon/resources/skins/skin.aeon.nox/1080i/Admin.xml

diff --git a/addons/pvr.vdr.vnsi/addon/resources/skins/skin.aeon.nox/1080i/Admin.xml b/addons/pvr.vdr.vnsi/addon/resources/skins/skin.aeon.nox/1080i/Admin.xml
new file mode 100644
index 0000000..74e3aa8
--- /dev/null
+++ b/addons/pvr.vdr.vnsi/addon/resources/skins/skin.aeon.nox/1080i/Admin.xml
@@ -0,0 +1,188 @@
+<window>
+  <defaultcontrol always="true">10</defaultcontrol>
+  <onload>SetProperty(menu,osd)</onload>
+  <allowoverlay>no</allowoverlay>
+  <include condition="!Skin.HasSetting(firstrun4.0)">AutoConfig</include>
+  <animation type="WindowOpen" reversible="false" condition="![Window.Previous(settings) | Window.Previous(skinsettings)]">
+    <effect type="zoom" start="150" end="100" center="960,540" time="900" tween="cubic" />
+    <effect type="fade" end="100" time="900" />
+  </animation>
+  <animation type="WindowClose" reversible="false" condition="![Window.Next(settings) | Window.Next(skinsettings)]">
+    <effect type="fade" start="100" end="0" time="300" />
+    <effect type="zoom" start="100" end="130" center="960,540" time="300" tween="cubic" easing="in" />
+  </animation>
+  <controls>
+      <control type="group">
+        <include>CommonSettingsBackground</include>
+        <include>CommonMediaPlayingBackground</include>
+        <include>Furniture_SettingsFloor</include>
+      </control>
+	  <control type="group">
+        <animation effect="zoom" end="91" center="960,360" time="400" tween="cubic" easing="inout" condition="true">Conditional</animation>
+        <include>Furniture_SettingsBackPanel</include>
+      <control type="list" id="10">
+        <defaultcontrol always="true">1</defaultcontrol>
+		<posx>63</posx>
+		<posy>180</posy>
+		<width>326</width>
+		<height>768</height>
+		<onleft>10</onleft>
+		<onright>11</onright>
+		<onup>10</onup>
+		<ondown>9000</ondown>
+		<pagecontrol>-</pagecontrol>
+		<scrolltime>300</scrolltime>
+		<itemlayout height="74" width="334">
+		  <control type="label">
+		    <width>334</width>
+		    <height>74</height>
+		    <font>Font_Bold20</font>
+            <textcolor>grey2</textcolor>
+            <label>$INFO[ListItem.Label]</label>
+		  </control>
+		</itemlayout>
+		<focusedlayout height="74" width="334">
+		  <control type="image">
+            <width>334</width>
+            <height>74</height>
+            <texture>views/tripanel/listselect_fo.png</texture>
+            <animation effect="fade" start="100" end="50" time="50" condition="!Control.HasFocus(9000)">Conditional</animation>
+            <colordiffuse>$VAR[FocusTextureColorVar]</colordiffuse>
+		  </control>
+		  <control type="label">
+            <width>334</width>
+            <height>74</height>
+            <font>Font_Bold20</font>
+            <label>$INFO[ListItem.Label]</label>
+		  </control>
+		</focusedlayout>
+		<content>
+         <item id="1">
+		   <label>$ADDON[pvr.vdr.vnsi 30100]</label>
+		   <onclick>SetProperty(menu,osd)</onclick>
+		 </item>
+		 <item id="2">
+		   <label>$ADDON[pvr.vdr.vnsi 30101]</label>
+		   <onclick>SetProperty(menu,setup)</onclick>
+		 </item>
+        </content>
+      </control>
+      <control type="group" id="11">
+        <posx>387</posx>
+        <posy>120</posy>
+        <control type="image">
+          <description>Background</description>
+          <posx>0</posx>
+          <posy>0</posy>
+          <width>1469</width>
+          <height>741</height>
+          <texture background="true">$INFO[Container(9000).ListItem.Icon]</texture>
+        </control>
+        <control type="image">
+          <description>Background Title</description>
+          <posx>0</posx>
+          <posy>0</posy>
+          <width>1469</width>
+          <height>50</height>
+          <aspectratio>stretch</aspectratio>
+          <texture>GlassTitleBar.png</texture>
+        </control>
+	    <control type="group" id="12">
+	      <visible>StringCompare(Window.Property(menu),osd)</visible>
+		  <control type="button" id="13">
+            <description>osd control label</description>
+            <posx>25</posx>
+            <posy>10</posy>
+            <width>1400</width>
+            <height>30</height>
+            <texturefocus>views/tripanel/listselect_fo.png</texturefocus>
+            <colordiffuse>$VAR[FocusTextureColorVar]</colordiffuse>
+            <texturenofocus>-</texturenofocus>
+            <label>$ADDON[pvr.vdr.vnsi 30103]</label>
+            <font>font16caps</font>
+            <textcolor>grey</textcolor>
+            <focusedcolor>white2</focusedcolor>
+		    <onleft>10</onleft>
+          </control>
+		  <control type="label">
+            <description>not focused label</description>
+            <visible>Control.HasFocus(11)</visible>
+            <posx>300</posx>
+            <posy>20</posy>
+            <width>1380</width>
+            <height>30</height>
+            <font>font16caps</font>
+            <label>$ADDON[pvr.vdr.vnsi 30103]</label>
+            <align>left</align>
+            <aligny>center</aligny>
+            <textcolor>white</textcolor>
+            <shadowcolor>black</shadowcolor>
+          </control>
+          <control type="renderaddon" id ="9">
+            <posx>5</posx>
+            <posy>50</posy>
+            <width>1453</width>
+            <height>740</height>
+          </control>
+	    </control>
+	    <control type="group" id="20">
+	      <visible>StringCompare(Window.Property(menu),setup)</visible>
+		  <defaultcontrol always="true">21</defaultcontrol>
+		  <control type="spincontrolex" id="21">
+            <description>Source Type</description>
+            <posx>10</posx>
+            <posy>50</posy>
+            <width>1400</width>
+            <height>40</height>
+            <texturefocus>views/tripanel/listselect_fo.png</texturefocus>
+            <colordiffuse>$VAR[FocusTextureColorVar]</colordiffuse>
+            <texturenofocus>-</texturenofocus>
+            <font>Font_Bold20</font>
+            <textcolor>grey</textcolor>
+            <focusedcolor>white2</focusedcolor>
+            <aligny>center</aligny>
+            <label>$ADDON[pvr.vdr.vnsi 30104]</label>
+            <onleft>10</onleft>
+			<ondown>22</ondown>
+        </control>
+	    <control type="spincontrolex" id="22">
+            <description>Source Type</description>
+            <posx>10</posx>
+            <posy>100</posy>
+            <width>1400</width>
+            <height>40</height>
+            <texturefocus>views/tripanel/listselect_fo.png</texturefocus>
+            <colordiffuse>$VAR[FocusTextureColorVar]</colordiffuse>
+            <texturenofocus>-</texturenofocus>
+            <font>Font_Bold20</font>
+            <textcolor>grey</textcolor>
+            <focusedcolor>white2</focusedcolor>
+            <aligny>center</aligny>
+            <label>$ADDON[pvr.vdr.vnsi 30105]</label>
+            <onleft>10</onleft>
+			<onup>21</onup>
+			<ondown>23</ondown>
+        </control>
+        <control type="spincontrolex" id="23">
+            <description>Source Type</description>
+            <posx>10</posx>
+            <posy>150</posy>
+            <width>1400</width>
+            <height>40</height>
+            <texturefocus>views/tripanel/listselect_fo.png</texturefocus>
+            <colordiffuse>$VAR[FocusTextureColorVar]</colordiffuse>
+            <texturenofocus>-</texturenofocus>
+            <font>Font_Bold20</font>
+            <textcolor>grey</textcolor>
+            <focusedcolor>white2</focusedcolor>
+            <aligny>center</aligny>
+            <label>$ADDON[pvr.vdr.vnsi 30106]</label>
+            <onleft>10</onleft>
+			<onup>22</onup>
+        </control>
+	    </control>
+      </control>
+	</control>
+    <include>Clock</include>
+  </controls>
+</window>
-- 
1.8.1.6


From 3b49da37b4baf184dd7567041b01ed8f28d90fca Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Sun, 17 Mar 2013 16:10:08 +0100
Subject: [PATCH 36/63] vnsi: rework settings dialog for skin clonfluence

---
 .../resources/skins/skin.confluence/720p/Admin.xml | 104 ++++++++++++++-------
 1 file changed, 68 insertions(+), 36 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/addon/resources/skins/skin.confluence/720p/Admin.xml b/addons/pvr.vdr.vnsi/addon/resources/skins/skin.confluence/720p/Admin.xml
index b634b47..910de6d 100644
--- a/addons/pvr.vdr.vnsi/addon/resources/skins/skin.confluence/720p/Admin.xml
+++ b/addons/pvr.vdr.vnsi/addon/resources/skins/skin.confluence/720p/Admin.xml
@@ -3,41 +3,73 @@
   <onload>SetProperty(menu,osd)</onload>
   <allowoverlay>no</allowoverlay>
   <controls>
-    <control type="group">
-      <defaultcontrol always="true">10</defaultcontrol>
-      <posx>90</posx>
-      <posy>30</posy>
-      <animation type="WindowOpen" reversible="false">
-        <effect type="zoom" start="80" end="100" center="640,360" easing="out" tween="back" time="300" />
-        <effect type="fade" start="0" end="100" time="300" />
-      </animation>
-      <animation type="WindowClose" reversible="false">
-        <effect type="zoom" start="100" end="80" center="640,360" easing="in" tween="back" time="300" />
-        <effect type="fade" start="100" end="0" time="300" />
-      </animation>
-      <control type="image">
-        <description>Background</description>
-        <posx>0</posx>
-        <posy>0</posy>
-        <width>1100</width>
-        <height>640</height>
-        <texture border="20">DialogBack.png</texture>
-      </control>
-      <control type="image">
-        <description>LOGO</description>
-        <posx>30</posx>
-        <posy>15</posy>
-        <width>220</width>
-        <height>80</height>
-        <aspectratio>keep</aspectratio>
-        <texture>Confluence_Logo.png</texture>
-      </control>
+    <include>CommonBackground</include>
+	<control type="image">
+		<posx>0</posx>
+		<posy>100r</posy>
+		<width>1280</width>
+		<height>100</height>
+		<texture>floor.png</texture>
+		<include>VisibleFadeEffect</include>
+	</control>
+	<control type="group">
+	  <posx>90</posx>
+	  <posy>30</posy>
+	  <animation type="WindowOpen" reversible="false">
+		<effect type="zoom" start="80" end="100" center="640,360" easing="out" tween="back" time="300" />
+		<effect type="fade" start="0" end="100" time="300" />
+	  </animation>
+	  <animation type="WindowClose" reversible="false">
+		<effect type="zoom" start="100" end="80" center="640,360" easing="in" tween="back" time="300" />
+		<effect type="fade" start="100" end="0" time="300" />
+	  </animation>
+	  <control type="image">
+		<posx>5</posx>
+		<posy>5</posy>
+		<width>1090</width>
+		<height>630</height>
+		<texture border="15">ContentPanel.png</texture>
+		</control>
+	  <control type="image">
+		<posx>5</posx>
+		<posy>625</posy>
+		<width>1090</width>
+		<height>64</height>
+		<texture border="15">ContentPanelMirror.png</texture>
+	  </control>
+	  <control type="button">
+		<description>Close Window button</description>
+		<posx>980</posx>
+		<posy>11</posy>
+		<width>64</width>
+		<height>32</height>
+		<label>-</label>
+		<font>-</font>
+		<onclick>PreviousMenu</onclick>
+		<texturefocus>DialogCloseButton-focus.png</texturefocus>
+		<texturenofocus>DialogCloseButton.png</texturenofocus>
+		<onleft>1</onleft>
+		<onright>1</onright>
+		<onup>1</onup>
+		<ondown>1</ondown>
+		<visible>system.getbool(input.enablemouse)</visible>
+		<include>VisibleFadeEffect</include>
+	  </control>
+	  <control type="image">
+		<description>LOGO</description>
+		<posx>30</posx>
+		<posy>15</posy>
+		<width>220</width>
+		<height>80</height>
+		<aspectratio>keep</aspectratio>
+		<texture>Confluence_Logo.png</texture>
+	  </control>
       <control type="list" id="10">
         <defaultcontrol always="true">1</defaultcontrol>
 		<posx>10</posx>
-		<posy>82</posy>
+		<posy>90</posy>
 		<width>260</width>
-		<height>541</height>
+		<height>481</height>
 		<onleft>10</onleft>
 		<onright>11</onright>
 		<onup>10</onup>
@@ -96,14 +128,14 @@
         </content>
       </control>
       <control type="group" id="11">
-        <posx>290</posx>
-        <posy>30</posy>
+        <posx>268</posx>
+        <posy>10</posy>
         <control type="image">
           <description>Background</description>
           <posx>0</posx>
           <posy>0</posy>
           <width>790</width>
-          <height>570</height>
+          <height>620</height>
           <texture border="5">black-back2.png</texture>
         </control>
         <control type="image">
@@ -120,7 +152,7 @@
 		  <control type="button" id="13">
             <description>osd control label</description>
             <posx>25</posx>
-            <posy>10</posy>
+            <posy>20</posy>
             <width>765</width>
             <height>30</height>
             <texturefocus border="5">MenuItemFO.png</texturefocus>
@@ -134,7 +166,7 @@
             <description>not focused label</description>
             <visible>Control.HasFocus(11)</visible>
             <posx>300</posx>
-            <posy>20</posy>
+            <posy>30</posy>
             <width>740</width>
             <height>30</height>
             <font>font16caps</font>
-- 
1.8.1.6


From 40931047370eb3ec8fcccddfb6b3c2f868997619 Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Sun, 17 Mar 2013 17:56:58 +0100
Subject: [PATCH 37/63] vnsi: fix fallback method for skins

---
 addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp b/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
index d4f5dbe..d32f79d 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
+++ b/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
@@ -830,7 +830,7 @@ bool cVNSIAdmin::Open(const std::string& hostname, int port, const char* name)
     return false;
 
   // Load the Window as Dialog
-  m_window = GUI->Window_create("Admin.xml", "Confluence", false, true);
+  m_window = GUI->Window_create("Admin.xml", "skin.confluence", false, true);
   m_window->m_cbhdl   = this;
   m_window->CBOnInit  = OnInitCB;
   m_window->CBOnFocus = OnFocusCB;
-- 
1.8.1.6


From d47dbc22f437f86109a2cc4992c64a9153b7aeb3 Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Mon, 18 Mar 2013 12:23:53 +0100
Subject: [PATCH 38/63] vdr-plugin-vnsiserver: raise max value for timeshift
 buffers

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c
index 8676878..2b0e617 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c
@@ -56,14 +56,14 @@ void cMenuSetupVNSI::Store(void)
 
   SetupStore(CONFNAME_TIMESHIFT, TimeshiftMode = newTimeshiftMode);
 
-  if (newTimeshiftBufferSize > 20)
-    newTimeshiftBufferSize = 20;
+  if (newTimeshiftBufferSize > 40)
+    newTimeshiftBufferSize = 40;
   else if (newTimeshiftBufferSize < 1)
     newTimeshiftBufferSize = 1;
   SetupStore(CONFNAME_TIMESHIFTBUFFERSIZE, TimeshiftBufferSize = newTimeshiftBufferSize);
 
-  if (newTimeshiftBufferFileSize > 10)
-    newTimeshiftBufferFileSize = 10;
+  if (newTimeshiftBufferFileSize > 20)
+    newTimeshiftBufferFileSize = 20;
   else if (newTimeshiftBufferFileSize < 1)
     newTimeshiftBufferFileSize = 1;
   SetupStore(CONFNAME_TIMESHIFTBUFFERFILESIZE, TimeshiftBufferFileSize = newTimeshiftBufferFileSize);
-- 
1.8.1.6


From 437ab95ff4a13cb27a02b529147d5930366f1074 Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Mon, 18 Mar 2013 12:24:06 +0100
Subject: [PATCH 39/63] vnsi: raise max value for timeshift buffers

---
 addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp b/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
index d32f79d..3dc271b 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
+++ b/addons/pvr.vdr.vnsi/src/VNSIAdmin.cpp
@@ -970,7 +970,7 @@ bool cVNSIAdmin::OnInit()
   m_spinTimeshiftBufferRam = GUI->Control_getSpin(m_window, CONTROL_SPIN_TIMESHIFT_BUFFER_RAM);
   m_spinTimeshiftBufferRam->Clear();
   char buffer[8];
-  for (int i = 1; i <= 20; i++)
+  for (int i = 1; i <= 40; i++)
   {
     sprintf(buffer, "%d", i);
     m_spinTimeshiftBufferRam->AddLabel(buffer, i);
@@ -995,7 +995,7 @@ bool cVNSIAdmin::OnInit()
   }
   m_spinTimeshiftBufferFile = GUI->Control_getSpin(m_window, CONTROL_SPIN_TIMESHIFT_BUFFER_FILE);
   m_spinTimeshiftBufferFile->Clear();
-  for (int i = 1; i <= 10; i++)
+  for (int i = 1; i <= 20; i++)
   {
     sprintf(buffer, "%d", i);
     m_spinTimeshiftBufferFile->AddLabel(buffer, i);
-- 
1.8.1.6


From b0edaae221503bd14b4b82f851d876f7e22a9388 Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Mon, 18 Mar 2013 12:46:04 +0100
Subject: [PATCH 40/63] vnsi: bump version to 1.8.0

---
 addons/pvr.vdr.vnsi/addon/addon.xml.in | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/addons/pvr.vdr.vnsi/addon/addon.xml.in b/addons/pvr.vdr.vnsi/addon/addon.xml.in
index bc5a2fe..67e3db0 100644
--- a/addons/pvr.vdr.vnsi/addon/addon.xml.in
+++ b/addons/pvr.vdr.vnsi/addon/addon.xml.in
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <addon
   id="pvr.vdr.vnsi"
-  version="1.7.4"
+  version="1.8.0"
   name="VDR VNSI Client"
   provider-name="FernetMenta, Team XBMC">
   <requires>
-- 
1.8.1.6


From 86012c3d2fbc20d4bdc3af250ba04b6bd7679b23 Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Mon, 18 Mar 2013 12:46:55 +0100
Subject: [PATCH 41/63] vdr-plugin-vnsiserver: update headers

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c | 10 ++----
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h | 10 ++----
 .../vdr-plugin-vnsiserver/parser_AAC.c             | 10 ++----
 .../vdr-plugin-vnsiserver/parser_AAC.h             | 10 ++----
 .../vdr-plugin-vnsiserver/parser_AC3.c             | 10 ++----
 .../vdr-plugin-vnsiserver/parser_AC3.h             | 10 ++----
 .../vdr-plugin-vnsiserver/parser_DTS.c             | 10 ++----
 .../vdr-plugin-vnsiserver/parser_DTS.h             | 10 ++----
 .../vdr-plugin-vnsiserver/parser_MPEGAudio.c       | 10 ++----
 .../vdr-plugin-vnsiserver/parser_MPEGAudio.h       | 10 ++----
 .../vdr-plugin-vnsiserver/parser_MPEGVideo.c       | 10 ++----
 .../vdr-plugin-vnsiserver/parser_MPEGVideo.h       | 10 ++----
 .../vdr-plugin-vnsiserver/parser_Subtitle.c        | 10 ++----
 .../vdr-plugin-vnsiserver/parser_Subtitle.h        | 10 ++----
 .../vdr-plugin-vnsiserver/parser_Teletext.c        | 10 ++----
 .../vdr-plugin-vnsiserver/parser_Teletext.h        | 10 ++----
 .../vdr-plugin-vnsiserver/parser_h264.c            | 10 ++----
 .../vdr-plugin-vnsiserver/parser_h264.h            | 10 ++----
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c  | 36 +++++++++++-----------
 19 files changed, 72 insertions(+), 144 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
index ca5d8a9..bb32e75 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
@@ -1,8 +1,5 @@
 /*
- *      vdr-plugin-vnsi - XBMC server plugin for VDR
- *
- *      Copyright (C) 2010 Alwin Esch (Team XBMC)
- *
+ *      Copyright (C) 2005-2012 Team XBMC
  *      http://www.xbmc.org
  *
  *  This Program is free software; you can redistribute it and/or modify
@@ -16,9 +13,8 @@
  *  GNU General Public License for more details.
  *
  *  You should have received a copy of the GNU General Public License
- *  along with XBMC; see the file COPYING.  If not, write to
- *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
- *  http://www.gnu.org/copyleft/gpl.html
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
  *
  */
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
index ed360c2..838ea2a 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
@@ -1,8 +1,5 @@
 /*
- *      vdr-plugin-vnsi - XBMC server plugin for VDR
- *
- *      Copyright (C) 2010 Alwin Esch (Team XBMC)
- *
+ *      Copyright (C) 2005-2012 Team XBMC
  *      http://www.xbmc.org
  *
  *  This Program is free software; you can redistribute it and/or modify
@@ -16,9 +13,8 @@
  *  GNU General Public License for more details.
  *
  *  You should have received a copy of the GNU General Public License
- *  along with XBMC; see the file COPYING.  If not, write to
- *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
- *  http://www.gnu.org/copyleft/gpl.html
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
  *
  */
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AAC.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AAC.c
index 2a3ff5d..c09313c 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AAC.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AAC.c
@@ -1,8 +1,5 @@
 /*
- *      vdr-plugin-vnsi - XBMC server plugin for VDR
- *
- *      Copyright (C) 2010 Alwin Esch (Team XBMC)
- *
+ *      Copyright (C) 2005-2012 Team XBMC
  *      http://www.xbmc.org
  *
  *  This Program is free software; you can redistribute it and/or modify
@@ -16,9 +13,8 @@
  *  GNU General Public License for more details.
  *
  *  You should have received a copy of the GNU General Public License
- *  along with XBMC; see the file COPYING.  If not, write to
- *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
- *  http://www.gnu.org/copyleft/gpl.html
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
  *
  */
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AAC.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AAC.h
index defb1d4..1142416 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AAC.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AAC.h
@@ -1,8 +1,5 @@
 /*
- *      vdr-plugin-vnsi - XBMC server plugin for VDR
- *
- *      Copyright (C) 2010 Alwin Esch (Team XBMC)
- *
+ *      Copyright (C) 2005-2012 Team XBMC
  *      http://www.xbmc.org
  *
  *  This Program is free software; you can redistribute it and/or modify
@@ -16,9 +13,8 @@
  *  GNU General Public License for more details.
  *
  *  You should have received a copy of the GNU General Public License
- *  along with XBMC; see the file COPYING.  If not, write to
- *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
- *  http://www.gnu.org/copyleft/gpl.html
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
  *
  */
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AC3.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AC3.c
index 4cb88d5..9edd810 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AC3.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AC3.c
@@ -1,8 +1,5 @@
 /*
- *      vdr-plugin-vnsi - XBMC server plugin for VDR
- *
- *      Copyright (C) 2010 Alwin Esch (Team XBMC)
- *
+ *      Copyright (C) 2005-2012 Team XBMC
  *      http://www.xbmc.org
  *
  *  This Program is free software; you can redistribute it and/or modify
@@ -16,9 +13,8 @@
  *  GNU General Public License for more details.
  *
  *  You should have received a copy of the GNU General Public License
- *  along with XBMC; see the file COPYING.  If not, write to
- *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
- *  http://www.gnu.org/copyleft/gpl.html
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
  *
  */
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AC3.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AC3.h
index 5844437..2bb164e 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AC3.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AC3.h
@@ -1,8 +1,5 @@
 /*
- *      vdr-plugin-vnsi - XBMC server plugin for VDR
- *
- *      Copyright (C) 2010 Alwin Esch (Team XBMC)
- *
+ *      Copyright (C) 2005-2012 Team XBMC
  *      http://www.xbmc.org
  *
  *  This Program is free software; you can redistribute it and/or modify
@@ -16,9 +13,8 @@
  *  GNU General Public License for more details.
  *
  *  You should have received a copy of the GNU General Public License
- *  along with XBMC; see the file COPYING.  If not, write to
- *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
- *  http://www.gnu.org/copyleft/gpl.html
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
  *
  */
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_DTS.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_DTS.c
index 042a1e5..d2cbbe2 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_DTS.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_DTS.c
@@ -1,8 +1,5 @@
 /*
- *      vdr-plugin-vnsi - XBMC server plugin for VDR
- *
- *      Copyright (C) 2010 Alwin Esch (Team XBMC)
- *
+ *      Copyright (C) 2005-2012 Team XBMC
  *      http://www.xbmc.org
  *
  *  This Program is free software; you can redistribute it and/or modify
@@ -16,9 +13,8 @@
  *  GNU General Public License for more details.
  *
  *  You should have received a copy of the GNU General Public License
- *  along with XBMC; see the file COPYING.  If not, write to
- *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
- *  http://www.gnu.org/copyleft/gpl.html
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
  *
  */
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_DTS.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_DTS.h
index c388345..515e328 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_DTS.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_DTS.h
@@ -1,8 +1,5 @@
 /*
- *      vdr-plugin-vnsi - XBMC server plugin for VDR
- *
- *      Copyright (C) 2010 Alwin Esch (Team XBMC)
- *
+ *      Copyright (C) 2005-2012 Team XBMC
  *      http://www.xbmc.org
  *
  *  This Program is free software; you can redistribute it and/or modify
@@ -16,9 +13,8 @@
  *  GNU General Public License for more details.
  *
  *  You should have received a copy of the GNU General Public License
- *  along with XBMC; see the file COPYING.  If not, write to
- *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
- *  http://www.gnu.org/copyleft/gpl.html
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
  *
  */
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.c
index 2f2cc5e..81db5e5 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.c
@@ -1,8 +1,5 @@
 /*
- *      vdr-plugin-vnsi - XBMC server plugin for VDR
- *
- *      Copyright (C) 2010 Alwin Esch (Team XBMC)
- *
+ *      Copyright (C) 2005-2012 Team XBMC
  *      http://www.xbmc.org
  *
  *  This Program is free software; you can redistribute it and/or modify
@@ -16,9 +13,8 @@
  *  GNU General Public License for more details.
  *
  *  You should have received a copy of the GNU General Public License
- *  along with XBMC; see the file COPYING.  If not, write to
- *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
- *  http://www.gnu.org/copyleft/gpl.html
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
  *
  */
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.h
index b08689b..348fc00 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.h
@@ -1,8 +1,5 @@
 /*
- *      vdr-plugin-vnsi - XBMC server plugin for VDR
- *
- *      Copyright (C) 2010 Alwin Esch (Team XBMC)
- *
+ *      Copyright (C) 2005-2012 Team XBMC
  *      http://www.xbmc.org
  *
  *  This Program is free software; you can redistribute it and/or modify
@@ -16,9 +13,8 @@
  *  GNU General Public License for more details.
  *
  *  You should have received a copy of the GNU General Public License
- *  along with XBMC; see the file COPYING.  If not, write to
- *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
- *  http://www.gnu.org/copyleft/gpl.html
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
  *
  */
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.c
index ba525b4..45e05d1 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.c
@@ -1,8 +1,5 @@
 /*
- *      vdr-plugin-vnsi - XBMC server plugin for VDR
- *
- *      Copyright (C) 2010 Alwin Esch (Team XBMC)
- *
+ *      Copyright (C) 2005-2012 Team XBMC
  *      http://www.xbmc.org
  *
  *  This Program is free software; you can redistribute it and/or modify
@@ -16,9 +13,8 @@
  *  GNU General Public License for more details.
  *
  *  You should have received a copy of the GNU General Public License
- *  along with XBMC; see the file COPYING.  If not, write to
- *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
- *  http://www.gnu.org/copyleft/gpl.html
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
  *
  */
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.h
index 2c728c0..cdf918c 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.h
@@ -1,8 +1,5 @@
 /*
- *      vdr-plugin-vnsi - XBMC server plugin for VDR
- *
- *      Copyright (C) 2010 Alwin Esch (Team XBMC)
- *
+ *      Copyright (C) 2005-2012 Team XBMC
  *      http://www.xbmc.org
  *
  *  This Program is free software; you can redistribute it and/or modify
@@ -16,9 +13,8 @@
  *  GNU General Public License for more details.
  *
  *  You should have received a copy of the GNU General Public License
- *  along with XBMC; see the file COPYING.  If not, write to
- *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
- *  http://www.gnu.org/copyleft/gpl.html
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
  *
  */
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.c
index 69d8608..e506e61 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.c
@@ -1,8 +1,5 @@
 /*
- *      vdr-plugin-vnsi - XBMC server plugin for VDR
- *
- *      Copyright (C) 2010 Alwin Esch (Team XBMC)
- *
+ *      Copyright (C) 2005-2012 Team XBMC
  *      http://www.xbmc.org
  *
  *  This Program is free software; you can redistribute it and/or modify
@@ -16,9 +13,8 @@
  *  GNU General Public License for more details.
  *
  *  You should have received a copy of the GNU General Public License
- *  along with XBMC; see the file COPYING.  If not, write to
- *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
- *  http://www.gnu.org/copyleft/gpl.html
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
  *
  */
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.h
index 88dfdfc..48bf104 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.h
@@ -1,8 +1,5 @@
 /*
- *      vdr-plugin-vnsi - XBMC server plugin for VDR
- *
- *      Copyright (C) 2010 Alwin Esch (Team XBMC)
- *
+ *      Copyright (C) 2005-2012 Team XBMC
  *      http://www.xbmc.org
  *
  *  This Program is free software; you can redistribute it and/or modify
@@ -16,9 +13,8 @@
  *  GNU General Public License for more details.
  *
  *  You should have received a copy of the GNU General Public License
- *  along with XBMC; see the file COPYING.  If not, write to
- *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
- *  http://www.gnu.org/copyleft/gpl.html
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
  *
  */
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Teletext.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Teletext.c
index 6db09b0..7ed889a 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Teletext.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Teletext.c
@@ -1,8 +1,5 @@
 /*
- *      vdr-plugin-vnsi - XBMC server plugin for VDR
- *
- *      Copyright (C) 2010 Alwin Esch (Team XBMC)
- *
+ *      Copyright (C) 2005-2012 Team XBMC
  *      http://www.xbmc.org
  *
  *  This Program is free software; you can redistribute it and/or modify
@@ -16,9 +13,8 @@
  *  GNU General Public License for more details.
  *
  *  You should have received a copy of the GNU General Public License
- *  along with XBMC; see the file COPYING.  If not, write to
- *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
- *  http://www.gnu.org/copyleft/gpl.html
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
  *
  */
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Teletext.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Teletext.h
index e35fd79..ecb5b78 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Teletext.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Teletext.h
@@ -1,8 +1,5 @@
 /*
- *      vdr-plugin-vnsi - XBMC server plugin for VDR
- *
- *      Copyright (C) 2010 Alwin Esch (Team XBMC)
- *
+ *      Copyright (C) 2005-2012 Team XBMC
  *      http://www.xbmc.org
  *
  *  This Program is free software; you can redistribute it and/or modify
@@ -16,9 +13,8 @@
  *  GNU General Public License for more details.
  *
  *  You should have received a copy of the GNU General Public License
- *  along with XBMC; see the file COPYING.  If not, write to
- *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
- *  http://www.gnu.org/copyleft/gpl.html
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
  *
  */
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
index 1a17c70..a5a5ee4 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
@@ -1,8 +1,5 @@
 /*
- *      vdr-plugin-vnsi - XBMC server plugin for VDR
- *
- *      Copyright (C) 2010 Alwin Esch (Team XBMC)
- *
+ *      Copyright (C) 2005-2012 Team XBMC
  *      http://www.xbmc.org
  *
  *  This Program is free software; you can redistribute it and/or modify
@@ -16,9 +13,8 @@
  *  GNU General Public License for more details.
  *
  *  You should have received a copy of the GNU General Public License
- *  along with XBMC; see the file COPYING.  If not, write to
- *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
- *  http://www.gnu.org/copyleft/gpl.html
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
  *
  */
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.h
index 174e2f1..d1bf9a5 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.h
@@ -1,8 +1,5 @@
 /*
- *      vdr-plugin-vnsi - XBMC server plugin for VDR
- *
- *      Copyright (C) 2010 Alwin Esch (Team XBMC)
- *
+ *      Copyright (C) 2005-2012 Team XBMC
  *      http://www.xbmc.org
  *
  *  This Program is free software; you can redistribute it and/or modify
@@ -16,9 +13,8 @@
  *  GNU General Public License for more details.
  *
  *  You should have received a copy of the GNU General Public License
- *  along with XBMC; see the file COPYING.  If not, write to
- *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
- *  http://www.gnu.org/copyleft/gpl.html
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
  *
  */
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c
index 2b0e617..61df5be 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/setup.c
@@ -1,22 +1,22 @@
 /*
-* Copyright (C) 2005-2012 Team XBMC
-* http://www.xbmc.org
-*
-* This Program is free software; you can redistribute it and/or modify
-* it under the terms of the GNU General Public License as published by
-* the Free Software Foundation; either version 2, or (at your option)
-* any later version.
-*
-* This Program is distributed in the hope that it will be useful,
-* but WITHOUT ANY WARRANTY; without even the implied warranty of
-* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
-* GNU General Public License for more details.
-*
-* You should have received a copy of the GNU General Public License
-* along with XBMC; see the file COPYING. If not, see
-* <http://www.gnu.org/licenses/>.
-*
-*/
+ *      Copyright (C) 2005-2012 Team XBMC
+ *      http://www.xbmc.org
+ *
+ *  This Program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2, or (at your option)
+ *  any later version.
+ *
+ *  This Program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
+ *
+ */
 
 #include "setup.h"
 #include "vnsicommand.h"
-- 
1.8.1.6


From 9049cd0a307a56646dad09f87cef00fb8fb1881f Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Sat, 23 Mar 2013 12:10:59 +0100
Subject: [PATCH 42/63] vdr-plugin-vnsiserver: fix compile error for loder vdr
 versions

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
index ec2dc8b..e78b92a 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
@@ -76,7 +76,12 @@ bool cLiveStreamer::Open(int serial)
 {
   Close();
 
+#if APIVERSNUM >= 10725
   m_Device = cDevice::GetDevice(m_Channel, m_Priority, true, true);
+#else
+  m_Device = cDevice::GetDevice(m_Channel, m_Priority, true);
+#endif
+
   if (!m_Device)
     return false;
 
-- 
1.8.1.6


From ae788e1cb599d98c69f1ad1ee1622fc5a9935ff3 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Sun, 24 Mar 2013 17:56:10 +0100
Subject: [PATCH 43/63] vdr-plugin-vnsiserver: do not transmit packates older
 than  first frame, avoids large disconts on start of playback

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c | 12 +++++++++++-
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h |  1 +
 2 files changed, 12 insertions(+), 1 deletion(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
index 5544988..e821276 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
@@ -50,6 +50,8 @@ void cVNSIDemuxer::Open(const cChannel &channel, cVideoBuffer *videoBuffer)
   else
     m_WaitIFrame = false;
 
+  m_FirstFrameDTS = 0;
+
   cParser::m_Wrap = false;
   cParser::m_NoOfWraps = 0;
   cParser::m_ConfirmCount = 0;
@@ -128,7 +130,15 @@ int cVNSIDemuxer::Read(sStreamPacket *packet)
   {
     if (stream->ProcessTSPacket(buf, packet, NULL, m_WaitIFrame))
     {
-      m_WaitIFrame = false;
+      if (m_WaitIFrame)
+      {
+        m_FirstFrameDTS = packet->dts;
+        m_WaitIFrame = false;
+      }
+
+      if (packet->dts < m_FirstFrameDTS)
+        return 0;
+
       packet->serial = m_MuxPacketSerial;
       return 1;
     }
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
index aeb6767..c10e980 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
@@ -77,6 +77,7 @@ class cVNSIDemuxer
   cPatPmtParser m_PatPmtParser;
   int m_OldPmtVersion;
   bool m_WaitIFrame;
+  int64_t m_FirstFrameDTS;
   cVideoBuffer *m_VideoBuffer;
   cMutex m_Mutex;
   uint32_t m_MuxPacketSerial;
-- 
1.8.1.6


From 06f939e45560fb5165ef5368b6b9762d3808e29c Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Wed, 27 Mar 2013 09:46:50 +0100
Subject: [PATCH 44/63] vdr-plugin-vnsiserver: cleanup and fixes in pes parser

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c | 139 +++++++++++++++------
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h |  80 +-----------
 .../vdr-plugin-vnsiserver/parser_AAC.c             |   1 -
 3 files changed, 103 insertions(+), 117 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
index bb32e75..d88934c 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
@@ -69,28 +69,22 @@ void cParser::Reset()
   m_prevDTS   = DVD_NOPTS_VALUE;
   m_PesBufferPtr = 0;
   m_PesParserPtr = 0;
-  m_firstPUSIseen = false;
   m_PesNextFramePtr = 0;
   m_FoundFrame = false;
   m_PesPacketLength = 0;
-  m_IsError = false;
+  m_PesHeaderPtr = 0;
+  m_IsError = true;
 }
 /*
  * Extract DTS and PTS and update current values in stream
  */
 int cParser::ParsePESHeader(uint8_t *buf, size_t len)
 {
-  if (len < 6)
-    return -1;
-
   m_PesPacketLength = buf[4] << 8 | buf[5];
 
   if (!PesIsVideoPacket(buf) && !PesIsAudioPacket(buf))
     return 6;
 
-  if (len < 9)
-    return -1;
-
   unsigned int hdr_len = PesHeaderLength(buf);
 
   if (m_PesPacketLength > 0)
@@ -176,7 +170,12 @@ int cParser::ParsePESHeader(uint8_t *buf, size_t len)
 
 int cParser::ParsePacketHeader(uint8_t *data)
 {
-  m_IsPusi  = TsPayloadStart(data);
+  if (TsPayloadStart(data))
+  {
+    m_IsPusi = true;
+    m_IsError = false;
+  }
+
   int  bytes = TS_SIZE - TsPayloadOffset(data);
 
   if(bytes < 0 || bytes > TS_SIZE)
@@ -195,24 +194,11 @@ int cParser::ParsePacketHeader(uint8_t *data)
   }
 
   /* drop broken PES packets */
-  if (m_IsError && !m_IsPusi)
+  if (m_IsError)
   {
     return -1;
   }
 
-  /* handle new payload unit */
-  if (m_IsPusi)
-  {
-    if (!PesIsHeader(data+TS_SIZE-bytes))
-    {
-      m_IsError = true;
-//      ERRORLOG("--------------- no header");
-      Reset();
-      return -1;
-    }
-    m_IsError = false;
-  }
-
   return bytes;
 }
 
@@ -221,29 +207,105 @@ bool cParser::AddPESPacket(uint8_t *data, int size)
   // check for beginning of a PES packet
   if (m_IsPusi)
   {
-    if (IsValidStartCode(data, size))
+    int hdr_len = 6;
+    if (m_PesHeaderPtr + size < hdr_len)
     {
-      m_firstPUSIseen = true;
-      int hlen = ParsePESHeader(data, size);
-      if (hlen <= 0)
+      memcpy(m_PesHeader+m_PesHeaderPtr, data, size);
+      m_PesHeaderPtr += size;
+      return false;
+    }
+    else if (m_PesHeaderPtr)
+    {
+      int bytesNeeded = hdr_len-m_PesHeaderPtr;
+      if (bytesNeeded > 0)
+      {
+        memcpy(m_PesHeader+m_PesHeaderPtr, data, bytesNeeded);
+        m_PesHeaderPtr += bytesNeeded;
+        data += bytesNeeded;
+        size -= bytesNeeded;
+      }
+      if (!IsValidStartCode(m_PesHeader, hdr_len))
       {
-        INFOLOG("--------- reset");
         Reset();
         return false;
       }
-      data += hlen;
-      size -= hlen;
+      if (PesIsVideoPacket(m_PesHeader) || PesIsAudioPacket(m_PesHeader))
+      {
+        hdr_len = 9;
+        bytesNeeded = hdr_len-m_PesHeaderPtr;
+        if (size < bytesNeeded)
+        {
+          memcpy(m_PesHeader+m_PesHeaderPtr, data, size);
+          m_PesHeaderPtr += size;
+          return false;
+        }
+        else if (bytesNeeded > 0)
+        {
+          memcpy(m_PesHeader+m_PesHeaderPtr, data, bytesNeeded);
+          m_PesHeaderPtr += bytesNeeded;
+          data += bytesNeeded;
+          size -= bytesNeeded;
+        }
+        hdr_len = PesHeaderLength(m_PesHeader);
+      }
+      bytesNeeded = hdr_len-m_PesHeaderPtr;
+      if (size < bytesNeeded)
+      {
+        memcpy(m_PesHeader+m_PesHeaderPtr, data, size);
+        m_PesHeaderPtr += size;
+        return false;
+      }
+      else if (bytesNeeded > 0)
+      {
+        memcpy(m_PesHeader+m_PesHeaderPtr, data, bytesNeeded);
+        m_PesHeaderPtr += bytesNeeded;
+        data += bytesNeeded;
+        size -= bytesNeeded;
+      }
+      if (ParsePESHeader(m_PesHeader, hdr_len) < 0)
+      {
+        INFOLOG("error parsing pes packet error ");
+        Reset();
+        return false;
+      }
+      m_PesHeaderPtr = 0;
+      m_IsPusi = false;
     }
-    else
+    else if (!IsValidStartCode(data, size))
     {
-      INFOLOG("--------- reset 2");
       Reset();
+      return false;
+    }
+    else
+    {
+      if (PesIsVideoPacket(data) || PesIsAudioPacket(data))
+      {
+        if (size < 9)
+        {
+          memcpy(m_PesHeader+m_PesHeaderPtr, data, size);
+          m_PesHeaderPtr += size;
+          return false;
+        }
+        hdr_len = PesHeaderLength(data);
+      }
+      if (size < hdr_len)
+      {
+        memcpy(m_PesHeader+m_PesHeaderPtr, data, size);
+        m_PesHeaderPtr += size;
+        return false;
+      }
+      if (ParsePESHeader(data, hdr_len) < 0)
+      {
+        INFOLOG("error parsing pes packet error 2");
+        Reset();
+        return false;
+      }
+      data += hdr_len;
+      size -= hdr_len;
+      m_IsPusi = false;
     }
   }
 
-  if (!m_firstPUSIseen)
-    return false;
-
   if (m_PesBuffer == NULL)
   {
     m_PesBufferSize = m_PesBufferInitialSize;
@@ -286,7 +348,7 @@ bool cParser::AddPESPacket(uint8_t *data, int size)
   memcpy(m_PesBuffer+m_PesBufferPtr, data, size);
   m_PesBufferPtr += size;
 
-  return false;
+  return true;
 }
 
 inline bool cParser::IsValidStartCode(uint8_t *buf, int size)
@@ -396,10 +458,11 @@ bool cTSStream::ProcessTSPacket(uint8_t *data, sStreamPacket *pkt, int64_t *dts,
     return false;
 
   int payloadSize = m_pesParser->ParsePacketHeader(data);
-  if (payloadSize < 0)
+  if (payloadSize <= 0)
     return false;
 
-  m_pesParser->AddPESPacket(data+TS_SIZE-payloadSize, payloadSize);
+  if (!m_pesParser->AddPESPacket(data+TS_SIZE-payloadSize, payloadSize))
+    return false;
   if (dts)
   {
     if (m_pesParser->m_curDTS == DVD_NOPTS_VALUE)
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
index 838ea2a..0af405f 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
@@ -73,88 +73,11 @@ inline bool PesIsPS1Packet(const uchar *p)
   return ((p)[3] == PRIVATE_STREAM1 || (p)[3] == PRIVATE_STREAM3 );
 }
 
-inline bool PesIsPaddingPacket(const uchar *p)
-{
-  return ((p)[3] == PADDING_STREAM);
-}
-
 inline bool PesIsAudioPacket(const uchar *p)
 {
   return (PesIsMPEGAudioPacket(p) || PesIsPS1Packet(p));
 }
 
-#if APIVERSNUM < 10701
-
-#define TS_ERROR              0x80
-#define TS_PAYLOAD_START      0x40
-#define TS_TRANSPORT_PRIORITY 0x20
-#define TS_PID_MASK_HI        0x1F
-#define TS_SCRAMBLING_CONTROL 0xC0
-#define TS_ADAPT_FIELD_EXISTS 0x20
-#define TS_PAYLOAD_EXISTS     0x10
-#define TS_CONT_CNT_MASK      0x0F
-#define TS_ADAPT_DISCONT      0x80
-#define TS_ADAPT_RANDOM_ACC   0x40 // would be perfect for detecting independent frames, but unfortunately not used by all broadcasters
-#define TS_ADAPT_ELEM_PRIO    0x20
-#define TS_ADAPT_PCR          0x10
-#define TS_ADAPT_OPCR         0x08
-#define TS_ADAPT_SPLICING     0x04
-#define TS_ADAPT_TP_PRIVATE   0x02
-#define TS_ADAPT_EXTENSION    0x01
-
-inline bool TsHasPayload(const uchar *p)
-{
-  return p[3] & TS_PAYLOAD_EXISTS;
-}
-
-inline bool TsHasAdaptationField(const uchar *p)
-{
-  return p[3] & TS_ADAPT_FIELD_EXISTS;
-}
-
-inline bool TsPayloadStart(const uchar *p)
-{
-  return p[1] & TS_PAYLOAD_START;
-}
-
-inline bool TsError(const uchar *p)
-{
-  return p[1] & TS_ERROR;
-}
-
-inline int TsPid(const uchar *p)
-{
-  return (p[1] & TS_PID_MASK_HI) * 256 + p[2];
-}
-
-inline bool TsIsScrambled(const uchar *p)
-{
-  return p[3] & TS_SCRAMBLING_CONTROL;
-}
-
-inline int TsPayloadOffset(const uchar *p)
-{
-  return (p[3] & TS_ADAPT_FIELD_EXISTS) ? p[4] + 5 : 4;
-}
-
-inline int TsGetPayload(const uchar **p)
-{
-  int o = TsPayloadOffset(*p);
-  *p += o;
-  return TS_SIZE - o;
-}
-
-inline int TsContinuityCounter(const uchar *p)
-{
-  return p[3] & TS_CONT_CNT_MASK;
-}
-
-inline int TsGetAdaptationField(const uchar *p)
-{
-  return TsHasAdaptationField(p) ? p[5] : 0x00;
-}
-#endif
-
 enum eStreamContent
 {
   scVIDEO,
@@ -225,6 +148,8 @@ class cParser
 protected:
   virtual bool IsValidStartCode(uint8_t *buf, int size);
 
+  uint8_t     m_PesHeader[64];
+  int         m_PesHeaderPtr;
   int         m_PesPacketLength;
   uint8_t    *m_PesBuffer;
   int         m_PesBufferSize;
@@ -241,7 +166,6 @@ class cParser
   int64_t     m_prevDTS;
 
   bool        m_IsPusi;
-  bool        m_firstPUSIseen;
   bool        m_IsError;
 
   cTSStream  *m_Stream;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AAC.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AAC.c
index c09313c..2131904 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AAC.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AAC.c
@@ -34,7 +34,6 @@
 cParserAAC::cParserAAC(int pID, cTSStream *stream)
  : cParser(pID, stream)
 {
-  m_firstPUSIseen             = false;
   m_Configured                = false;
   m_FrameLengthType           = 0;
   m_PTS                       = 0;
-- 
1.8.1.6


From a1a4c4db58bd990319d89db9f120eb157e4cb66c Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Thu, 28 Mar 2013 09:56:15 +0100
Subject: [PATCH 45/63] vdr-plugin-vnsiserver: only observe pts wraps on audio
 and video streams

---
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c   | 24 ++++----
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h   |  1 +
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c | 71 +++++++++++-----------
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h | 17 ++++--
 .../vdr-plugin-vnsiserver/parser_AAC.c             |  4 +-
 .../vdr-plugin-vnsiserver/parser_AAC.h             |  2 +-
 .../vdr-plugin-vnsiserver/parser_AC3.c             |  4 +-
 .../vdr-plugin-vnsiserver/parser_AC3.h             |  2 +-
 .../vdr-plugin-vnsiserver/parser_DTS.c             |  4 +-
 .../vdr-plugin-vnsiserver/parser_DTS.h             |  2 +-
 .../vdr-plugin-vnsiserver/parser_MPEGAudio.c       |  4 +-
 .../vdr-plugin-vnsiserver/parser_MPEGAudio.h       |  2 +-
 .../vdr-plugin-vnsiserver/parser_MPEGVideo.c       |  4 +-
 .../vdr-plugin-vnsiserver/parser_MPEGVideo.h       |  2 +-
 .../vdr-plugin-vnsiserver/parser_Subtitle.c        |  4 +-
 .../vdr-plugin-vnsiserver/parser_Subtitle.h        |  2 +-
 .../vdr-plugin-vnsiserver/parser_Teletext.c        |  4 +-
 .../vdr-plugin-vnsiserver/parser_Teletext.h        |  2 +-
 .../vdr-plugin-vnsiserver/parser_h264.c            |  4 +-
 .../vdr-plugin-vnsiserver/parser_h264.h            |  2 +-
 20 files changed, 83 insertions(+), 78 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
index e821276..e0c5fb7 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
@@ -52,9 +52,9 @@ void cVNSIDemuxer::Open(const cChannel &channel, cVideoBuffer *videoBuffer)
 
   m_FirstFrameDTS = 0;
 
-  cParser::m_Wrap = false;
-  cParser::m_NoOfWraps = 0;
-  cParser::m_ConfirmCount = 0;
+  m_PtsWrap.m_Wrap = false;
+  m_PtsWrap.m_NoOfWraps = 0;
+  m_PtsWrap.m_ConfirmCount = 0;
   m_MuxPacketSerial = 0;
 }
 
@@ -392,40 +392,40 @@ bool cVNSIDemuxer::EnsureParsers()
 
     if (it->type == stH264)
     {
-      stream = new cTSStream(stH264, it->pID);
+      stream = new cTSStream(stH264, it->pID, &m_PtsWrap);
     }
     else if (it->type == stMPEG2VIDEO)
     {
-      stream = new cTSStream(stMPEG2VIDEO, it->pID);
+      stream = new cTSStream(stMPEG2VIDEO, it->pID, &m_PtsWrap);
     }
     else if (it->type == stMPEG2AUDIO)
     {
-      stream = new cTSStream(stMPEG2AUDIO, it->pID);
+      stream = new cTSStream(stMPEG2AUDIO, it->pID, &m_PtsWrap);
       stream->SetLanguage(it->language);
     }
     else if (it->type == stAACADTS)
     {
-      stream = new cTSStream(stAACADTS, it->pID);
+      stream = new cTSStream(stAACADTS, it->pID, &m_PtsWrap);
       stream->SetLanguage(it->language);
     }
     else if (it->type == stAACLATM)
     {
-      stream = new cTSStream(stAACLATM, it->pID);
+      stream = new cTSStream(stAACLATM, it->pID, &m_PtsWrap);
       stream->SetLanguage(it->language);
     }
     else if (it->type == stAC3)
     {
-      stream = new cTSStream(stAC3, it->pID);
+      stream = new cTSStream(stAC3, it->pID, &m_PtsWrap);
       stream->SetLanguage(it->language);
     }
     else if (it->type == stEAC3)
     {
-      stream = new cTSStream(stEAC3, it->pID);
+      stream = new cTSStream(stEAC3, it->pID, &m_PtsWrap);
       stream->SetLanguage(it->language);
     }
     else if (it->type == stDVBSUB)
     {
-      stream = new cTSStream(stDVBSUB, it->pID);
+      stream = new cTSStream(stDVBSUB, it->pID, &m_PtsWrap);
       stream->SetLanguage(it->language);
 #if APIVERSNUM >= 10709
       stream->SetSubtitlingDescriptor(it->subtitlingType, it->compositionPageId, it->ancillaryPageId);
@@ -433,7 +433,7 @@ bool cVNSIDemuxer::EnsureParsers()
     }
     else if (it->type == stTELETEXT)
     {
-      stream = new cTSStream(stTELETEXT, it->pID);
+      stream = new cTSStream(stTELETEXT, it->pID, &m_PtsWrap);
     }
     else
       continue;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
index c10e980..d5f6d9b 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
@@ -81,4 +81,5 @@ class cVNSIDemuxer
   cVideoBuffer *m_VideoBuffer;
   cMutex m_Mutex;
   uint32_t m_MuxPacketSerial;
+  sPtsWrap m_PtsWrap;
 };
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
index d88934c..3f51b4d 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
@@ -42,12 +42,8 @@
 
 // --- cParser -------------------------------------------------
 
-bool cParser::m_Wrap = false;
-int cParser::m_NoOfWraps = 0;
-int cParser::m_ConfirmCount = 0;
-
-cParser::cParser(int pID, cTSStream *stream)
- : m_pID(pID)
+cParser::cParser(int pID, cTSStream *stream, sPtsWrap *ptsWrap, bool observePtsWraps)
+ : m_pID(pID), m_PtsWrap(ptsWrap), m_ObservePtsWraps(observePtsWraps)
 {
   m_PesBuffer = NULL;
   m_Stream = stream;
@@ -107,34 +103,37 @@ int cParser::ParsePESHeader(uint8_t *buf, size_t len)
     pts |= ((int64_t)(buf[13] & 0xFE)) >>  1 ;
 
     int64_t bit32and31 = pts >> 31;
-    if ((bit32and31 == 3) && !m_Wrap)
+    if (m_ObservePtsWraps)
     {
-      m_ConfirmCount++;
-      if (m_ConfirmCount >= 2)
+      if ((bit32and31 == 3) && !m_PtsWrap->m_Wrap)
       {
-        m_Wrap = true;
+        m_PtsWrap->m_ConfirmCount++;
+        if (m_PtsWrap->m_ConfirmCount >= 2)
+        {
+          m_PtsWrap->m_Wrap = true;
+        }
       }
-    }
-    else if ((bit32and31 == 1) && m_Wrap)
-    {
-      m_ConfirmCount++;
-      if (m_ConfirmCount >= 2)
+      else if ((bit32and31 == 1) && m_PtsWrap->m_Wrap)
       {
-        m_Wrap = false;
-        m_NoOfWraps++;
+        m_PtsWrap->m_ConfirmCount++;
+        if (m_PtsWrap->m_ConfirmCount >= 2)
+        {
+          m_PtsWrap->m_Wrap = false;
+          m_PtsWrap->m_NoOfWraps++;
+        }
       }
+      else
+        m_PtsWrap->m_ConfirmCount = 0;
     }
-    else
-      m_ConfirmCount = 0;
 
     m_curPTS = pts;
-    if (m_Wrap && !(bit32and31))
+    if (m_PtsWrap->m_Wrap && !(bit32and31))
     {
       m_curPTS += 1LL<<33;
     }
-    if (m_NoOfWraps)
+    if (m_PtsWrap->m_NoOfWraps)
     {
-      m_curPTS += ((int64_t)m_NoOfWraps<<33);
+      m_curPTS += ((int64_t)m_PtsWrap->m_NoOfWraps<<33);
     }
   }
   else
@@ -153,13 +152,13 @@ int cParser::ParsePESHeader(uint8_t *buf, size_t len)
     dts |=  (int64_t)( buf[17]          <<  7 );
     dts |=  (int64_t)((buf[18] & 0xFE)  >>  1 );
     m_curDTS = dts;
-    if (m_Wrap && !(m_curDTS >> 31))
+    if (m_PtsWrap->m_Wrap && !(m_curDTS >> 31))
     {
       m_curDTS += 1LL<<33;
     }
-    if (m_NoOfWraps)
+    if (m_PtsWrap->m_NoOfWraps)
     {
-      m_curDTS += ((int64_t)m_NoOfWraps<<33);
+      m_curDTS += ((int64_t)m_PtsWrap->m_NoOfWraps<<33);
     }
   }
   else
@@ -394,7 +393,7 @@ inline bool cParser::IsValidStartCode(uint8_t *buf, int size)
 
 // --- cTSStream ----------------------------------------------------
 
-cTSStream::cTSStream(eStreamType type, int pid)
+cTSStream::cTSStream(eStreamType type, int pid, sPtsWrap *ptsWrap)
   : m_streamType(type)
   , m_pID(pid)
 {
@@ -414,25 +413,25 @@ inline bool cParser::IsValidStartCode(uint8_t *buf, int size)
   m_IsStreamChange  = false;
 
   if (m_streamType == stMPEG2VIDEO)
-    m_pesParser = new cParserMPEG2Video(m_pID, this);
+    m_pesParser = new cParserMPEG2Video(m_pID, this, ptsWrap, true);
   else if (m_streamType == stH264)
-    m_pesParser = new cParserH264(m_pID, this);
+    m_pesParser = new cParserH264(m_pID, this, ptsWrap, true);
   else if (m_streamType == stMPEG2AUDIO)
-    m_pesParser = new cParserMPEG2Audio(m_pID, this);
+    m_pesParser = new cParserMPEG2Audio(m_pID, this, ptsWrap, true);
   else if (m_streamType == stAACADTS)
-    m_pesParser = new cParserAAC(m_pID, this);
+    m_pesParser = new cParserAAC(m_pID, this, ptsWrap, true);
   else if (m_streamType == stAACLATM)
-    m_pesParser = new cParserAAC(m_pID, this);
+    m_pesParser = new cParserAAC(m_pID, this, ptsWrap, true);
   else if (m_streamType == stAC3)
-    m_pesParser = new cParserAC3(m_pID, this);
+    m_pesParser = new cParserAC3(m_pID, this, ptsWrap, true);
   else if (m_streamType == stEAC3)
-    m_pesParser = new cParserAC3(m_pID, this);
+    m_pesParser = new cParserAC3(m_pID, this, ptsWrap, true);
   else if (m_streamType == stDTS)
-    m_pesParser = new cParserDTS(m_pID, this);
+    m_pesParser = new cParserDTS(m_pID, this, ptsWrap, true);
   else if (m_streamType == stTELETEXT)
-    m_pesParser = new cParserTeletext(m_pID, this);
+    m_pesParser = new cParserTeletext(m_pID, this, ptsWrap, false);
   else if (m_streamType == stDVBSUB)
-    m_pesParser = new cParserSubtitle(m_pID, this);
+    m_pesParser = new cParserSubtitle(m_pID, this, ptsWrap, false);
   else
   {
     ERRORLOG("Unrecognised type %i inside stream %i", m_streamType, m_pID);
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
index 0af405f..f669ef6 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
@@ -124,13 +124,20 @@ struct sStreamPacket
   uint32_t  serial;
 };
 
+struct sPtsWrap
+{
+  bool m_Wrap;
+  int m_NoOfWraps;
+  int m_ConfirmCount;
+};
+
 class cTSStream;
 
 class cParser
 {
 friend class cTSStream;
 public:
-  cParser(int pID, cTSStream *stream);
+  cParser(int pID, cTSStream *stream, sPtsWrap *ptsWrap, bool observePtsWraps);
   virtual ~cParser();
 
   bool AddPESPacket(uint8_t *data, int size);
@@ -141,10 +148,6 @@ class cParser
   virtual void Reset();
   bool IsVideo() {return m_IsVideo; }
 
-  static bool m_Wrap;
-  static int m_NoOfWraps;
-  static int m_ConfirmCount;
-
 protected:
   virtual bool IsValidStartCode(uint8_t *buf, int size);
 
@@ -170,6 +173,8 @@ class cParser
 
   cTSStream  *m_Stream;
   bool        m_IsVideo;
+  sPtsWrap   *m_PtsWrap;
+  bool        m_ObservePtsWraps;
 };
 
 
@@ -203,7 +208,7 @@ class cTSStream
   uint16_t              m_ancillaryPageId;
 
 public:
-  cTSStream(eStreamType type, int pid);
+  cTSStream(eStreamType type, int pid, sPtsWrap *ptsWrap);
   virtual ~cTSStream();
 
   bool ProcessTSPacket(uint8_t *data, sStreamPacket *pkt, int64_t *dts, bool iframe);
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AAC.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AAC.c
index 2131904..2ef3cb1 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AAC.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AAC.c
@@ -31,8 +31,8 @@
 };
 
 
-cParserAAC::cParserAAC(int pID, cTSStream *stream)
- : cParser(pID, stream)
+cParserAAC::cParserAAC(int pID, cTSStream *stream, sPtsWrap *ptsWrap, bool observePtsWraps)
+ : cParser(pID, stream, ptsWrap, observePtsWraps)
 {
   m_Configured                = false;
   m_FrameLengthType           = 0;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AAC.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AAC.h
index 1142416..15c2122 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AAC.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AAC.h
@@ -48,7 +48,7 @@ class cParserAAC : public cParser
   uint32_t LATMGetValue(cBitstream *bs) { return bs->readBits(bs->readBits(2) * 8); }
 
 public:
-  cParserAAC(int pID, cTSStream *stream);
+  cParserAAC(int pID, cTSStream *stream, sPtsWrap *ptsWrap, bool observePtsWraps);
   virtual ~cParserAAC();
   virtual void Parse(sStreamPacket *pkt);
   virtual void Reset();
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AC3.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AC3.c
index 9edd810..a1645a2 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AC3.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AC3.c
@@ -105,8 +105,8 @@
   EAC3_FRAME_TYPE_RESERVED
 } EAC3FrameType;
 
-cParserAC3::cParserAC3(int pID, cTSStream *stream)
- : cParser(pID, stream)
+cParserAC3::cParserAC3(int pID, cTSStream *stream, sPtsWrap *ptsWrap, bool observePtsWraps)
+ : cParser(pID, stream, ptsWrap, observePtsWraps)
 {
   m_PTS                       = 0;
   m_DTS                       = 0;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AC3.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AC3.h
index 2bb164e..b789423 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AC3.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_AC3.h
@@ -39,7 +39,7 @@ class cParserAC3 : public cParser
   int FindHeaders(uint8_t *buf, int buf_size);
 
 public:
-  cParserAC3(int pID, cTSStream *stream);
+  cParserAC3(int pID, cTSStream *stream, sPtsWrap *ptsWrap, bool observePtsWraps);
   virtual ~cParserAC3();
 
   virtual void Parse(sStreamPacket *pkt);
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_DTS.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_DTS.c
index d2cbbe2..2ad2385 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_DTS.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_DTS.c
@@ -25,8 +25,8 @@
 #include "parser_DTS.h"
 #include "bitstream.h"
 
-cParserDTS::cParserDTS(int pID, cTSStream *stream)
- : cParser(pID, stream)
+cParserDTS::cParserDTS(int pID, cTSStream *stream, sPtsWrap *ptsWrap, bool observePtsWraps)
+ : cParser(pID, stream, ptsWrap, observePtsWraps)
 {
 }
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_DTS.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_DTS.h
index 515e328..c28b4ba 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_DTS.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_DTS.h
@@ -30,7 +30,7 @@ class cParserDTS : public cParser
 private:
 
 public:
-  cParserDTS(int pID, cTSStream *stream);
+  cParserDTS(int pID, cTSStream *stream, sPtsWrap *ptsWrap, bool observePtsWraps);
   virtual ~cParserDTS();
 
   virtual void Parse(sStreamPacket *pkt);
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.c
index 81db5e5..8eb6209 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.c
@@ -40,8 +40,8 @@
   }
 };
 
-cParserMPEG2Audio::cParserMPEG2Audio(int pID, cTSStream *stream)
- : cParser(pID, stream)
+cParserMPEG2Audio::cParserMPEG2Audio(int pID, cTSStream *stream, sPtsWrap *ptsWrap, bool observePtsWraps)
+ : cParser(pID, stream, ptsWrap, observePtsWraps)
 {
   m_PTS                       = 0;
   m_DTS                       = 0;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.h
index 348fc00..32a3989 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.h
@@ -39,7 +39,7 @@ class cParserMPEG2Audio : public cParser
   int FindHeaders(uint8_t *buf, int buf_size);
 
 public:
-  cParserMPEG2Audio(int pID, cTSStream *stream);
+  cParserMPEG2Audio(int pID, cTSStream *stream, sPtsWrap *ptsWrap, bool observePtsWraps);
   virtual ~cParserMPEG2Audio();
 
   virtual void Parse(sStreamPacket *pkt);
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.c
index 45e05d1..b5d708e 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.c
@@ -48,8 +48,8 @@
   1500,
 };
 
-cParserMPEG2Video::cParserMPEG2Video(int pID, cTSStream *stream)
- : cParser(pID, stream)
+cParserMPEG2Video::cParserMPEG2Video(int pID, cTSStream *stream, sPtsWrap *ptsWrap, bool observePtsWraps)
+ : cParser(pID, stream, ptsWrap, observePtsWraps)
 {
   m_FrameDuration     = 0;
   m_vbvDelay          = -1;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.h
index cdf918c..256266d 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.h
@@ -48,7 +48,7 @@ class cParserMPEG2Video : public cParser
   bool Parse_MPEG2Video_PicStart(uint8_t *buf);
 
 public:
-  cParserMPEG2Video(int pID, cTSStream *stream);
+  cParserMPEG2Video(int pID, cTSStream *stream, sPtsWrap *ptsWrap, bool observePtsWraps);
   virtual ~cParserMPEG2Video();
 
   virtual void Parse(sStreamPacket *pkt);
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.c
index e506e61..6408fbd 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.c
@@ -24,8 +24,8 @@
 
 #include "parser_Subtitle.h"
 
-cParserSubtitle::cParserSubtitle(int pID, cTSStream *stream)
- : cParser(pID, stream)
+cParserSubtitle::cParserSubtitle(int pID, cTSStream *stream, sPtsWrap *ptsWrap, bool observePtsWraps)
+ : cParser(pID, stream, ptsWrap, observePtsWraps)
 {
   m_PesBufferInitialSize = 4000;
 }
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.h
index 48bf104..296ac7c 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Subtitle.h
@@ -28,7 +28,7 @@
 class cParserSubtitle : public cParser
 {
 public:
-  cParserSubtitle(int pID, cTSStream *stream);
+  cParserSubtitle(int pID, cTSStream *stream, sPtsWrap *ptsWrap, bool observePtsWraps);
   virtual ~cParserSubtitle();
 
   virtual void Parse(sStreamPacket *pkt);
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Teletext.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Teletext.c
index 7ed889a..b2ecaee 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Teletext.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Teletext.c
@@ -23,8 +23,8 @@
 
 #include "parser_Teletext.h"
 
-cParserTeletext::cParserTeletext(int pID, cTSStream *stream)
- : cParser(pID, stream)
+cParserTeletext::cParserTeletext(int pID, cTSStream *stream, sPtsWrap *ptsWrap, bool observePtsWraps)
+ : cParser(pID, stream, ptsWrap, observePtsWraps)
 {
   m_PesBufferInitialSize      = 4000;
 }
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Teletext.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Teletext.h
index ecb5b78..831e7f5 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Teletext.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_Teletext.h
@@ -32,7 +32,7 @@ class cParserTeletext : public cParser
   int64_t     m_lastPTS;
 
 public:
-  cParserTeletext(int pID, cTSStream *stream);
+  cParserTeletext(int pID, cTSStream *stream, sPtsWrap *ptsWrap, bool observePtsWraps);
   virtual ~cParserTeletext();
 
   virtual void Parse(sStreamPacket *pkt);
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
index a5a5ee4..3879c62 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
@@ -45,8 +45,8 @@
   {-1, -1},
 };
 
-cParserH264::cParserH264(int pID, cTSStream *stream)
- : cParser(pID, stream)
+cParserH264::cParserH264(int pID, cTSStream *stream, sPtsWrap *ptsWrap, bool observePtsWraps)
+ : cParser(pID, stream, ptsWrap, observePtsWraps)
 {
   m_Height            = 0;
   m_Width             = 0;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.h
index d1bf9a5..2bcd2d9 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.h
@@ -106,7 +106,7 @@ class cParserH264 : public cParser
   bool IsFirstVclNal(h264_private::VCL_NAL &vcl);
 
 public:
-  cParserH264(int pID, cTSStream *stream);
+  cParserH264(int pID, cTSStream *stream, sPtsWrap *ptsWrap, bool observePtsWraps);
   virtual ~cParserH264();
 
   virtual void Parse(sStreamPacket *pkt);
-- 
1.8.1.6


From e7a58bbd70bb72d24ffc9e5a1cb42dfd0378aba5 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Fri, 29 Mar 2013 14:53:06 +0100
Subject: [PATCH 46/63] vdr-plugin-vnsiserver: fix test harness

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c    | 7 ++++++-
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c | 9 ++++++++-
 2 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
index e78b92a..8c5562d 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
@@ -86,7 +86,12 @@ bool cLiveStreamer::Open(int serial)
     return false;
 
   bool recording = false;
-  if (serial == -1)
+  if (0) // test harness
+  {
+    recording = true;
+    m_VideoBuffer = cVideoBuffer::Create("/home/xbmc/test.ts");
+  }
+  else if (serial == -1)
   {
     cTimer *activeTimer = Timers.GetNextActiveTimer();
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
index 1eb08aa..36aae64 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
@@ -537,7 +537,7 @@ int cVideoBufferFile::ReadBlock(uint8_t **buf, unsigned int size)
       }
       if (m_ReadCacheSize < m_Margin)
       {
-        ERRORLOG("Could not read file (margin): %s", (const char*)m_Filename);
+        ERRORLOG("Could not read file (margin): %s , read: %d", (const char*)m_Filename, m_ReadCacheSize);
         m_ReadCacheSize = 0;
         return 0;
       }
@@ -792,6 +792,13 @@ void cVideoBufferTest::Put(uint8_t *buf, unsigned int size)
 
 bool cVideoBufferTest::Init()
 {
+  m_ReadCache = 0;
+  m_ReadCacheMaxSize = 8000;
+
+  m_ReadCache = (uint8_t*)malloc(m_ReadCacheMaxSize);
+  if (!m_ReadCache)
+    return false;
+
   m_Fd = open(m_Filename, O_RDONLY);
   if (m_Fd == -1)
   {
-- 
1.8.1.6


From 4c29a8e72bf02dc863eec8f2deb1a623bc0a0d93 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Fri, 29 Mar 2013 14:53:57 +0100
Subject: [PATCH 47/63] vdr-plugin-vnsiserver: rework and fixes on video
 parsers

---
 .../vdr-plugin-vnsiserver/parser_MPEGVideo.c       | 32 ++++++++++++++++------
 .../vdr-plugin-vnsiserver/parser_MPEGVideo.h       |  5 ++++
 .../vdr-plugin-vnsiserver/parser_h264.c            | 20 ++++++++------
 .../vdr-plugin-vnsiserver/parser_h264.h            |  2 ++
 4 files changed, 41 insertions(+), 18 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.c
index b5d708e..0089454 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.c
@@ -79,6 +79,13 @@ void cParserMPEG2Video::Parse(sStreamPacket *pkt)
   {
     if ((startcode & 0xffffff00) == 0x00000100)
     {
+      if (m_SetTime)
+      {
+        m_AuPrevDTS = m_AuDTS;
+        m_AuDTS = m_curDTS;
+        m_AuPTS = m_curPTS;
+        m_SetTime = false;
+      }
       if (Parse_MPEG2Video(startcode, p, frameComplete) < 0)
       {
         break;
@@ -101,14 +108,13 @@ void cParserMPEG2Video::Parse(sStreamPacket *pkt)
       pkt->data     = m_PesBuffer;
       pkt->dts      = m_DTS;
       pkt->pts      = m_PTS;
-      pkt->duration = m_curDTS - m_prevDTS;
+      pkt->duration = m_FrameDuration;
       pkt->streamChange = streamChange;
     }
     m_StartCode = 0xffffffff;
+    m_SetTime = true;
     m_PesParserPtr = 0;
     m_FoundFrame = false;
-    m_PTS = m_curPTS;
-    m_DTS = m_curDTS;
   }
 }
 
@@ -118,7 +124,7 @@ void cParserMPEG2Video::Reset()
   m_StartCode = 0xffffffff;
   m_NeedIFrame = true;
   m_NeedSPS = true;
-  m_DTS = DVD_NOPTS_VALUE;
+  m_SetTime = true;
 }
 
 int cParserMPEG2Video::Parse_MPEG2Video(uint32_t startcode, int buf_ptr, bool &complete)
@@ -146,12 +152,20 @@ int cParserMPEG2Video::Parse_MPEG2Video(uint32_t startcode, int buf_ptr, bool &c
     if (!Parse_MPEG2Video_PicStart(buf))
       return 0;
 
-    // if this is the first frame we see, set timestamp
-    if (m_DTS == DVD_NOPTS_VALUE)
+    if (m_AuPrevDTS == m_AuDTS)
     {
-      m_PTS = m_curPTS;
-      m_DTS = m_curDTS;
+      m_DTS = m_AuDTS + m_PicNumber*m_FrameDuration;
+      m_PTS = m_AuPTS + (m_TemporalReference-m_TrLastTime)*m_FrameDuration;
     }
+    else
+    {
+      m_PTS = m_AuPTS;
+      m_DTS = m_AuDTS;
+      m_PicNumber = 0;
+      m_TrLastTime = m_TemporalReference;
+    }
+
+    m_PicNumber++;
     m_FoundFrame = true;
     break;
   }
@@ -233,7 +247,7 @@ bool cParserMPEG2Video::Parse_MPEG2Video_PicStart(uint8_t *buf)
 {
   cBitstream bs(buf, 4 * 8);
 
-  bs.skipBits(10); /* temporal reference */
+  m_TemporalReference = bs.readBits(10); /* temporal reference */
 
   int pct = bs.readBits(3);
   if (pct < PKT_I_FRAME || pct > PKT_B_FRAME)
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.h
index 256266d..335ccac 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.h
@@ -42,6 +42,11 @@ class cParserMPEG2Video : public cParser
   float           m_Dar;
   int64_t         m_DTS;
   int64_t         m_PTS;
+  bool            m_SetTime;
+  int64_t         m_AuDTS, m_AuPTS, m_AuPrevDTS;
+  int             m_TemporalReference;
+  int             m_TrLastTime;
+  int             m_PicNumber;
 
   int Parse_MPEG2Video(uint32_t startcode, int buf_ptr, bool &complete);
   bool Parse_MPEG2Video_SeqStart(uint8_t *buf);
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
index 3879c62..c747858 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
@@ -81,6 +81,12 @@ void cParserH264::Parse(sStreamPacket *pkt)
   {
     if ((startcode & 0xffffff00) == 0x00000100)
     {
+      if (m_SetTime)
+      {
+        m_AuDTS = m_curDTS;
+        m_AuPTS = m_curPTS;
+        m_SetTime = false;
+      }
       if (Parse_H264(startcode, p, frameComplete) < 0)
       {
         break;
@@ -117,8 +123,7 @@ void cParserH264::Parse(sStreamPacket *pkt)
     m_StartCode = 0xffffffff;
     m_PesParserPtr = 0;
     m_FoundFrame = false;
-    m_PTS = m_curPTS;
-    m_DTS = m_curDTS;
+    m_SetTime = true;
   }
 }
 
@@ -129,7 +134,7 @@ void cParserH264::Reset()
   m_NeedIFrame = true;
   m_NeedSPS = true;
   m_NeedPPS = true;
-  m_DTS = DVD_NOPTS_VALUE;
+  m_SetTime = true;
 }
 
 int cParserH264::Parse_H264(uint32_t startcode, int buf_ptr, bool &complete)
@@ -166,12 +171,9 @@ int cParserH264::Parse_H264(uint32_t startcode, int buf_ptr, bool &complete)
 
     m_streamData.vcl_nal = vcl;
 
-    // if this is the first frame we see, set timestamp
-    if (m_DTS == DVD_NOPTS_VALUE)
-    {
-      m_PTS = m_curPTS;
-      m_DTS = m_curDTS;
-    }
+    m_PTS = m_AuPTS;
+    m_DTS = m_AuDTS;
+
     m_FoundFrame = true;
 
     break;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.h
index 2bcd2d9..e47d428 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.h
@@ -97,6 +97,8 @@ class cParserH264 : public cParser
   int             m_vbvSize;        /* Video buffer size (in bytes) */
   int64_t         m_DTS;
   int64_t         m_PTS;
+  bool            m_SetTime;
+  int64_t         m_AuDTS, m_AuPTS;
 
 
   int Parse_H264(uint32_t startcode, int buf_ptr, bool &complete);
-- 
1.8.1.6


From 36cef037106615640d35a11e0ea0d2065bbda571 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Sat, 30 Mar 2013 17:28:23 +0100
Subject: [PATCH 48/63] vdr-plugin-vnsiserver:  fix getting stuck by reading
 eof at end of segment

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.c   | 4 ++++
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c | 2 +-
 2 files changed, 5 insertions(+), 1 deletion(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.c
index 55ba069..ee947ab 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.c
@@ -229,6 +229,10 @@ int cRecPlayer::getBlock(unsigned char* buffer, uint64_t position, int amount)
   // try to read the block
   int bytes_read = read(m_file, buffer, amount);
 
+  // we may got stuck at end of segment
+  if ((bytes_read == 0) && (position < m_totalLength))
+    bytes_read += getBlock(buffer, position+1 , amount);
+
   if(bytes_read <= 0) {
     return 0;
   }
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
index 36aae64..f65d8ac 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
@@ -700,7 +700,7 @@ int cVideoBufferRecording::ReadBlock(uint8_t **buf, unsigned int size)
     if (m_ReadPtr + m_ReadCacheMaxSize <= m_BufferSize)
     {
       m_ReadCacheSize = m_RecPlayer->getBlock(m_ReadCache, m_ReadPtr, m_ReadCacheMaxSize);
-      if (m_ReadCacheSize != m_ReadCacheMaxSize)
+      if (m_ReadCacheSize < 0)
       {
         ERRORLOG("Could not read file, size:  %d", m_ReadCacheSize);
         m_ReadCacheSize = 0;
-- 
1.8.1.6


From dea3066c56d8e9f790e73c683d59ccc90259dce9 Mon Sep 17 00:00:00 2001
From: unknown <fernetmenta@online.de>
Date: Sun, 31 Mar 2013 16:27:36 +0200
Subject: [PATCH 49/63] vnsi: correct vs project after adding dx

---
 addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj b/addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj
index 2ce0fc4..39beb10 100644
--- a/addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj
+++ b/addons/pvr.vdr.vnsi/project/VS2010Express/pvrclient_vdr_vnsi.vcxproj
@@ -63,9 +63,7 @@
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <AdditionalDependencies>d3dx9.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
     </Link>
-    <PostBuildEvent>
-      <Command>xcopy /E /Y D:\Projects\xbmx\xbmc\pvr-addons\addons\pvr.vdr.vnsi\addon\*  D:\Projects\xbmx\xbmc\addons\pvr.vdr.vnsi</Command>
-    </PostBuildEvent>
+    <PostBuildEvent />
   </ItemDefinitionGroup>
   <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
     <ClCompile>
-- 
1.8.1.6


From b0554ef597a5ee46ffcf54af2d6b6ff8e4ad22c0 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Sun, 31 Mar 2013 16:50:11 +0200
Subject: [PATCH 50/63] vdr-plugin-vnsiserver: fix occasional incorrect
 timestamps after 505336e0b99306f95199d00f65bd7ef7ec2a9371

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c |  3 +++
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h |  2 ++
 .../vdr-plugin-vnsiserver/parser_MPEGVideo.c       | 24 +++++++++++--------
 .../vdr-plugin-vnsiserver/parser_MPEGVideo.h       |  1 -
 .../vdr-plugin-vnsiserver/parser_h264.c            | 27 +++++++++++-----------
 .../vdr-plugin-vnsiserver/parser_h264.h            |  3 ---
 6 files changed, 34 insertions(+), 26 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
index 3f51b4d..fba24d2 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
@@ -126,7 +126,9 @@ int cParser::ParsePESHeader(uint8_t *buf, size_t len)
         m_PtsWrap->m_ConfirmCount = 0;
     }
 
+    m_prevPTS = m_curPTS;
     m_curPTS = pts;
+    m_PesTimePos = m_PesBufferPtr;
     if (m_PtsWrap->m_Wrap && !(bit32and31))
     {
       m_curPTS += 1LL<<33;
@@ -340,6 +342,7 @@ bool cParser::AddPESPacket(uint8_t *data, int size)
   {
     memmove(m_PesBuffer, m_PesBuffer+m_PesNextFramePtr, m_PesBufferPtr-m_PesNextFramePtr);
     m_PesBufferPtr = m_PesBufferPtr-m_PesNextFramePtr;
+    m_PesTimePos -= m_PesNextFramePtr;
     m_PesNextFramePtr = 0;
   }
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
index f669ef6..5f20b10 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
@@ -160,12 +160,14 @@ class cParser
   size_t      m_PesBufferInitialSize;
   size_t      m_PesParserPtr;
   size_t      m_PesNextFramePtr;
+  int         m_PesTimePos;
 
   bool        m_FoundFrame;
 
   int         m_pID;
   int64_t     m_curPTS;
   int64_t     m_curDTS;
+  int64_t     m_prevPTS;
   int64_t     m_prevDTS;
 
   bool        m_IsPusi;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.c
index 0089454..5aa911a 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.c
@@ -79,13 +79,6 @@ void cParserMPEG2Video::Parse(sStreamPacket *pkt)
   {
     if ((startcode & 0xffffff00) == 0x00000100)
     {
-      if (m_SetTime)
-      {
-        m_AuPrevDTS = m_AuDTS;
-        m_AuDTS = m_curDTS;
-        m_AuPTS = m_curPTS;
-        m_SetTime = false;
-      }
       if (Parse_MPEG2Video(startcode, p, frameComplete) < 0)
       {
         break;
@@ -112,7 +105,6 @@ void cParserMPEG2Video::Parse(sStreamPacket *pkt)
       pkt->streamChange = streamChange;
     }
     m_StartCode = 0xffffffff;
-    m_SetTime = true;
     m_PesParserPtr = 0;
     m_FoundFrame = false;
   }
@@ -124,7 +116,6 @@ void cParserMPEG2Video::Reset()
   m_StartCode = 0xffffffff;
   m_NeedIFrame = true;
   m_NeedSPS = true;
-  m_SetTime = true;
 }
 
 int cParserMPEG2Video::Parse_MPEG2Video(uint32_t startcode, int buf_ptr, bool &complete)
@@ -152,6 +143,21 @@ int cParserMPEG2Video::Parse_MPEG2Video(uint32_t startcode, int buf_ptr, bool &c
     if (!Parse_MPEG2Video_PicStart(buf))
       return 0;
 
+    if (!m_FoundFrame)
+    {
+      m_AuPrevDTS = m_AuDTS;
+      if (buf_ptr - 4 >= m_PesTimePos)
+      {
+
+        m_AuDTS = m_curDTS;
+        m_AuPTS = m_curPTS;
+      }
+      else
+      {
+        m_AuDTS = m_prevDTS;
+        m_AuPTS = m_prevPTS;
+      }
+    }
     if (m_AuPrevDTS == m_AuDTS)
     {
       m_DTS = m_AuDTS + m_PicNumber*m_FrameDuration;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.h
index 335ccac..18da858 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGVideo.h
@@ -42,7 +42,6 @@ class cParserMPEG2Video : public cParser
   float           m_Dar;
   int64_t         m_DTS;
   int64_t         m_PTS;
-  bool            m_SetTime;
   int64_t         m_AuDTS, m_AuPTS, m_AuPrevDTS;
   int             m_TemporalReference;
   int             m_TrLastTime;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
index c747858..b2382d3 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
@@ -81,12 +81,6 @@ void cParserH264::Parse(sStreamPacket *pkt)
   {
     if ((startcode & 0xffffff00) == 0x00000100)
     {
-      if (m_SetTime)
-      {
-        m_AuDTS = m_curDTS;
-        m_AuPTS = m_curPTS;
-        m_SetTime = false;
-      }
       if (Parse_H264(startcode, p, frameComplete) < 0)
       {
         break;
@@ -123,7 +117,6 @@ void cParserH264::Parse(sStreamPacket *pkt)
     m_StartCode = 0xffffffff;
     m_PesParserPtr = 0;
     m_FoundFrame = false;
-    m_SetTime = true;
   }
 }
 
@@ -134,7 +127,6 @@ void cParserH264::Reset()
   m_NeedIFrame = true;
   m_NeedSPS = true;
   m_NeedPPS = true;
-  m_SetTime = true;
 }
 
 int cParserH264::Parse_H264(uint32_t startcode, int buf_ptr, bool &complete)
@@ -169,13 +161,22 @@ int cParserH264::Parse_H264(uint32_t startcode, int buf_ptr, bool &complete)
       return -1;
     }
 
-    m_streamData.vcl_nal = vcl;
-
-    m_PTS = m_AuPTS;
-    m_DTS = m_AuDTS;
+    if (!m_FoundFrame)
+    {
+      if (buf_ptr - 4 >= m_PesTimePos)
+      {
+        m_DTS = m_curDTS;
+        m_PTS = m_curPTS;
+      }
+      else
+      {
+        m_DTS = m_prevDTS;
+        m_PTS = m_prevPTS;
+      }
+    }
 
+    m_streamData.vcl_nal = vcl;
     m_FoundFrame = true;
-
     break;
   }
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.h
index e47d428..609ce0a 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.h
@@ -97,9 +97,6 @@ class cParserH264 : public cParser
   int             m_vbvSize;        /* Video buffer size (in bytes) */
   int64_t         m_DTS;
   int64_t         m_PTS;
-  bool            m_SetTime;
-  int64_t         m_AuDTS, m_AuPTS;
-
 
   int Parse_H264(uint32_t startcode, int buf_ptr, bool &complete);
   bool Parse_PPS(uint8_t *buf, int len);
-- 
1.8.1.6


From 7f4a00ce9bbf52f556be0d90a8414fec3cd48033 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Mon, 1 Apr 2013 11:17:22 +0200
Subject: [PATCH 51/63] vdr-plugin-vnsiserver: fix segfault when feeded with
 scrambled packets

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
index fba24d2..443f3f0 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
@@ -171,6 +171,9 @@ int cParser::ParsePESHeader(uint8_t *buf, size_t len)
 
 int cParser::ParsePacketHeader(uint8_t *data)
 {
+  if (TsIsScrambled(data))
+    return -1;
+
   if (TsPayloadStart(data))
   {
     m_IsPusi = true;
@@ -234,6 +237,11 @@ bool cParser::AddPESPacket(uint8_t *data, int size)
       {
         hdr_len = 9;
         bytesNeeded = hdr_len-m_PesHeaderPtr;
+        if ((m_PesHeader[6] & 0x30))
+        {
+          Reset();
+          return false;
+        }
         if (size < bytesNeeded)
         {
           memcpy(m_PesHeader+m_PesHeaderPtr, data, size);
@@ -281,6 +289,11 @@ bool cParser::AddPESPacket(uint8_t *data, int size)
     {
       if (PesIsVideoPacket(data) || PesIsAudioPacket(data))
       {
+        if ((data[6] & 0x30))
+        {
+          Reset();
+          return false;
+        }
         if (size < 9)
         {
           memcpy(m_PesHeader+m_PesHeaderPtr, data, size);
-- 
1.8.1.6


From 5d29a506e9de43cea58ee012edbd9ddd4023eb39 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Tue, 2 Apr 2013 17:51:53 +0200
Subject: [PATCH 52/63] vdr-plugin-vnsiserver: atsc does not suppport mpeg2
 audio, interpret pmt accordingly

---
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c   | 36 +++++++++++-----------
 1 file changed, 18 insertions(+), 18 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
index e0c5fb7..57ca056 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
@@ -463,39 +463,39 @@ void cVNSIDemuxer::SetChannelStreams(const cChannel *channel)
     AddStreamInfo(newStream);
   }
 
-  const int *APids = channel->Apids();
-  for ( ; *APids; APids++)
+  const int *DPids = channel->Dpids();
+  for ( ; *DPids; DPids++)
   {
     int index = 0;
-    if (!FindStream(*APids))
+    if (!FindStream(*DPids))
     {
-      newStream.pID = *APids;
-      newStream.type = stMPEG2AUDIO;
+      newStream.pID = *DPids;
+      newStream.type = stAC3;
 #if APIVERSNUM >= 10715
-      if (channel->Atype(index) == 0x0F)
-        newStream.type = stAACADTS;
-      else if (channel->Atype(index) == 0x11)
-        newStream.type = stAACLATM;
+      if (channel->Dtype(index) == SI::EnhancedAC3DescriptorTag)
+        newStream.type = stEAC3;
 #endif
-      newStream.SetLanguage(channel->Alang(index));
+      newStream.SetLanguage(channel->Dlang(index));
       AddStreamInfo(newStream);
     }
     index++;
   }
 
-  const int *DPids = channel->Dpids();
-  for ( ; *DPids; DPids++)
+  const int *APids = channel->Apids();
+  for ( ; *APids; APids++)
   {
     int index = 0;
-    if (!FindStream(*DPids))
+    if (!FindStream(*APids))
     {
-      newStream.pID = *DPids;
-      newStream.type = stAC3;
+      newStream.pID = *APids;
+      newStream.type = stMPEG2AUDIO;
 #if APIVERSNUM >= 10715
-      if (channel->Dtype(index) == SI::EnhancedAC3DescriptorTag)
-        newStream.type = stEAC3;
+      if (channel->Atype(index) == 0x0F)
+        newStream.type = stAACADTS;
+      else if (channel->Atype(index) == 0x11)
+        newStream.type = stAACLATM;
 #endif
-      newStream.SetLanguage(channel->Dlang(index));
+      newStream.SetLanguage(channel->Alang(index));
       AddStreamInfo(newStream);
     }
     index++;
-- 
1.8.1.6


From 3ce585901aa179ff708e3e062d7ad30408c48719 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Thu, 4 Apr 2013 13:02:26 +0200
Subject: [PATCH 53/63] vdr-plugin-vnsiserver: increase max buffer size for pes
 packets

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c      | 4 ++--
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
index 443f3f0..56a7a6b 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
@@ -334,9 +334,9 @@ bool cParser::AddPESPacket(uint8_t *data, int size)
 
   if (m_PesBufferPtr + size >= m_PesBufferSize)
   {
-    if (m_PesBufferPtr + size >= 500000)
+    if (m_PesBufferPtr + size >= 1000000)
     {
-      ERRORLOG("cParser::AddPESPacket - max buffer size reached");
+      ERRORLOG("cParser::AddPESPacket - max buffer size reached, pid: %d", m_pID);
       Reset();
       return false;
     }
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
index b2382d3..f53cbe4 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
@@ -58,7 +58,7 @@
   m_PixelAspect.den   = 1;
   m_PixelAspect.num   = 0;
   memset(&m_streamData, 0, sizeof(m_streamData));
-  m_PesBufferInitialSize      = 80000;
+  m_PesBufferInitialSize      = 240000;
 
   m_IsVideo = true;
   Reset();
-- 
1.8.1.6


From efd439576103e74761c879ff09694f6e092c6afc Mon Sep 17 00:00:00 2001
From: xbmc <fernetmenta@online.de>
Date: Sat, 6 Apr 2013 13:41:36 +0200
Subject: [PATCH 54/63] vnsi: disable callback PVRRecording, fixes deadlock

---
 addons/pvr.vdr.vnsi/src/VNSIData.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/addons/pvr.vdr.vnsi/src/VNSIData.cpp b/addons/pvr.vdr.vnsi/src/VNSIData.cpp
index fcf8d15..20f25f3 100644
--- a/addons/pvr.vdr.vnsi/src/VNSIData.cpp
+++ b/addons/pvr.vdr.vnsi/src/VNSIData.cpp
@@ -818,7 +818,7 @@ void *cVNSIData::Process()
         char* str1      = vresp->extract_String();
         char* str2      = vresp->extract_String();
 
-        PVR->Recording(str1, str2, on!=0?true:false);
+//        PVR->Recording(str1, str2, on!=0?true:false);
         PVR->TriggerTimerUpdate();
 
         delete[] str1;
-- 
1.8.1.6


From 676c8815eb37dc932868abff923ddc0ed95cdf85 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Sun, 7 Apr 2013 14:59:13 +0200
Subject: [PATCH 55/63] vdr-plugin-vnsiserver: recplayer, drop NOATIME flag on
 open

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.c
index ee947ab..2c5f024 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/recplayer.c
@@ -152,7 +152,7 @@ bool cRecPlayer::openFile(int index)
   fileNameFromIndex(index);
   INFOLOG("openFile called for index %i string:%s", index, m_fileName);
 
-  m_file = open(m_fileName, O_RDONLY | O_NOATIME);
+  m_file = open(m_fileName, O_RDONLY);
   if (m_file == -1)
   {
     INFOLOG("file failed to open");
-- 
1.8.1.6


From 46bab59f8cde3b14a92af516916ff4042cc6f922 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Sun, 14 Apr 2013 18:41:32 +0200
Subject: [PATCH 56/63] vdr-plugin-vnsiserver: fix potential segfault when
 reading incorrent pes header size

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c | 10 ++++++++++
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h |  4 +++-
 2 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
index 56a7a6b..983925f 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
@@ -256,6 +256,11 @@ bool cParser::AddPESPacket(uint8_t *data, int size)
           size -= bytesNeeded;
         }
         hdr_len = PesHeaderLength(m_PesHeader);
+        if (hdr_len > PES_HEADER_LENGTH)
+        {
+          Reset();
+          return false;
+        }
       }
       bytesNeeded = hdr_len-m_PesHeaderPtr;
       if (size < bytesNeeded)
@@ -301,6 +306,11 @@ bool cParser::AddPESPacket(uint8_t *data, int size)
           return false;
         }
         hdr_len = PesHeaderLength(data);
+        if (hdr_len > PES_HEADER_LENGTH)
+        {
+          Reset();
+          return false;
+        }
       }
       if (size < hdr_len)
       {
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
index 5f20b10..b63512e 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
@@ -133,6 +133,8 @@ struct sPtsWrap
 
 class cTSStream;
 
+#define PES_HEADER_LENGTH 128
+
 class cParser
 {
 friend class cTSStream;
@@ -151,7 +153,7 @@ class cParser
 protected:
   virtual bool IsValidStartCode(uint8_t *buf, int size);
 
-  uint8_t     m_PesHeader[64];
+  uint8_t     m_PesHeader[PES_HEADER_LENGTH];
   int         m_PesHeaderPtr;
   int         m_PesPacketLength;
   uint8_t    *m_PesBuffer;
-- 
1.8.1.6


From 44ab33438af208e9c50ca7cec7f86f1ede874dd7 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Thu, 18 Apr 2013 08:34:36 +0200
Subject: [PATCH 57/63] vdr-plugin-vnsiserver: present specific parser errors
 to user

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/config.h |  6 +++
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c   | 18 +++++++-
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h   |  2 +
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c | 53 ++++++++++++----------
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h |  5 +-
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c  | 24 +++++++++-
 6 files changed, 79 insertions(+), 29 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/config.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/config.h
index d99deec..24657ad 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/config.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/config.h
@@ -64,6 +64,12 @@
 #define FOLDERDELIMCHAR '~'
 #endif
 
+// Error flags
+#define ERROR_PES_GENERAL   0x01
+#define ERROR_PES_SCRAMBLE  0x02
+#define ERROR_PES_STARTCODE 0x04
+#define ERROR_DEMUX_NODATA  0x10
+
 class cVNSIServerConfig
 {
 public:
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
index 57ca056..05c5344 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
@@ -56,6 +56,7 @@ void cVNSIDemuxer::Open(const cChannel &channel, cVideoBuffer *videoBuffer)
   m_PtsWrap.m_NoOfWraps = 0;
   m_PtsWrap.m_ConfirmCount = 0;
   m_MuxPacketSerial = 0;
+  m_Error = ERROR_DEMUX_NODATA;
 }
 
 void cVNSIDemuxer::Close()
@@ -94,6 +95,8 @@ int cVNSIDemuxer::Read(sStreamPacket *packet)
   else if (len != TS_SIZE)
     return -1;
 
+  m_Error &= ~ERROR_DEMUX_NODATA;
+
   int ts_pid = TsPid(buf);
 
   // parse PAT/PMT
@@ -128,7 +131,8 @@ int cVNSIDemuxer::Read(sStreamPacket *packet)
   }
   else if (stream = FindStream(ts_pid))
   {
-    if (stream->ProcessTSPacket(buf, packet, NULL, m_WaitIFrame))
+    int error = stream->ProcessTSPacket(buf, packet, m_WaitIFrame);
+    if (error == 0)
     {
       if (m_WaitIFrame)
       {
@@ -142,6 +146,10 @@ int cVNSIDemuxer::Read(sStreamPacket *packet)
       packet->serial = m_MuxPacketSerial;
       return 1;
     }
+    else if (error < 0)
+    {
+      m_Error |= abs(error);
+    }
   }
 
   return 0;
@@ -604,3 +612,11 @@ bool cVNSIDemuxer::GetTimeAtPos(size_t *pos, int64_t *time)
   }
   return false;
 }
+
+uint16_t cVNSIDemuxer::GetError()
+{
+  uint16_t ret = m_Error;
+  m_Error = ERROR_DEMUX_NODATA;
+  return ret;
+}
+
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
index d5f6d9b..0cb53b9 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
@@ -61,6 +61,7 @@ class cVNSIDemuxer
   uint32_t GetSerial() { return m_MuxPacketSerial; }
   void SetSerial(uint32_t serial) { m_MuxPacketSerial = serial; }
   void BufferStatus(bool &timeshift, int &start, int &current, int &end);
+  uint16_t GetError();
 
 protected:
   bool EnsureParsers();
@@ -82,4 +83,5 @@ class cVNSIDemuxer
   cMutex m_Mutex;
   uint32_t m_MuxPacketSerial;
   sPtsWrap m_PtsWrap;
+  uint16_t m_Error;
 };
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
index 983925f..61cfaa5 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
@@ -69,7 +69,7 @@ void cParser::Reset()
   m_FoundFrame = false;
   m_PesPacketLength = 0;
   m_PesHeaderPtr = 0;
-  m_IsError = true;
+  m_Error = ERROR_PES_GENERAL;
 }
 /*
  * Extract DTS and PTS and update current values in stream
@@ -172,12 +172,15 @@ int cParser::ParsePESHeader(uint8_t *buf, size_t len)
 int cParser::ParsePacketHeader(uint8_t *data)
 {
   if (TsIsScrambled(data))
+  {
+    m_Error = ERROR_PES_SCRAMBLE;
     return -1;
+  }
 
   if (TsPayloadStart(data))
   {
     m_IsPusi = true;
-    m_IsError = false;
+    m_Error = 0;
   }
 
   int  bytes = TS_SIZE - TsPayloadOffset(data);
@@ -198,7 +201,7 @@ int cParser::ParsePacketHeader(uint8_t *data)
   }
 
   /* drop broken PES packets */
-  if (m_IsError)
+  if (m_Error)
   {
     return -1;
   }
@@ -231,17 +234,13 @@ bool cParser::AddPESPacket(uint8_t *data, int size)
       if (!IsValidStartCode(m_PesHeader, hdr_len))
       {
         Reset();
+        m_Error |= ERROR_PES_STARTCODE;
         return false;
       }
       if (PesIsVideoPacket(m_PesHeader) || PesIsAudioPacket(m_PesHeader))
       {
         hdr_len = 9;
         bytesNeeded = hdr_len-m_PesHeaderPtr;
-        if ((m_PesHeader[6] & 0x30))
-        {
-          Reset();
-          return false;
-        }
         if (size < bytesNeeded)
         {
           memcpy(m_PesHeader+m_PesHeaderPtr, data, size);
@@ -255,6 +254,12 @@ bool cParser::AddPESPacket(uint8_t *data, int size)
           data += bytesNeeded;
           size -= bytesNeeded;
         }
+        if ((m_PesHeader[6] & 0x30))
+        {
+          Reset();
+          m_Error |= ERROR_PES_SCRAMBLE;
+          return false;
+        }
         hdr_len = PesHeaderLength(m_PesHeader);
         if (hdr_len > PES_HEADER_LENGTH)
         {
@@ -288,23 +293,25 @@ bool cParser::AddPESPacket(uint8_t *data, int size)
     else if (!IsValidStartCode(data, size))
     {
       Reset();
+      m_Error |= ERROR_PES_STARTCODE;
       return false;
     }
     else
     {
       if (PesIsVideoPacket(data) || PesIsAudioPacket(data))
       {
-        if ((data[6] & 0x30))
-        {
-          Reset();
-          return false;
-        }
         if (size < 9)
         {
           memcpy(m_PesHeader+m_PesHeaderPtr, data, size);
           m_PesHeaderPtr += size;
           return false;
         }
+        if ((data[6] & 0x30))
+        {
+          Reset();
+          m_Error |= ERROR_PES_STARTCODE;
+          return false;
+        }
         hdr_len = PesHeaderLength(data);
         if (hdr_len > PES_HEADER_LENGTH)
         {
@@ -474,7 +481,7 @@ inline bool cParser::IsValidStartCode(uint8_t *buf, int size)
   }
 }
 
-bool cTSStream::ProcessTSPacket(uint8_t *data, sStreamPacket *pkt, int64_t *dts, bool iframe)
+int cTSStream::ProcessTSPacket(uint8_t *data, sStreamPacket *pkt, bool iframe)
 {
   if (!data)
     return false;
@@ -484,20 +491,18 @@ bool cTSStream::ProcessTSPacket(uint8_t *data, sStreamPacket *pkt, int64_t *dts,
 
   int payloadSize = m_pesParser->ParsePacketHeader(data);
   if (payloadSize <= 0)
-    return false;
+  {
+    return -m_pesParser->GetError();
+  }
 
   if (!m_pesParser->AddPESPacket(data+TS_SIZE-payloadSize, payloadSize))
-    return false;
-  if (dts)
   {
-    if (m_pesParser->m_curDTS == DVD_NOPTS_VALUE)
-      return false;
-    *dts = m_pesParser->m_curDTS;
-    return true;
+    return -m_pesParser->GetError();
   }
+
   m_pesParser->Parse(pkt);
   if (iframe && !m_pesParser->IsVideo())
-    return false;
+    return 1;
 
   if (pkt->data)
   {
@@ -511,10 +516,10 @@ bool cTSStream::ProcessTSPacket(uint8_t *data, sStreamPacket *pkt, int64_t *dts,
     pkt->dts      = Rescale(dts, DVD_TIME_BASE, 90000);
     pkt->pts      = Rescale(pts, DVD_TIME_BASE, 90000);
     pkt->duration = Rescale(pkt->duration, DVD_TIME_BASE, 90000);
-    return true;
+    return 0;
   }
 
-  return false;
+  return 1;
 }
 
 bool cTSStream::ReadTime(uint8_t *data, int64_t *dts)
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
index b63512e..f3e8db4 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.h
@@ -149,6 +149,7 @@ class cParser
   int ParsePESHeader(uint8_t *buf, size_t len);
   virtual void Reset();
   bool IsVideo() {return m_IsVideo; }
+  uint16_t GetError() { return m_Error; }
 
 protected:
   virtual bool IsValidStartCode(uint8_t *buf, int size);
@@ -173,7 +174,7 @@ class cParser
   int64_t     m_prevDTS;
 
   bool        m_IsPusi;
-  bool        m_IsError;
+  uint16_t    m_Error;
 
   cTSStream  *m_Stream;
   bool        m_IsVideo;
@@ -215,7 +216,7 @@ class cTSStream
   cTSStream(eStreamType type, int pid, sPtsWrap *ptsWrap);
   virtual ~cTSStream();
 
-  bool ProcessTSPacket(uint8_t *data, sStreamPacket *pkt, int64_t *dts, bool iframe);
+  int ProcessTSPacket(uint8_t *data, sStreamPacket *pkt, bool iframe);
   bool ReadTime(uint8_t *data, int64_t *dts);
   void ResetParser();
 
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
index 8c5562d..c662891 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/streamer.c
@@ -204,7 +204,6 @@ void cLiveStreamer::Action(void)
       usleep(10000);
       if(m_last_tick.Elapsed() >= (uint64_t)(m_scanTimeout*1000))
       {
-        INFOLOG("No Signal");
         sendStreamStatus();
         m_last_tick.Set(0);
         m_SignalLost = true;
@@ -564,7 +563,28 @@ void cLiveStreamer::sendStreamStatus()
     delete resp;
     return;
   }
-  resp->add_String("No Signal");
+  uint16_t error = m_Demuxer.GetError();
+  if (error & ERROR_PES_SCRAMBLE)
+  {
+    INFOLOG("Channel: scrambled %d", error);
+    resp->add_String(cString::sprintf("Channel: scrambled (%d)", error));
+  }
+  else if (error & ERROR_PES_STARTCODE)
+  {
+    INFOLOG("Channel: startcode %d", error);
+    resp->add_String(cString::sprintf("Channel: encrypted? (%d)", error));
+  }
+  else if (error & ERROR_DEMUX_NODATA)
+  {
+    INFOLOG("Channel: no data %d", error);
+    resp->add_String(cString::sprintf("Channel: no data"));
+  }
+  else
+  {
+    INFOLOG("Channel: unknown error %d", error);
+    resp->add_String(cString::sprintf("Channel: unknown error (%d)", error));
+  }
+
   resp->finaliseStream();
   m_Socket->write(resp->getPtr(), resp->getLen());
   delete resp;
-- 
1.8.1.6


From 911d3c029323dc6f515c7843d2755916f1487fae Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Thu, 18 Apr 2013 21:03:16 +0200
Subject: [PATCH 58/63] vdr-plugin-vnsiserver: squash to specific errors

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
index 61cfaa5..26c8291 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
@@ -186,11 +186,14 @@ int cParser::ParsePacketHeader(uint8_t *data)
   int  bytes = TS_SIZE - TsPayloadOffset(data);
 
   if(bytes < 0 || bytes > TS_SIZE)
+  {
+    m_Error = ERROR_PES_GENERAL;
     return -1;
+  }
 
   if (TsError(data))
   {
-    ERRORLOG("transport error");
+    m_Error = ERROR_PES_GENERAL;
     return -1;
   }
 
@@ -490,7 +493,9 @@ int cTSStream::ProcessTSPacket(uint8_t *data, sStreamPacket *pkt, bool iframe)
     return false;
 
   int payloadSize = m_pesParser->ParsePacketHeader(data);
-  if (payloadSize <= 0)
+  if (payloadSize == 0)
+    return 1;
+  else if (payloadSize < 0)
   {
     return -m_pesParser->GetError();
   }
-- 
1.8.1.6


From 835fe1e6da2d86c232cdd0758bea2dd25f07a9c0 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Sun, 28 Apr 2013 09:16:48 +0200
Subject: [PATCH 59/63] vdr-plugin-vnsiserver: fix layer for mpeg audio

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.c
index 8eb6209..2c62030 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_MPEGAudio.c
@@ -109,6 +109,7 @@ int cParserMPEG2Audio::FindHeaders(uint8_t *buf, int buf_size)
     int layer = bs.readBits(2);
     if (layer == 0)
       return 0;
+    layer = 4 - layer;
 
     bs.skipBits(1); // protetion bit
     int bitrate_index = bs.readBits(4);
-- 
1.8.1.6


From 66aa5cc0f07776ffacf7f3d89ab06a4e67e4122a Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Sun, 28 Apr 2013 09:33:23 +0200
Subject: [PATCH 60/63] vdr-plugin-vnsiserver: silence compiler warning

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
index 330783c..b724ce7 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/vnsiclient.c
@@ -1557,7 +1557,7 @@ bool cVNSIClient::processRECORDINGS_Rename() /* OPCODE 103 */
 
     // replace spaces in newtitle
     strreplace(newtitle, ' ', '_');
-    char* filename_new = new char[512];
+    char* filename_new = new char[1024];
     strncpy(filename_new, filename_old, 512);
     sep = strrchr(filename_new, '/');
     if(sep != NULL) {
-- 
1.8.1.6


From 26c035e0453de50148c71edde6508fdf135b7e08 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Sun, 28 Apr 2013 09:37:03 +0200
Subject: [PATCH 61/63] vdr-plugin-vnsiserver: allow timeshift buffer in RAM to
 larger than 2 GB, change size_t to off_t

---
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c   |  4 +-
 .../pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h   |  2 +-
 .../vdr-plugin-vnsiserver/videobuffer.c            | 54 +++++++++++-----------
 .../vdr-plugin-vnsiserver/videobuffer.h            | 10 ++--
 4 files changed, 35 insertions(+), 35 deletions(-)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
index 05c5344..3ec753a 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.c
@@ -157,7 +157,7 @@ int cVNSIDemuxer::Read(sStreamPacket *packet)
 
 bool cVNSIDemuxer::SeekTime(int64_t time)
 {
-  size_t pos, pos_min, pos_max, pos_limit, start_pos;
+  off_t pos, pos_min, pos_max, pos_limit, start_pos;
   int64_t ts, ts_min, ts_max, last_ts;
   int no_change;
 
@@ -591,7 +591,7 @@ void cVNSIDemuxer::SetChannelPids(cChannel *channel, cPatPmtParser *patPmtParser
                    Tpid);
 }
 
-bool cVNSIDemuxer::GetTimeAtPos(size_t *pos, int64_t *time)
+bool cVNSIDemuxer::GetTimeAtPos(off_t *pos, int64_t *time)
 {
   uint8_t *buf;
   int len;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
index 0cb53b9..019595f 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/demuxer.h
@@ -70,7 +70,7 @@ class cVNSIDemuxer
   void SetChannelPids(cChannel *channel, cPatPmtParser *patPmtParser);
   cTSStream *FindStream(int Pid);
   void AddStreamInfo(sStreamInfo &stream);
-  bool GetTimeAtPos(size_t *pos, int64_t *time);
+  bool GetTimeAtPos(off_t *pos, int64_t *time);
   std::list<cTSStream*> m_Streams;
   std::list<cTSStream*>::iterator m_StreamsIterator;
   std::list<sStreamInfo> m_StreamInfos;
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
index f65d8ac..0c26807 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.c
@@ -107,10 +107,10 @@ class cVideoBufferTimeshift : public cVideoBuffer
 {
 friend class cVideoBuffer;
 public:
-  virtual size_t GetPosMin();
-  virtual size_t GetPosMax();
-  virtual size_t GetPosCur();
-  virtual void GetPositions(size_t *cur, size_t *min, size_t *max);
+  virtual off_t GetPosMin();
+  virtual off_t GetPosMax();
+  virtual off_t GetPosCur();
+  virtual void GetPositions(off_t *cur, off_t *min, off_t *max);
   virtual bool HasBuffer() { return true; };
 
 protected:
@@ -135,7 +135,7 @@ class cVideoBufferTimeshift : public cVideoBuffer
   m_BytesConsumed = 0;
 }
 
-size_t cVideoBufferTimeshift::GetPosMin()
+off_t cVideoBufferTimeshift::GetPosMin()
 {
   off_t ret;
   if (!m_BufferFull)
@@ -148,23 +148,23 @@ size_t cVideoBufferTimeshift::GetPosMin()
   return ret;
 }
 
-size_t cVideoBufferTimeshift::GetPosMax()
+off_t cVideoBufferTimeshift::GetPosMax()
 {
-   size_t ret = m_WritePtr;
+   off_t ret = m_WritePtr;
    if (ret < GetPosMin())
      ret += m_BufferSize;
    return ret;
 }
 
-size_t cVideoBufferTimeshift::GetPosCur()
+off_t cVideoBufferTimeshift::GetPosCur()
 {
-  size_t ret = m_ReadPtr;
+  off_t ret = m_ReadPtr;
   if (ret < GetPosMin())
     ret += m_BufferSize;
   return ret;
 }
 
-void cVideoBufferTimeshift::GetPositions(size_t *cur, size_t *min, size_t *max)
+void cVideoBufferTimeshift::GetPositions(off_t *cur, off_t *min, off_t *max)
 {
   cMutexLock lock(&m_Mutex);
 
@@ -178,7 +178,7 @@ off_t cVideoBufferTimeshift::Available()
 {
   cMutexLock lock(&m_Mutex);
 
-  size_t ret;
+  off_t ret;
   if (m_ReadPtr <= m_WritePtr)
     ret = m_WritePtr - m_ReadPtr;
   else
@@ -194,7 +194,7 @@ class cVideoBufferRAM : public cVideoBufferTimeshift
 public:
   virtual void Put(uint8_t *buf, unsigned int size);
   virtual int ReadBlock(uint8_t **buf, unsigned int size);
-  virtual void SetPos(size_t pos);
+  virtual void SetPos(off_t pos);
 
 protected:
   cVideoBufferRAM();
@@ -217,7 +217,7 @@ class cVideoBufferRAM : public cVideoBufferTimeshift
 
 bool cVideoBufferRAM::Init()
 {
-  m_BufferSize = (size_t)TimeshiftBufferSize*100*1000*1000;
+  m_BufferSize = (off_t)TimeshiftBufferSize*100*1000*1000;
   INFOLOG("allocated timeshift buffer with size: %ld", m_BufferSize);
   m_Buffer = (uint8_t*)malloc(m_BufferSize + m_Margin);
   m_BufferPtr = m_Buffer + m_Margin;
@@ -227,7 +227,7 @@ bool cVideoBufferRAM::Init()
     return true;
 }
 
-void cVideoBufferRAM::SetPos(size_t pos)
+void cVideoBufferRAM::SetPos(off_t pos)
 {
   cMutexLock lock(&m_Mutex);
 
@@ -280,7 +280,7 @@ int cVideoBufferRAM::ReadBlock(uint8_t **buf, unsigned int size)
   m_BytesConsumed = 0;
 
   // check if we have anything to read
-  size_t readBytes = Available();
+  off_t readBytes = Available();
   if (readBytes < m_Margin)
   {
     return 0;
@@ -321,10 +321,10 @@ class cVideoBufferFile : public cVideoBufferTimeshift
 {
 friend class cVideoBuffer;
 public:
-  virtual size_t GetPosMax();
+  virtual off_t GetPosMax();
   virtual void Put(uint8_t *buf, unsigned int size);
   virtual int ReadBlock(uint8_t **buf, unsigned int size);
-  virtual void SetPos(size_t pos);
+  virtual void SetPos(off_t pos);
 
 protected:
   cVideoBufferFile();
@@ -375,7 +375,7 @@ bool cVideoBufferFile::Init()
   if (!m_ReadCache)
     return false;
 
-  m_BufferSize = (size_t)TimeshiftBufferFileSize*1000*1000*1000;
+  m_BufferSize = (off_t)TimeshiftBufferFileSize*1000*1000*1000;
 
   struct stat sb;
   if ((*TimeshiftBufferDir) && stat(TimeshiftBufferDir, &sb) == 0 && S_ISDIR(sb.st_mode))
@@ -413,7 +413,7 @@ bool cVideoBufferFile::Init()
   return true;
 }
 
-void cVideoBufferFile::SetPos(size_t pos)
+void cVideoBufferFile::SetPos(off_t pos)
 {
   cMutexLock lock(&m_Mutex);
 
@@ -424,9 +424,9 @@ void cVideoBufferFile::SetPos(size_t pos)
   m_ReadCacheSize = 0;
 }
 
-size_t cVideoBufferFile::GetPosMax()
+off_t cVideoBufferFile::GetPosMax()
 {
-  size_t posMax = cVideoBufferTimeshift::GetPosMax();
+  off_t posMax = cVideoBufferTimeshift::GetPosMax();
   if (posMax >= m_ReadCacheMaxSize)
     posMax -= m_ReadCacheMaxSize;
   else
@@ -519,7 +519,7 @@ int cVideoBufferFile::ReadBlock(uint8_t **buf, unsigned int size)
   m_BytesConsumed = 0;
 
   // check if we have anything to read
-  size_t readBytes;
+  off_t readBytes;
   if (m_ReadCacheSize && ((m_ReadCachePtr + m_Margin) <= m_ReadCacheSize))
   {
     readBytes = m_ReadCacheSize - m_ReadCachePtr;
@@ -601,7 +601,7 @@ class cVideoBufferRecording : public cVideoBufferFile
 {
 friend class cVideoBuffer;
 public:
-  virtual size_t GetPosMax();
+  virtual off_t GetPosMax();
   virtual void Put(uint8_t *buf, unsigned int size);
   virtual int ReadBlock(uint8_t **buf, unsigned int size);
 
@@ -630,7 +630,7 @@ class cVideoBufferRecording : public cVideoBufferFile
     delete m_RecPlayer;
 }
 
-size_t cVideoBufferRecording::GetPosMax()
+off_t cVideoBufferRecording::GetPosMax()
 {
   m_RecPlayer->reScan();
   m_WritePtr = m_RecPlayer->getLengthBytes();
@@ -689,7 +689,7 @@ int cVideoBufferRecording::ReadBlock(uint8_t **buf, unsigned int size)
   m_BytesConsumed = 0;
 
   // check if we have anything to read
-  size_t readBytes;
+  off_t readBytes;
   if (m_ReadCacheSize && ((m_ReadCachePtr + m_Margin) <= m_ReadCacheSize))
   {
     readBytes = m_ReadCacheSize - m_ReadCachePtr;
@@ -744,7 +744,7 @@ class cVideoBufferTest : public cVideoBufferFile
 {
 friend class cVideoBuffer;
 public:
-  virtual size_t GetPosMax();
+  virtual off_t GetPosMax();
   virtual void Put(uint8_t *buf, unsigned int size);
 
 protected:
@@ -771,7 +771,7 @@ class cVideoBufferTest : public cVideoBufferFile
   }
 }
 
-size_t cVideoBufferTest::GetPosMax()
+off_t cVideoBufferTest::GetPosMax()
 {
   m_WritePtr = GetPosEnd();
   return cVideoBufferTimeshift::GetPosMax();
diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h
index 6e2dad4..8ea74fc 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/videobuffer.h
@@ -35,11 +35,11 @@ class cVideoBuffer
   static cVideoBuffer* Create(cRecording *rec);
   virtual void Put(uint8_t *buf, unsigned int size) = 0;
   virtual int ReadBlock(uint8_t **buf, unsigned int size) = 0;
-  virtual size_t GetPosMin() { return 0; };
-  virtual size_t GetPosMax() { return 0; };
-  virtual size_t GetPosCur() { return 0; };
-  virtual void GetPositions(size_t *cur, size_t *min,size_t *max) {};
-  virtual void SetPos(size_t pos) {};
+  virtual off_t GetPosMin() { return 0; };
+  virtual off_t GetPosMax() { return 0; };
+  virtual off_t GetPosCur() { return 0; };
+  virtual void GetPositions(off_t *cur, off_t *min, off_t *max) {};
+  virtual void SetPos(off_t pos) {};
   virtual void SetCache(bool on) {};
   virtual bool HasBuffer() { return false; };
   int Read(uint8_t **buf, unsigned int size);
-- 
1.8.1.6


From 00a56e96f6827ceedfe822af871d3946154c9bdb Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Sun, 28 Apr 2013 10:02:53 +0200
Subject: [PATCH 62/63] vdr-plugin-vnsiserver: h264 parser - reset stream data
 on error

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
index f53cbe4..6d45e30 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser_h264.c
@@ -127,6 +127,7 @@ void cParserH264::Reset()
   m_NeedIFrame = true;
   m_NeedSPS = true;
   m_NeedPPS = true;
+  memset(&m_streamData, 0, sizeof(m_streamData));
 }
 
 int cParserH264::Parse_H264(uint32_t startcode, int buf_ptr, bool &complete)
-- 
1.8.1.6


From 33b933a75a308c083df241133017397854df7d9a Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Wed, 29 May 2013 14:59:16 +0200
Subject: [PATCH 63/63] vdr-plugin-vnsiserver: do not assume a pes header right
 after pusi for video streams

---
 addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
index 26c8291..7ea6cf1 100644
--- a/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
+++ b/addons/pvr.vdr.vnsi/vdr-plugin-vnsiserver/parser.c
@@ -215,6 +215,10 @@ int cParser::ParsePacketHeader(uint8_t *data)
 bool cParser::AddPESPacket(uint8_t *data, int size)
 {
   // check for beginning of a PES packet
+  if (m_IsPusi && m_IsVideo && !IsValidStartCode(data, 4))
+  {
+    m_IsPusi = false;
+  }
   if (m_IsPusi)
   {
     int hdr_len = 6;
-- 
1.8.1.6

